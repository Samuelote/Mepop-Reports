{"version":3,"file":"static/development/pages/reports.js","sources":["webpack:///webpack/bootstrap","webpack:///external \"next/dist/next-server/lib/router-context.js\"","webpack:///external \"next/dist/next-server/lib/utils.js\"","webpack:///../../client/link.tsx","webpack:///../../client/router.ts","webpack:///../../client/with-router.tsx","webpack:///../../../next-server/lib/mitt.ts","webpack:///../../../../next-server/lib/router/router.ts","webpack:///../../../../../next-server/lib/router/utils/is-dynamic.ts","webpack:///../../../../../next-server/lib/router/utils/route-matcher.ts","webpack:///../../../../../next-server/lib/router/utils/route-regex.ts","webpack:///../../../next-server/lib/utils.ts","webpack:///../node_modules/next/link.js","webpack:///../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///../node_modules/next/node_modules/@babel/runtime/helpers/typeof.js","webpack:///./components/dashboard/util.js","webpack:///./components/general/BlurBackground.js","webpack:///./components/general/SaleDetails.js","webpack:///./components/general/SalesTable.js","webpack:///./components/reports/CompareView.js","webpack:///./components/reports/ProfitsByMonth/index.js","webpack:///./components/reports/RecentSales/index.js","webpack:///./components/reports/RevenueOverview/index.js","webpack:///./components/reports/SalesAndListingsByDay/index.js","webpack:///./components/reports/SalesByCategory/index.js","webpack:///./components/reports/SalesByDate/index.js","webpack:///./components/reports/SalesByPaymentType/index.js","webpack:///./components/reports/SalesByTime/index.js","webpack:///./components/reports/SalesMap/index.js","webpack:///./components/reports/TopValueBoxes/index.js","webpack:///./components/reports/TotalEarnings/index.js","webpack:///./components/reports/VariableLineGraph/index.js","webpack:///./components/reports/index.js","webpack:///./components/reports/util/general.js","webpack:///./components/reports/util/geopoints.js","webpack:///./components/reports/util/grouping.js","webpack:///./components/reports/util/tables.js","webpack:///./pages/reports.js","webpack:///./styles/elements/BlurShield/index.js","webpack:///./styles/elements/Button/index.js","webpack:///./styles/elements/Card/index.js","webpack:///./styles/elements/Loading/Spinner.js","webpack:///./styles/elements/Loading/ThreeDotLoader.js","webpack:///./styles/elements/NoDataFound/index.js","webpack:///./styles/elements/Switch/index.js","webpack:///./styles/elements/Table/index.js","webpack:///./styles/elements/Text/index.js","webpack:///./styles/elements/Tooltip/index.js","webpack:///./styles/layout/Flex/index.js","webpack:///./styles/reporting/AreaChart/index.js","webpack:///./styles/reporting/BarChart/index.js","webpack:///./styles/reporting/BubbleChart/index.js","webpack:///./styles/reporting/LineChart/index.js","webpack:///./styles/reporting/PieChart/index.js","webpack:///./styles/reporting/RadialChart/index.js","webpack:///./styles/reporting/TotalEarnings/index.js","webpack:///./styles/reporting/TotalEarnings/styles.js","webpack:///./styles/reporting/ValueBox/index.js","webpack:///./styles/reporting/VertBarChart/index.js","webpack:///./styles/reporting/styleUtil.js","webpack:///./theme.js","webpack:///external \"currency.js\"","webpack:///external \"google-map-react\"","webpack:///external \"lodash\"","webpack:///external \"moment\"","webpack:///external \"polished\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"react-countup\"","webpack:///external \"react-heatmap-grid\"","webpack:///external \"react-ios-switch\"","webpack:///external \"react-is\"","webpack:///external \"react-redux\"","webpack:///external \"react-tippy\"","webpack:///external \"react-virtualized\"","webpack:///external \"rebass\"","webpack:///external \"rebass/styled-components\"","webpack:///external \"recharts\"","webpack:///external \"styled-components\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"next/dist/next-server/lib/router-context.js\");","module.exports = require(\"next/dist/next-server/lib/utils.js\");","declare const __NEXT_DATA__: any\n\nimport React, { Children, Component } from 'react'\nimport { parse, resolve, UrlObject } from 'url'\nimport { PrefetchOptions } from '../next-server/lib/router/router'\nimport {\n  execOnce,\n  formatWithValidation,\n  getLocationOrigin,\n} from '../next-server/lib/utils'\nimport Router from './router'\nimport { addBasePath } from '../next-server/lib/router/router'\n\nfunction isLocal(href: string): boolean {\n  const url = parse(href, false, true)\n  const origin = parse(getLocationOrigin(), false, true)\n\n  return (\n    !url.host || (url.protocol === origin.protocol && url.host === origin.host)\n  )\n}\n\ntype Url = string | UrlObject\ntype FormatResult = { href: string; as?: string }\n\nfunction memoizedFormatUrl(formatFunc: (href: Url, as?: Url) => FormatResult) {\n  let lastHref: null | Url = null\n  let lastAs: undefined | null | Url = null\n  let lastResult: null | FormatResult = null\n  return (href: Url, as?: Url) => {\n    if (lastResult && href === lastHref && as === lastAs) {\n      return lastResult\n    }\n\n    const result = formatFunc(href, as)\n    lastHref = href\n    lastAs = as\n    lastResult = result\n    return result\n  }\n}\n\nfunction formatUrl(url: Url): string {\n  return url && typeof url === 'object' ? formatWithValidation(url) : url\n}\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n}\n\nlet observer: IntersectionObserver\nconst listeners = new Map<Element, () => void>()\nconst IntersectionObserver =\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction getObserver(): IntersectionObserver | undefined {\n  // Return shared instance of IntersectionObserver if already created\n  if (observer) {\n    return observer\n  }\n\n  // Only create shared IntersectionObserver if supported in browser\n  if (!IntersectionObserver) {\n    return undefined\n  }\n\n  return (observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (!listeners.has(entry.target)) {\n          return\n        }\n\n        const cb = listeners.get(entry.target)!\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          observer.unobserve(entry.target)\n          listeners.delete(entry.target)\n          cb()\n        }\n      })\n    },\n    { rootMargin: '200px' }\n  ))\n}\n\nconst listenToIntersections = (el: Element, cb: () => void) => {\n  const observer = getObserver()\n  if (!observer) {\n    return () => {}\n  }\n\n  observer.observe(el)\n  listeners.set(el, cb)\n  return () => {\n    try {\n      observer.unobserve(el)\n    } catch (err) {\n      console.error(err)\n    }\n    listeners.delete(el)\n  }\n}\n\nclass Link extends Component<LinkProps> {\n  p: boolean\n\n  constructor(props: LinkProps) {\n    super(props)\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.prefetch) {\n        console.warn(\n          'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n        )\n      }\n    }\n    this.p = props.prefetch !== false\n  }\n\n  cleanUpListeners = () => {}\n\n  componentWillUnmount(): void {\n    this.cleanUpListeners()\n  }\n\n  getPaths(): string[] {\n    const { pathname } = window.location\n    const { href: parsedHref, as: parsedAs } = this.formatUrls(\n      this.props.href,\n      this.props.as\n    )\n    const resolvedHref = resolve(pathname, parsedHref)\n    return [resolvedHref, parsedAs ? resolve(pathname, parsedAs) : resolvedHref]\n  }\n\n  handleRef(ref: Element): void {\n    if (this.p && IntersectionObserver && ref && ref.tagName) {\n      this.cleanUpListeners()\n\n      const isPrefetched =\n        prefetched[\n          this.getPaths().join(\n            // Join on an invalid URI character\n            '%'\n          )\n        ]\n      if (!isPrefetched) {\n        this.cleanUpListeners = listenToIntersections(ref, () => {\n          this.prefetch()\n        })\n      }\n    }\n  }\n\n  // The function is memoized so that no extra lifecycles are needed\n  // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  formatUrls = memoizedFormatUrl((href, asHref) => {\n    return {\n      href: addBasePath(formatUrl(href)),\n      as: asHref ? addBasePath(formatUrl(asHref)) : asHref,\n    }\n  })\n\n  linkClicked = (e: React.MouseEvent): void => {\n    const { nodeName, target } = e.currentTarget as HTMLAnchorElement\n    if (\n      nodeName === 'A' &&\n      ((target && target !== '_self') ||\n        e.metaKey ||\n        e.ctrlKey ||\n        e.shiftKey ||\n        (e.nativeEvent && e.nativeEvent.which === 2))\n    ) {\n      // ignore click for new tab / new window behavior\n      return\n    }\n\n    let { href, as } = this.formatUrls(this.props.href, this.props.as)\n\n    if (!isLocal(href)) {\n      // ignore click if it's outside our scope (e.g. https://google.com)\n      return\n    }\n\n    const { pathname } = window.location\n    href = resolve(pathname, href)\n    as = as ? resolve(pathname, as) : href\n\n    e.preventDefault()\n\n    //  avoid scroll for urls with anchor refs\n    let { scroll } = this.props\n    if (scroll == null) {\n      scroll = as.indexOf('#') < 0\n    }\n\n    // replace state instead of push if prop is present\n    Router[this.props.replace ? 'replace' : 'push'](href, as, {\n      shallow: this.props.shallow,\n    }).then((success: boolean) => {\n      if (!success) return\n      if (scroll) {\n        window.scrollTo(0, 0)\n        document.body.focus()\n      }\n    })\n  }\n\n  prefetch(options?: PrefetchOptions): void {\n    if (!this.p || typeof window === 'undefined') return\n    // Prefetch the JSON page if asked (only in the client)\n    const paths = this.getPaths()\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Router.prefetch(paths[/* href */ 0], paths[/* asPath */ 1], options).catch(\n      (err) => {\n        if (process.env.NODE_ENV !== 'production') {\n          // rethrow to show invalid URL errors\n          throw err\n        }\n      }\n    )\n    prefetched[\n      paths.join(\n        // Join on an invalid URI character\n        '%'\n      )\n    ] = true\n  }\n\n  render() {\n    let { children } = this.props\n    const { href, as } = this.formatUrls(this.props.href, this.props.as)\n    // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n    if (typeof children === 'string') {\n      children = <a>{children}</a>\n    }\n\n    // This will return the first child, if multiple are provided it will throw an error\n    const child: any = Children.only(children)\n    const props: {\n      onMouseEnter: React.MouseEventHandler\n      onClick: React.MouseEventHandler\n      href?: string\n      ref?: any\n    } = {\n      ref: (el: any) => {\n        this.handleRef(el)\n\n        if (child && typeof child === 'object' && child.ref) {\n          if (typeof child.ref === 'function') child.ref(el)\n          else if (typeof child.ref === 'object') {\n            child.ref.current = el\n          }\n        }\n      },\n      onMouseEnter: (e: React.MouseEvent) => {\n        if (child.props && typeof child.props.onMouseEnter === 'function') {\n          child.props.onMouseEnter(e)\n        }\n        this.prefetch({ priority: true })\n      },\n      onClick: (e: React.MouseEvent) => {\n        if (child.props && typeof child.props.onClick === 'function') {\n          child.props.onClick(e)\n        }\n        if (!e.defaultPrevented) {\n          this.linkClicked(e)\n        }\n      },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (\n      this.props.passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      props.href = as || href\n    }\n\n    // Add the ending slash to the paths. So, we can serve the\n    // \"<page>/index.html\" directly.\n    if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n      const rewriteUrlForNextExport = require('../next-server/lib/router/rewrite-url-for-export')\n        .rewriteUrlForNextExport\n      if (\n        props.href &&\n        typeof __NEXT_DATA__ !== 'undefined' &&\n        __NEXT_DATA__.nextExport\n      ) {\n        props.href = rewriteUrlForNextExport(props.href)\n      }\n    }\n\n    return React.cloneElement(child, props)\n  }\n}\n\nif (process.env.NODE_ENV === 'development') {\n  const warn = execOnce(console.error)\n\n  // This module gets removed by webpack.IgnorePlugin\n  const PropTypes = require('prop-types')\n  const exact = require('prop-types-exact')\n  // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.\n  Link.propTypes = exact({\n    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    prefetch: PropTypes.bool,\n    replace: PropTypes.bool,\n    shallow: PropTypes.bool,\n    passHref: PropTypes.bool,\n    scroll: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      (props: any, propName: string) => {\n        const value = props[propName]\n\n        if (typeof value === 'string') {\n          warn(\n            `Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>`\n          )\n        }\n\n        return null\n      },\n    ]).isRequired,\n  })\n}\n\nexport default Link\n","/* global window */\nimport React from 'react'\nimport Router, { NextRouter } from '../next-server/lib/router/router'\nimport { RouterContext } from '../next-server/lib/router-context'\n\ntype ClassArguments<T> = T extends new (...args: infer U) => any ? U : any\n\ntype RouterArgs = ClassArguments<typeof Router>\n\ntype SingletonRouterBase = {\n  router: Router | null\n  readyCallbacks: Array<() => any>\n  ready(cb: () => any): void\n}\n\nexport { Router, NextRouter }\n\nexport type SingletonRouter = SingletonRouterBase & NextRouter\n\nconst singletonRouter: SingletonRouterBase = {\n  router: null, // holds the actual router instance\n  readyCallbacks: [],\n  ready(cb: () => void) {\n    if (this.router) return cb()\n    if (typeof window !== 'undefined') {\n      this.readyCallbacks.push(cb)\n    }\n  },\n}\n\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n  'pathname',\n  'route',\n  'query',\n  'asPath',\n  'components',\n  'isFallback',\n  'basePath',\n]\nconst routerEvents = [\n  'routeChangeStart',\n  'beforeHistoryChange',\n  'routeChangeComplete',\n  'routeChangeError',\n  'hashChangeStart',\n  'hashChangeComplete',\n]\nconst coreMethodFields = [\n  'push',\n  'replace',\n  'reload',\n  'back',\n  'prefetch',\n  'beforePopState',\n]\n\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return Router.events\n  },\n})\n\nurlPropertyFields.forEach((field) => {\n  // Here we need to use Object.defineProperty because, we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter() as any\n      return router[field] as string\n    },\n  })\n})\n\ncoreMethodFields.forEach((field) => {\n  // We don't really know the types here, so we add them later instead\n  ;(singletonRouter as any)[field] = (...args: any[]) => {\n    const router = getRouter() as any\n    return router[field](...args)\n  }\n})\n\nrouterEvents.forEach((event) => {\n  singletonRouter.ready(() => {\n    Router.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(\n        1\n      )}`\n      const _singletonRouter = singletonRouter as any\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args)\n        } catch (err) {\n          // tslint:disable-next-line:no-console\n          console.error(`Error when running the Router event: ${eventField}`)\n          // tslint:disable-next-line:no-console\n          console.error(`${err.message}\\n${err.stack}`)\n        }\n      }\n    })\n  })\n})\n\nfunction getRouter(): Router {\n  if (!singletonRouter.router) {\n    const message =\n      'No router instance found.\\n' +\n      'You should only use \"next/router\" inside the client side of your app.\\n'\n    throw new Error(message)\n  }\n  return singletonRouter.router\n}\n\n// Export the singletonRouter and this is the public API.\nexport default singletonRouter as SingletonRouter\n\n// Reexport the withRoute HOC\nexport { default as withRouter } from './with-router'\n\nexport function useRouter(): NextRouter {\n  return React.useContext(RouterContext)\n}\n\n// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nexport const createRouter = (...args: RouterArgs): Router => {\n  singletonRouter.router = new Router(...args)\n  singletonRouter.readyCallbacks.forEach((cb) => cb())\n  singletonRouter.readyCallbacks = []\n\n  return singletonRouter.router\n}\n\n// This function is used to create the `withRouter` router instance\nexport function makePublicRouterInstance(router: Router): NextRouter {\n  const _router = router as any\n  const instance = {} as any\n\n  for (const property of urlPropertyFields) {\n    if (typeof _router[property] === 'object') {\n      instance[property] = Object.assign({}, _router[property]) // makes sure query is not stateful\n      continue\n    }\n\n    instance[property] = _router[property]\n  }\n\n  // Events is a static property on the router, the router doesn't have to be initialized to use it\n  instance.events = Router.events\n\n  coreMethodFields.forEach((field) => {\n    instance[field] = (...args: any[]) => {\n      return _router[field](...args)\n    }\n  })\n\n  return instance\n}\n","import React from 'react'\nimport { NextComponentType, NextPageContext } from '../next-server/lib/utils'\nimport { NextRouter, useRouter } from './router'\n\nexport type WithRouterProps = {\n  router: NextRouter\n}\n\nexport type ExcludeRouterProps<P> = Pick<\n  P,\n  Exclude<keyof P, keyof WithRouterProps>\n>\n\nexport default function withRouter<\n  P extends WithRouterProps,\n  C = NextPageContext\n>(\n  ComposedComponent: NextComponentType<C, any, P>\n): React.ComponentType<ExcludeRouterProps<P>> {\n  function WithRouterWrapper(props: any) {\n    return <ComposedComponent router={useRouter()} {...props} />\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps\n  // This is needed to allow checking for custom getInitialProps in _app\n  ;(WithRouterWrapper as any).origGetInitialProps = (ComposedComponent as any).origGetInitialProps\n  if (process.env.NODE_ENV !== 'production') {\n    const name =\n      ComposedComponent.displayName || ComposedComponent.name || 'Unknown'\n    WithRouterWrapper.displayName = `withRouter(${name})`\n  }\n\n  return WithRouterWrapper\n}\n","/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\ntype Handler = (...evts: any[]) => void\n\nexport type MittEmitter = {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, ...evts: any[]): void\n}\n\nexport default function mitt(): MittEmitter {\n  const all: { [s: string]: Handler[] } = Object.create(null)\n\n  return {\n    on(type: string, handler: Handler) {\n      ;(all[type] || (all[type] = [])).push(handler)\n    },\n\n    off(type: string, handler: Handler) {\n      if (all[type]) {\n        // tslint:disable-next-line:no-bitwise\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1)\n      }\n    },\n\n    emit(type: string, ...evts: any[]) {\n      // eslint-disable-next-line array-callback-return\n      ;(all[type] || []).slice().map((handler: Handler) => {\n        handler(...evts)\n      })\n    },\n  }\n}\n","/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { parse, UrlObject } from 'url'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string): string {\n  return path.indexOf(basePath) !== 0 ? basePath + path : path\n}\n\nexport function delBasePath(path: string): string {\n  return path.indexOf(basePath) === 0\n    ? path.substr(basePath.length) || '/'\n    : path\n}\n\nfunction toRoute(path: string): string {\n  return path.replace(/\\/$/, '') || '/'\n}\n\nconst prepareRoute = (path: string) =>\n  toRoute(!path || path === '/' ? '/index' : path)\n\ntype Url = UrlObject | string\n\ntype ComponentRes = { page: ComponentType; mod: any }\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n}\n\ntype RouteInfo = {\n  Component: ComponentType\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: any\n  err?: Error\n  error?: any\n}\n\ntype Subscription = (data: RouteInfo, App?: ComponentType) => Promise<void>\n\ntype BeforePopStateCallback = (state: any) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nfunction fetchNextData(\n  pathname: string,\n  query: ParsedUrlQuery | null,\n  isServerRender: boolean,\n  cb?: (...args: any) => any\n) {\n  let attempts = isServerRender ? 3 : 1\n  function getResponse(): Promise<any> {\n    return fetch(\n      formatWithValidation({\n        pathname: addBasePath(\n          // @ts-ignore __NEXT_DATA__\n          `/_next/data/${__NEXT_DATA__.buildId}${delBasePath(pathname)}.json`\n        ),\n        query,\n      }),\n      {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: 'same-origin',\n      }\n    ).then((res) => {\n      if (!res.ok) {\n        if (--attempts > 0 && res.status >= 500) {\n          return getResponse()\n        }\n        throw new Error(`Failed to load static props`)\n      }\n      return res.json()\n    })\n  }\n\n  return getResponse()\n    .then((data) => {\n      return cb ? cb(data) : data\n    })\n    .catch((err: Error) => {\n      // We should only trigger a server-side transition if this was caused\n      // on a client-side transition. Otherwise, we'd get into an infinite\n      // loop.\n      if (!isServerRender) {\n        ;(err as any).code = 'PAGE_LOAD_ERROR'\n      }\n      throw err\n    })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: RouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: ComponentType) => any\n  isSsr: boolean\n  isFallback: boolean\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      err,\n      subscription,\n      isFallback,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      App: ComponentType\n      wrapApp: (App: ComponentType) => any\n      err?: Error\n      isFallback: boolean\n    }\n  ) {\n    // represents the current component key\n    this.route = toRoute(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = { Component: App }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname, query }),\n          as\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n    }\n  }\n\n  // @deprecated backwards compatibility even though it's a private method.\n  static _rewriteUrlForNextExport(url: string): string {\n    if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n      const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n        .rewriteUrlForNextExport\n      return rewriteUrlForNextExport(url)\n    } else {\n      return url\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    if (!e.state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname, query }),\n        getURL()\n      )\n      return\n    }\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (\n      e.state &&\n      this.isSsr &&\n      e.state.as === this.asPath &&\n      parse(e.state.url).pathname === this.pathname\n    ) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(e.state)) {\n      return\n    }\n\n    const { url, as, options } = e.state\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof url === 'undefined' || typeof as === 'undefined') {\n        console.warn(\n          '`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/vercel/next.js/popstate-state-empty'\n        )\n      }\n    }\n    this.replace(url, as, options)\n  }\n\n  update(route: string, mod: any) {\n    const Component: ComponentType = mod.default || mod\n    const data = this.components[route]\n    if (!data) {\n      throw new Error(`Cannot update unavailable route: ${route}`)\n    }\n\n    const newData = Object.assign({}, data, {\n      Component,\n      __N_SSG: mod.__N_SSG,\n      __N_SSP: mod.__N_SSP,\n    })\n    this.components[route] = newData\n\n    // pages/_app.js updated\n    if (route === '/_app') {\n      this.notify(this.components[this.route])\n      return\n    }\n\n    if (route === this.route) {\n      this.notify(newData)\n    }\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options = {}) {\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options = {}) {\n    return this.change('replaceState', url, as, options)\n  }\n\n  change(\n    method: HistoryMethod,\n    _url: Url,\n    _as: Url,\n    options: any\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (!options._h) {\n        this.isSsr = false\n      }\n      // marking route changes as a navigation start entry\n      if (ST) {\n        performance.mark('routeChange')\n      }\n\n      // If url and as provided as an object representation,\n      // we'll format them into the string version here.\n      let url = typeof _url === 'object' ? formatWithValidation(_url) : _url\n      let as = typeof _as === 'object' ? formatWithValidation(_as) : _as\n\n      url = addBasePath(url)\n      as = addBasePath(as)\n\n      // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly for the SSR page.\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n          .rewriteUrlForNextExport\n        // @ts-ignore this is temporarily global (attached to window)\n        if (__NEXT_DATA__.nextExport) {\n          as = rewriteUrlForNextExport(as)\n        }\n      }\n\n      this.abortComponentLoad(as)\n\n      // If the url change is only related to a hash change\n      // We should not proceed. We should only change the state.\n\n      // WARNING: `_h` is an internal option for handing Next.js client-side\n      // hydration. Your app should _never_ use this property. It may change at\n      // any time without notice.\n      if (!options._h && this.onlyAHashChange(as)) {\n        this.asPath = as\n        Router.events.emit('hashChangeStart', as)\n        this.changeState(method, url, as, options)\n        this.scrollToHash(as)\n        Router.events.emit('hashChangeComplete', as)\n        return resolve(true)\n      }\n\n      const { pathname, query, protocol } = parse(url, true)\n\n      if (!pathname || protocol) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            `Invalid href passed to router: ${url} https://err.sh/vercel/next.js/invalid-href-passed`\n          )\n        }\n        return resolve(false)\n      }\n\n      // If asked to change the current URL we should reload the current page\n      // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n      // We also need to set the method = replaceState always\n      // as this should not go into the history (That's how browsers work)\n      // We should compare the new asPath to the current asPath, not the url\n      if (!this.urlIsNew(as)) {\n        method = 'replaceState'\n      }\n\n      const route = toRoute(pathname)\n      const { shallow = false } = options\n\n      if (isDynamicRoute(route)) {\n        const { pathname: asPathname } = parse(as)\n        const routeRegex = getRouteRegex(route)\n        const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n        if (!routeMatch) {\n          const missingParams = Object.keys(routeRegex.groups).filter(\n            (param) => !query[param]\n          )\n\n          if (missingParams.length > 0) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                `Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                  `the params: ${missingParams.join(\n                    ', '\n                  )} in the \\`href\\`'s \\`query\\``\n              )\n            }\n\n            return reject(\n              new Error(\n                `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n                  `Read more: https://err.sh/vercel/next.js/incompatible-href-as`\n              )\n            )\n          }\n        } else {\n          // Merge params into `query`, overwriting any specified in search\n          Object.assign(query, routeMatch)\n        }\n      }\n\n      Router.events.emit('routeChangeStart', as)\n\n      // If shallow is true and the route exists in the router cache we reuse the previous result\n      this.getRouteInfo(route, pathname, query, as, shallow).then(\n        (routeInfo) => {\n          const { error } = routeInfo\n\n          if (error && error.cancelled) {\n            return resolve(false)\n          }\n\n          Router.events.emit('beforeHistoryChange', as)\n          this.changeState(method, url, as, options)\n\n          if (process.env.NODE_ENV !== 'production') {\n            const appComp: any = this.components['/_app'].Component\n            ;(window as any).next.isPrerendered =\n              appComp.getInitialProps === appComp.origGetInitialProps &&\n              !(routeInfo.Component as any).getInitialProps\n          }\n\n          this.set(route, pathname, query, as, routeInfo).then(() => {\n            if (error) {\n              Router.events.emit('routeChangeError', error, as)\n              throw error\n            }\n\n            Router.events.emit('routeChangeComplete', as)\n            return resolve(true)\n          })\n        },\n        reject\n      )\n    })\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<RouteInfo> {\n    const cachedRouteInfo = this.components[route]\n\n    // If there is a shallow route transition possible\n    // If the route is already rendered on the screen.\n    if (shallow && cachedRouteInfo && this.route === route) {\n      return Promise.resolve(cachedRouteInfo)\n    }\n\n    const handleError = (\n      err: Error & { code: any; cancelled: boolean },\n      loadErrorFail?: boolean\n    ) => {\n      return new Promise((resolve) => {\n        if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n          // If we can't load the page it could be one of following reasons\n          //  1. Page doesn't exists\n          //  2. Page does exist in a different zone\n          //  3. Internal error while loading the page\n\n          // So, doing a hard reload is the proper way to deal with this.\n          window.location.href = as\n\n          // Changing the URL doesn't block executing the current code path.\n          // So, we need to mark it as a cancelled error and stop the routing logic.\n          err.cancelled = true\n          // @ts-ignore TODO: fix the control flow here\n          return resolve({ error: err })\n        }\n\n        if (err.cancelled) {\n          // @ts-ignore TODO: fix the control flow here\n          return resolve({ error: err })\n        }\n\n        resolve(\n          this.fetchComponent('/_error')\n            .then((res) => {\n              const { page: Component } = res\n              const routeInfo: RouteInfo = { Component, err }\n              return new Promise((resolve) => {\n                this.getInitialProps(Component, {\n                  err,\n                  pathname,\n                  query,\n                } as any).then(\n                  (props) => {\n                    routeInfo.props = props\n                    routeInfo.error = err\n                    resolve(routeInfo)\n                  },\n                  (gipErr) => {\n                    console.error(\n                      'Error in error page `getInitialProps`: ',\n                      gipErr\n                    )\n                    routeInfo.error = err\n                    routeInfo.props = {}\n                    resolve(routeInfo)\n                  }\n                )\n              }) as Promise<RouteInfo>\n            })\n            .catch((err) => handleError(err, true))\n        )\n      }) as Promise<RouteInfo>\n    }\n\n    return (new Promise((resolve, reject) => {\n      if (cachedRouteInfo) {\n        return resolve(cachedRouteInfo)\n      }\n\n      this.fetchComponent(route).then(\n        (res) =>\n          resolve({\n            Component: res.page,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }),\n        reject\n      )\n    }) as Promise<RouteInfo>)\n      .then((routeInfo: RouteInfo) => {\n        const { Component, __N_SSG, __N_SSP } = routeInfo\n\n        if (process.env.NODE_ENV !== 'production') {\n          const { isValidElementType } = require('react-is')\n          if (!isValidElementType(Component)) {\n            throw new Error(\n              `The default export is not a React Component in page: \"${pathname}\"`\n            )\n          }\n        }\n\n        return this._getData<RouteInfo>(() =>\n          __N_SSG\n            ? this._getStaticData(as)\n            : __N_SSP\n            ? this._getServerData(as)\n            : this.getInitialProps(\n                Component,\n                // we provide AppTree later so this needs to be `any`\n                {\n                  pathname,\n                  query,\n                  asPath: as,\n                } as any\n              )\n        ).then((props) => {\n          routeInfo.props = props\n          this.components[route] = routeInfo\n          return routeInfo\n        })\n      })\n      .catch(handleError)\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    data: RouteInfo\n  ): Promise<void> {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    return this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const { pathname, protocol } = parse(url)\n\n      if (!pathname || protocol) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            `Invalid href passed to router: ${url} https://err.sh/vercel/next.js/invalid-href-passed`\n          )\n        }\n        return\n      }\n\n      // Prefetch is not supported in development mode because it would trigger on-demand-entries\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n      const route = delBasePath(toRoute(pathname))\n      Promise.all([\n        this.pageLoader.prefetchData(url, delBasePath(asPath)),\n        this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n      ]).then(() => resolve(), reject)\n    })\n  }\n\n  async fetchComponent(route: string): Promise<ComponentRes> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n    route = delBasePath(route)\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData = (asPath: string): Promise<object> => {\n    const pathname = prepareRoute(parse(asPath).pathname!)\n\n    return process.env.NODE_ENV === 'production' && this.sdc[pathname]\n      ? Promise.resolve(this.sdc[pathname])\n      : fetchNextData(\n          pathname,\n          null,\n          this.isSsr,\n          (data) => (this.sdc[pathname] = data)\n        )\n  }\n\n  _getServerData = (asPath: string): Promise<object> => {\n    let { pathname, query } = parse(asPath, true)\n    pathname = prepareRoute(pathname!)\n    return fetchNextData(pathname, query, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      const e = new Error('Route Cancelled')\n      ;(e as any).cancelled = true\n      Router.events.emit('routeChangeError', e, as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: RouteInfo): Promise<void> {\n    return this.sub(data, this.components['/_app'].Component)\n  }\n}\n","// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  return TEST_ROUTE.test(route)\n}\n","import { getRouteRegex } from './route-regex'\n\nexport function getRouteMatcher(routeRegex: ReturnType<typeof getRouteRegex>) {\n  const { re, groups } = routeRegex\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        const err: Error & { code?: string } = new Error(\n          'failed to decode param'\n        )\n        err.code = 'DECODE_FAILED'\n        throw err\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n          ? [decode(m)]\n          : decode(m)\n      }\n    })\n    return params\n  }\n}\n","// this isn't importing the escape-string-regex module\n// to reduce bytes\nfunction escapeRegex(str: string) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&')\n}\n\nexport function getRouteRegex(\n  normalizedRoute: string\n): {\n  re: RegExp\n  namedRegex?: string\n  groups: { [groupName: string]: { pos: number; repeat: boolean } }\n} {\n  // Escape all characters that could be considered RegEx\n  const escapedRoute = escapeRegex(normalizedRoute.replace(/\\/$/, '') || '/')\n\n  const groups: { [groupName: string]: { pos: number; repeat: boolean } } = {}\n  let groupIndex = 1\n\n  const parameterizedRoute = escapedRoute.replace(\n    /\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g,\n    (_, $1) => {\n      const isOptional = /^\\\\\\[.*\\\\\\]$/.test($1)\n      if (isOptional) {\n        $1 = $1.slice(2, -2)\n      }\n      const isCatchAll = /^(\\\\\\.){3}/.test($1)\n      if (isCatchAll) {\n        $1 = $1.slice(6)\n      }\n      groups[\n        $1\n          // Un-escape key\n          .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')\n        // eslint-disable-next-line no-sequences\n      ] = { pos: groupIndex++, repeat: isCatchAll }\n      return isCatchAll ? (isOptional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n    }\n  )\n\n  let namedParameterizedRoute: string | undefined\n\n  // dead code eliminate for browser since it's only needed\n  // while generating routes-manifest\n  if (typeof window === 'undefined') {\n    namedParameterizedRoute = escapedRoute.replace(\n      /\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g,\n      (_, $1) => {\n        const isCatchAll = /^(\\\\\\.){3}/.test($1)\n        const key = $1\n          // Un-escape key\n          .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')\n          .replace(/^\\.{3}/, '')\n\n        return isCatchAll\n          ? `/(?<${escapeRegex(key)}>.+?)`\n          : `/(?<${escapeRegex(key)}>[^/]+?)`\n      }\n    )\n  }\n\n  return {\n    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n    groups,\n    namedRegex: namedParameterizedRoute\n      ? `^${namedParameterizedRoute}(?:/)?$`\n      : undefined,\n  }\n}\n","import { IncomingMessage, ServerResponse } from 'http'\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { format, URLFormatOptions, UrlObject } from 'url'\nimport { ManifestItem } from '../server/load-components'\nimport { NextRouter } from './router/router'\nimport { Env } from '../../lib/load-env-config'\n\n/**\n * Types used by both next and next-server\n */\n\nexport type NextComponentType<\n  C extends BaseContext = NextPageContext,\n  IP = {},\n  P = {}\n> = ComponentType<P> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param ctx Context of `page`\n   */\n  getInitialProps?(context: C): IP | Promise<IP>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n> & {\n  renderDocument(\n    Document: DocumentType,\n    props: DocumentProps\n  ): React.ReactElement\n}\n\nexport type AppType = NextComponentType<\n  AppContextType,\n  AppInitialProps,\n  AppPropsType\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => RenderPageResult | Promise<RenderPageResult>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: any\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  dynamicIds?: string[]\n  err?: Error & { statusCode?: number }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n}\n\n/**\n * `Next` context\n */\n// tslint:disable-next-line interface-name\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<R extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: R\n}\n\nexport type AppInitialProps = {\n  pageProps: any\n}\n\nexport type AppPropsType<\n  R extends NextRouter = NextRouter,\n  P = {}\n> = AppInitialProps & {\n  Component: NextComponentType<NextPageContext, any, P>\n  router: R\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | React.ReactFragment\n}\n\nexport type DocumentProps = DocumentInitialProps & {\n  __NEXT_DATA__: NEXT_DATA\n  dangerousAsPath: string\n  ampPath: string\n  inAmpMode: boolean\n  hybridAmp: boolean\n  staticMarkup: boolean\n  isDevelopment: boolean\n  devFiles: string[]\n  files: string[]\n  lowPriorityFiles: string[]\n  polyfillFiles: string[]\n  dynamicImports: ManifestItem[]\n  assetPrefix?: string\n  canonicalBase: string\n  htmlProps: any\n  bodyTags: any[]\n  headTags: any[]\n  unstable_runtimeJS?: false\n}\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: {\n    [key: string]: string | string[]\n  }\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: {\n    [key: string]: string\n  }\n\n  body: any\n\n  env: Env\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<T = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<T>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<T>\n  status: (statusCode: number) => NextApiResponse<T>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n    }\n  ) => NextApiResponse<T>\n  clearPreviewData: () => NextApiResponse<T>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => void | Promise<void>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {}\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(\n  url: UrlObject,\n  options?: URLFormatOptions\n): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return format(url as URL, options)\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  typeof performance.mark === 'function' &&\n  typeof performance.measure === 'function'\n","module.exports = require('./dist/client/link')\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import moment from 'moment'\nimport currency from 'currency.js'\n\nexport const getProfitsByMonth = (data) => {\n  const months = {}\n  const monthArray = []\n  data.sales.forEach(({ date_of_sale, item_price, depop_fee, depop_payments_fee, usps_cost }) => {\n    const month = moment(date_of_sale).format('MMM')\n    const date = moment(date_of_sale).format('MM/DD/yyyy')\n\n    const fees = cleanNumber(depop_fee) + cleanNumber(depop_payments_fee)\n    const sellerPaidShipping = cleanNumber(usps_cost)\n    const netProfit = currency(cleanNumber(item_price) - fees - sellerPaidShipping).value\n\n    if (months[month]) {\n      months[month] = {\n        ...months[month],\n        net: currency(netProfit + months[month].net).value,\n        depop_fees: currency(fees + months[month].depop_fees).value,\n        sellerPaidShipping: currency(sellerPaidShipping + months[month].sellerPaidShipping).value\n      }\n    } else {\n      months[month] = {\n        net: netProfit || 0,\n        depop_fees: fees || 0,\n        sellerPaidShipping: sellerPaidShipping || 0\n      }\n    }\n\n    // sets start dates\n    if (months[month].start) {\n      const start = new Date(months[month].start)\n      const current = date\n      if (current < start) months[month].start = date\n    } else months[month].start = date\n    if (months[month].end) {\n      const end = new Date(months[month].end)\n      const current = date\n      if (current > end) months[month].end = date\n    } else months[month].end = date\n\n    months[month].end = date\n  })\n  Object.keys(months).forEach((key) => {\n    monthArray.push({\n      month: key,\n      'Net Profit': months[key].net,\n      'Depop Fees': months[key].depop_fees,\n      'Seller-Paid-Shipping': months[key].sellerPaidShipping\n    })\n  })\n  return monthArray\n}\n\n// Value Box 1\nexport const getAvgProfits = (data) => {\n  const monthlyProfit = getProfitsByMonth(data)\n  let avg = 0\n  monthlyProfit.forEach((data) => {\n    avg += data['Net Profit']\n  })\n  avg = avg / monthlyProfit.length\n  return { monthly: currency(avg).value, weekly: currency(avg / 4).value }\n}\n\n// Value Box 2\nexport const bestTimeToList = (data) => {\n  const obj = {\n    sell: {},\n    list: {}\n  }\n  data.sales.forEach(({ date_of_listing, date_of_sale }) => {\n    const listDay = moment(date_of_listing).format('dddd')\n    if (obj.list[listDay]) obj.list[listDay] += 1\n    else obj.list[listDay] = 1\n\n    const saleDay = moment(date_of_sale).format('dddd')\n    if (obj.sell[saleDay]) obj.sell[saleDay] += 1\n    else obj.sell[saleDay] = 1\n  })\n\n  const final = { sell: [], list: [] }\n  let topSellCount = 0\n  let topListCount = 0\n\n  Object.keys(obj.sell).forEach((key) => {\n    if (obj.sell[key] === topSellCount) {\n      final.sell.push(key)\n    } else if (obj.sell[key] > topSellCount) {\n      final.sell = [key]\n      topSellCount = obj.sell[key]\n    }\n  })\n  Object.keys(obj.list).forEach((key) => {\n    if (obj.list[key] === topListCount) {\n      final.list.push(key)\n    } else if (obj.list[key] > topListCount) {\n      final.list = [key]\n      topListCount = obj.list[key]\n    }\n  })\n  return final\n}\n\n// Value Box 3\nexport const avgItemsPerDay = data => {\n  const obj = {}\n  data.sales.forEach(({ date_of_sale }) => {\n    if (obj[date_of_sale]) {\n      obj[date_of_sale] += 1\n    } else obj[date_of_sale] = 1\n  })\n  const sales = data.sales.length\n  const days = Object.keys(obj).length\n\n  return sales / days\n}\n\n// Tables\n// export const formatSalesTable = (sales) => {\n//   const newSales = []\n\n//   sales.forEach((sale) => {\n//     const ms = new Date(sale.date_of_sale).getTime() - new Date(sale.date_of_listing).getTime()\n//     const days = ms / (1000 * 3600 * 24)\n//     newSales.push({\n//       ...sale,\n//       'date sold': moment(sale.date_of_sale).format('MM/DD/YYYY'),\n//       buyer: `${sale.name}`,\n//       username: `${sale.buyer}`,\n//       'item price': sale.item_price,\n//       'buyer-paid-shipping': sale.buyer_shipping_cost,\n//       fees: sale.depop_fee,\n//       'date listed': moment(sale.date_of_listing).format('MM/DD/YYYY'),\n//       'days listed': days, // converts from ms to days\n//       'item description': formatDescription(sale.description),\n//       address: `${sale.address_line_1} ${sale.city}, ${sale.state ? sale.state : ''} ${sale.post_code}`\n\n//     })\n//   })\n\n//   return sort(newSales)\n// }\n\n// utils\n// const sort = (sales) => {\n//   return sales.sort((a, b) => {\n//     const date1 = new Date(a['date sold'])\n//     const date2 = new Date(b['date listing'])\n//     return date1 - date2\n//   })\n// }\n\n// const formatDescription = (text) => {\n//   const tagStart = text.lastIndexOf('{')\n\n//   const withoutTags = tagStart !== -1 ? text.substring(0, tagStart) : text\n//   return withoutTags\n// }\n\nconst cleanNumber = (num) => {\n  if (!num || num === '-') return 0\n  const withoutCurrency = num.substring(1, num.length)\n  return parseFloat(withoutCurrency)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BlurShield from '../../styles/elements/BlurShield'\nimport Flex from '../../styles/layout/Flex'\n\nconst BlurBackground = ({ component, ...props }) => {\n  return (\n    <Background>\n      <BlurShield component={component} />\n    </Background>\n  )\n}\n\nexport default BlurBackground\n\nconst Background = styled(Flex)`\n    width: 100%;\n    height: calc(100% - 45px);\n    position: absolute;\n    z-index: 1;\n    backdrop-filter: blur(10px);\n    bottom: 0px;\n`\n","import currency from 'currency.js'\nimport ValueBox from '../../styles/reporting/ValueBox'\nimport Card from '../../styles/elements/Card'\nimport Tooltip from '../../styles/elements/Tooltip'\nimport Text from '../../styles/elements/Text'\nimport RadialChart from '../../styles/reporting/RadialChart'\nimport Flex from '../../styles/layout/Flex'\nimport styled from 'styled-components'\nimport BlurBackground from './BlurBackground'\nimport { useSelector } from 'react-redux'\n\nconst SaleDetails = ({ row, getUrl, onClose, chartHeight, currencyType, ...props }) => {\n  const { user } = useSelector(state => state.generalReducer)\n  const isBasic = user.membership.type === 'basic'\n  const chartData = [\n    {\n      name: 'Sale Price', value: currency(row['item price']).value, fill: 'green'\n    },\n    {\n      name: 'Buyer Shipping', value: currency(row['buyer-paid shipping']).value, fill: 'blueLight'\n    },\n    {\n      name: 'Seller Shipping', value: currency(row['seller-paid shipping']).value, fill: 'bluePastel'\n    },\n    {\n      name: 'Depop Fees', value: currency(row['depop fees']).value, fill: 'red'\n    }\n  ]\n  return (\n    <Card\n      minWidth='500px'\n      defaultTooltip={`Sale card - @${row.username}`}\n      headerContent={<CardTitle getUrl={getUrl} row={row} onClose={onClose} />}\n      headerBorder='none'\n      {...props}\n    >\n      {isBasic ? <BlurBackground component='Sale Details' /> : null}\n\n      <Flex justifyContent='space-between' width={[1]} flexWrap='wrap'>\n\n        <ValueBox\n          smallText\n          title='Date Listed'\n          string\n          value={row['date listed']}\n        />\n        <ValueBox\n          smallText\n          title='Date Sold'\n          string\n          value={row['date sold']}\n        />\n        <ValueBox\n          smallText\n          title='Days In Shop'\n          value={row['days listed']}\n        />\n      </Flex>\n      <Flex flexDirection='column' width={[1]}>\n        <Flex alignItems='center' width={[1]} justifyContent='center'>\n\n          <RadialChart\n            radius={60}\n            data={chartData}\n            height={chartHeight}\n          />\n          <ValueBox\n            m='0px'\n            mr='4px'\n            title='Item Description'\n            string\n            value={(\n              <Description>\n                {row['item description']}<br /><br />\n                <strong>Buyer:</strong> {row.name}<br />\n                <strong>Sale Price:</strong> {currencyType}{currency(row['item price']).value}<br />\n                <strong>Buyer-Paid Shipping:</strong> {currencyType}{currency(row['buyer-paid shipping']).value}<br />\n                <strong>Seller-Paid Shipping:</strong> {currencyType}{currency(row['seller-paid shipping']).value}<br />\n                <strong>Depop Fees:</strong> {currencyType}{currency(row['depop fees']).value}<br />\n                <strong>Address:</strong> {row.address}<br />\n              </Description>\n            )}\n            value2='-'\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\nexport default SaleDetails\n\nconst CardTitle = ({ row, getUrl, onClose }) => {\n  return (\n    <Flex justifyContent='space-between' width={[1]} alignItems='center'>\n\n      <Text>\n          Buyer -{' '}\n        <Tooltip title={`Visit ${row.username}'s Shop`}>\n\n          <A\n            target='_blank'\n            rel='noopener noreferrer'\n            href={getUrl(row.username)}\n          >\n            @{row.username}\n          </A>\n        </Tooltip>\n      </Text>\n      {\n        onClose ? (\n          <Button onClick={onClose}>\n            <i className='fa fa-close' />\n          </Button>\n        ) : null\n      }\n    </Flex>\n  )\n}\n\nconst A = styled.a`\n    color: ${({ theme }) => theme.colors.greyDarker};\n`\nconst Description = styled.div`\n    height: 180px;\n    overflow: auto;\n    font-size: 15px;\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n`\nconst Button = styled.button`\n  border: none;\n  background: transparent;\n  cursor:pointer;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.greyDark};\n  transition: .1s;\n  &:hover {\n\n    color: ${({ theme }) => theme.colors.black};\n  }\n\n`\n","import React from 'react'\nimport Card from '../../styles/elements/Card'\nimport Flex from '../../styles/layout/Flex'\nimport Table from '../../styles/elements/Table'\nimport Text from '../../styles/elements/Text'\nimport { formatSalesTable } from '../reports/util/tables'\n\nfunction SalesTable ({ data, labels, onClose, title, currencyType, ...props }) {\n  const tableData = formatSalesTable(data.sales ? data : { sales: data }, currencyType)\n  return (\n    <>\n      {\n        tableData.length\n          ? (\n            <Table\n              minWidth='300px'\n              height='100%'\n              onClose={onClose}\n              headerContent={title || 'Sales Table'}\n              data={tableData}\n              columnLabels={\n                labels || ['date sold', 'username', 'item price']\n              }\n              p='0px'\n              {...props}\n            />\n          )\n          : (\n            <Card background='mainBg' onClose={onClose} headerContent={title || 'Sales Table'} minWidth='300px' {...props}>\n              <Flex height='100%' width={[1]} justifyContent='center' pt='40px'>\n                <Text notFound>No Sales</Text>\n              </Flex>\n            </Card>)\n      }\n    </>\n  )\n}\n\nexport default SalesTable\n","import Flex from '../../styles/layout/Flex'\nimport TotalEarningsView from './TotalEarnings'\nimport RevenueOverview from './RevenueOverview'\nimport SalesByPaymentType from './SalesByPaymentType'\nimport SalesByDate from './SalesByDate'\nimport SalesByCategory from './SalesByCategory'\nimport SalesMap from './SalesMap'\nimport SalesAndListingsByDay from './SalesAndListingsByDay'\nimport ProfitsByMonth from './ProfitsByMonth'\nimport TopValueBoxes from './TopValueBoxes'\nimport VariableLineGraph from './VariableLineGraph'\n\nexport const CompareView = ({ data, compareData }) => {\n  return (\n    <Flex flexDirection='column' width={[1]}>\n      <Flex>\n        <TotalEarningsView half data={data} />\n        <TotalEarningsView half data={compareData} />\n      </Flex>\n      <Flex>\n        <TopValueBoxes data={data} minWidth='45%' />\n        <TopValueBoxes data={compareData} minWidth='45%' />\n      </Flex>\n      <Flex>\n        <RevenueOverview data={data} />\n        <RevenueOverview data={compareData} />\n      </Flex>\n      <Flex>\n        <SalesByPaymentType data={data} />\n        <SalesByPaymentType data={compareData} />\n      </Flex>\n      <Flex>\n        <SalesByDate data={data} />\n        <SalesByDate data={compareData} />\n      </Flex>\n      <Flex>\n        <SalesByCategory data={data} hideBoxes halfSize />\n        <SalesByCategory data={compareData} hideBoxes halfSize />\n      </Flex>\n      <Flex>\n        <VariableLineGraph data={data} />\n        <VariableLineGraph data={compareData} />\n      </Flex>\n      <Flex>\n        <SalesMap data={data} />\n        <SalesMap data={compareData} />\n      </Flex>\n      <Flex>\n        <SalesAndListingsByDay data={data} />\n        <SalesAndListingsByDay data={compareData} />\n      </Flex>\n      <Flex>\n        <ProfitsByMonth data={data} />\n        <ProfitsByMonth data={compareData} />\n      </Flex>\n\n    </Flex>\n  )\n}\n","import { memo } from 'react'\n\nimport Barchart from '../../../styles/reporting/BarChart'\n\nimport { getProfitsByMonth } from '../../dashboard/util'\n\nconst ProfitsByMonth = memo(({ data }) => {\n  const chartData = getProfitsByMonth(data)\n  return (\n    <Barchart\n      minHeight='400px'\n      disableAnimation\n      headerBorder='none'\n      headerContent='Profits By Month'\n      data={chartData}\n      formatTooltip={(t, l) => formatTooltip(t, l, data)}\n      xdataKey='month'\n      bars={[\n        { dataKey: 'Net Profit', size: 40, color: 'pastelPurple' },\n        { dataKey: 'Depop Fees', size: 40, color: 'pastelBlue' },\n        { dataKey: 'Seller-Paid-Shipping', size: 40, color: 'pastelBlueLight' }\n      ]}\n    />\n  )\n})\n\nexport default (ProfitsByMonth)\n\nconst formatTooltip = (tickItem, label, data) => {\n  return `${data.currency_type}${tickItem.toFixed(2)}`\n}\n","\nimport { useState, useEffect } from 'react'\n\nimport { getRecentSales } from '../util/tables'\nimport Table from '../../../styles/elements/Table'\nimport SaleDetails from '../../general/SaleDetails'\nimport Flex from '../../../styles/layout/Flex'\n\nconst RecentSales = ({ data }) => {\n  const tableData = getRecentSales(data)\n  const [activeRow, activateRow] = useState(tableData[0])\n  const [idx, activateIdx] = useState(0)\n  useEffect(() => {\n    if (JSON.stringify(activeRow) !== JSON.stringify(tableData[0])) {\n      activateRow(tableData[0])\n    }\n  }, [tableData])\n  return (\n    <Flex flexWrap='wrap'>\n\n      <Table\n        background='mainBg'\n        minWidth='300px'\n        tableHeight={380}\n        headerContent='Recent Sales'\n        data={tableData}\n        activeRow={idx}\n        handleRowClick={(row) => {\n          activateRow(tableData[row.index])\n          activateIdx(row.index)\n        }}\n        columnLabels={\n          ['date sold', 'username', 'item price']\n        }\n        p='0px'\n      />\n      {activeRow\n        ? (\n          <SaleDetails\n            row={activeRow} getUrl={data.getUrl} currencyType={data.currency_type}\n          />\n        )\n        : null}\n    </Flex>\n  )\n}\n\nexport default (RecentSales)\n\n// const formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\n// const formatTooltip = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }\n","import { useState, memo } from 'react'\n\nimport { groupByWeek } from '../util/grouping'\n\nimport Card from '../../../styles/elements/Card'\nimport Text from '../../../styles/elements/Text'\nimport Flex from '../../../styles/layout/Flex'\nimport Areachart from '../../../styles/reporting/AreaChart'\nimport styled from 'styled-components'\nimport theme from '../../../theme'\nimport { formatNum } from '../util/general'\n\nconst RevenueOverview = memo(({ data, isBasic }) => {\n  const chartData = groupByWeek(data)\n  const [week, setWeek] = useState(chartData[chartData.length - 1].week)\n  const [revenue, setRevenue] = useState({ gross: chartData[chartData.length - 1].Gross, net: chartData[chartData.length - 1].Net })\n\n  const onHover = (val1, val2) => {\n    if (val2 === 'Gross') {\n      if (revenue.gross !== val1) {\n        setRevenue({ ...revenue, gross: val1 })\n      }\n    } else if (val2 === 'Net') {\n      if (revenue.net !== val1) {\n        setRevenue({ ...revenue, net: val1 })\n      }\n    } else {\n      setWeek(val1)\n    }\n  }\n  return (\n    <Card\n      sx={{ overflow: 'hidden', boxShadow: theme.shadows.normal }}\n      minHeight='420px'\n\n      proOnly={isBasic ? {\n        component: 'Revenue Overview',\n        img: 'revenue-overview.png'\n      } : null}\n    >\n      <Flex flexDirection='column' width={[1]} p={50}>\n\n        <Title color='primary' fontSize={25}>{week}</Title>\n        <Text pt='10px' color='pastelGreen' fontSize={20} fontWeight={600}>\n          Gross: {formatNum(data.currency_type, revenue.gross)}\n        </Text>\n        <Text color='pastelPurple' fontSize={20} fontWeight={600}>\n          Net: {formatNum(data.currency_type, revenue.net)}\n        </Text>\n      </Flex>\n      <Areachart\n        boxShadow='none'\n        data={chartData}\n        xdataKey='Date Sold'\n        onHover={onHover}\n        areas={[\n          { key: 'Gross', color: 'pastelGreen' },\n          { key: 'Net', color: 'pastelPurple' }\n        ]}\n      />\n    </Card>\n\n  )\n})\n\nexport default RevenueOverview\n\nconst Title = styled(Text)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.mainBg};\n  width: 200px;\n  padding-bottom:3px;\n`\n","\nimport Barchart from '../../../styles/reporting/BarChart'\n\nimport { groupByDay } from '../util/grouping'\nimport { memo } from 'react'\n\nconst SalesAndListingsByDay = memo(({ data }) => {\n  const chartData = groupByDay(data)\n\n  return (\n    <Barchart\n      minHeight='400px'\n      disableAnimation\n      headerBorder='none'\n      headerContent='Sales and Listings by day'\n      data={chartData}\n      xdataKey='Day'\n      bars={[\n        { dataKey: 'Items Sold', size: 20, color: 'pastelRose' },\n        { dataKey: 'Items Listed', size: 20, color: 'pastelBlue' }\n      ]}\n    />\n  )\n})\n\nexport default (SalesAndListingsByDay)\n","import { useMemo, useState, memo } from 'react'\n\nimport { formatNum } from '../util/general'\nimport { groupByCategory } from '../util/grouping'\nimport VertComposedChart from '../../../styles/reporting/VertBarChart'\nimport Flex from '../../../styles/layout/Flex'\nimport ValueBox from '../../../styles/reporting/ValueBox'\n\nconst SalesByCategory = memo(({ data, hideBoxes, halfSize, isBasic }) => {\n  const [revenue, showRevenue] = useState(false)\n  const chartData = useMemo(() => groupByCategory(data, revenue), [revenue, data])\n  const max = { gross: chartData[0], sold: chartData[0] }\n  const min = { gross: chartData[0], sold: chartData[0] }\n  chartData.forEach((current, i) => {\n    if (current['Gross Earnings'] > max.gross['Gross Earnings']) max.gross = current\n    if (current['Items Sold'] > max.sold['Items Sold']) max.sold = current\n    if (current['Gross Earnings'] < min.gross['Gross Earnings']) min.gross = current\n    if (current['Items Sold'] < min.sold['Items Sold']) min.sold = current\n  })\n  if (!chartData.length) return null\n  if (halfSize) {\n    return (\n      <VertComposedChart\n        headerContent={`Sales By Category${chartData.length < 15 ? '' : ' - ( Top 15 )'}`}\n        data={chartData}\n        xdataKey={revenue ? 'Gross Earnings' : 'Items Sold'}\n        ydataKey='Category'\n        height={500}\n        formatTooltip={(t, l) => formatTooltip(t, l, data)}\n        switchLabel='Show Earnings'\n        switchCheck={revenue}\n        switchEvent={() => {\n          showRevenue(!revenue)\n        }}\n        proOnly={isBasic ? {\n          component: 'Sales by Category',\n          img: 'sales-by-category.png'\n        } : null}\n      />\n    )\n  }\n  return (\n    <Flex flexWrap='wrap'>\n\n      <VertComposedChart\n        headerContent={`Sales By Category${chartData.length < 15 ? '' : ' - ( Top 15 )'}`}\n        data={chartData}\n        xdataKey={revenue ? 'Gross Earnings' : 'Items Sold'}\n        ydataKey='Category'\n        height={500}\n        formatTooltip={(t, l) => formatTooltip(t, l, data)}\n        switchLabel='Show Earnings'\n        switchCheck={revenue}\n        switchEvent={() => {\n          showRevenue(!revenue)\n        }}\n        proOnly={isBasic ? {\n          component: 'Sales by Category',\n          img: 'sales-by-category.png'\n        } : null}\n      />\n      {\n        !hideBoxes ? (\n          <Flex justifyContent='space-between' flexWrap='wrap' alignItems='stretch' maxWidth='50%' flexDirection='column'>\n            {\n              max\n                ? (\n                  <>\n                    <ValueBox\n                      minWidth='50px'\n                      title='Highest Earning Category'\n                      string\n                      smallText\n                      value={`${max.gross.Category} - ${formatNum(data.currency_type, max.gross['Gross Earnings'])} Gross Profit`}\n                    />\n                    <ValueBox\n                      minWidth='50px'\n                      title='Most Sold Category'\n                      string\n                      smallText\n                      value={`${max.sold.Category} - ${max.sold['Items Sold']} Items Sold`}\n                    />\n                    <ValueBox\n                      minWidth='50px'\n                      title='Lowest Earning Category'\n                      string\n                      smallText\n                      value={`${min.gross.Category} -${formatNum(data.currency_type, min.gross['Gross Earnings'])} Gross Profit`}\n                    />\n                    <ValueBox\n                      minWidth='50px'\n                      title='Least Sold Category'\n                      string\n                      smallText\n                      value={`${min.sold.Category} - ${min.sold['Items Sold']} Items Sold`}\n                    />\n                  </>\n                ) : null\n            }\n          </Flex>\n        ) : null\n      }\n\n    </Flex>\n  )\n})\n\nexport default (SalesByCategory)\n\nconst formatTooltip = (tickItem, label, data) => {\n  if (label === 'Gross Earnings') {\n    return `${data.currency_type}${tickItem.toFixed(2)}`\n  }\n  return tickItem\n}\n","import { memo, useState, useMemo } from 'react'\nimport moment from 'moment'\n\nimport Barchart from '../../../styles/reporting/BarChart'\n\nimport { groupByDate } from '../util/grouping'\n\nconst SalesByDate = memo(({ data }) => {\n  const [allDates, showAllDates] = useState(false)\n  const soldDatesData = useMemo(() => groupByDate(data), [data])\n  const allDatesData = useMemo(() => groupByDate(data, true), [data])\n  const switchDisable = soldDatesData.length === allDatesData.length\n  return (\n    <Barchart\n      hideLegend\n      minHeight='450px'\n      headerContent='Sales by date'\n      data={allDates ? allDatesData : soldDatesData}\n      xdataKey='Date Sold'\n      bars={[\n        { dataKey: 'Items Sold', size: 70, color: 'pastelGreen' }\n      ]}\n      tickFormatter={formatXAxis}\n      labelFormatter={formatTooltip}\n      switchLabel={switchDisable ? null : 'Show dates with no sales'}\n      switchCheck={allDates}\n      switchEvent={() => showAllDates(!allDates)}\n    />\n  )\n})\n\nexport default (SalesByDate)\n\nconst formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\nconst formatTooltip = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }\n","import { useState, memo } from 'react'\nimport styled from 'styled-components'\n\nimport { groupByPaymentType } from '../util/grouping'\nimport Flex from '../../../styles/layout/Flex'\nimport Text from '../../../styles/elements/Text'\nimport PieChart from '../../../styles/reporting/PieChart'\nimport Card from '../../../styles/elements/Card'\nimport { formatNum } from '../util/general'\n\nconst SalesByPaymentType = memo(({ data, isBasic }) => {\n  const [chartType, toggleChartType] = useState(false)\n  const chartData = groupByPaymentType(data)\n  return (\n    <Card\n      minHeight='420px'\n      flexDirection='row-reverse'\n      flexWrap='wrap'\n      sx={{\n        '@media only screen and (max-width: 1200px)': {\n          flexDirection: 'column'\n        }\n      }}\n      proOnly={isBasic ? {\n        component: 'Profits By Payment Type',\n        img: 'payment-type.png'\n      } : null}\n    >\n      <Flex\n        height='40%'\n        flexDirection='column'\n        mr={5}\n        justifyContent='flex-start'\n        alignItems='center'\n        sx={{\n          '@media only screen and (max-width: 1200px)': {\n            paddingTop: '40px',\n            margin: 0\n          }\n        }}\n      >\n        <Title color='primary' fontSize={25} mb='10px'>\n          Total: {formatNum(data.currency_type, data.total_earnings)}\n        </Title>\n        {\n          chartData.map(({ name, gross, color }, i) => {\n            return (\n              <Text key={i} color={color} fontSize={17} fontWeight={600}>\n                {name} - {formatNum(data.currency_type, gross)}\n              </Text>\n            )\n          })\n        }\n      </Flex>\n      <PieChart\n        m={0}\n        justifyContent='center'\n        sx={{\n          '@media only screen and (max-width: 1200px)': {\n            marginBottom: '20px'\n          }\n        }}\n        boxShadow='none'\n        data={chartData}\n        dataKey={chartType ? 'sold' : 'gross'}\n        currencyType={data.currency_type}\n        switchLabel='Show # of Items'\n        switchCheck={chartType}\n        switchEvent={() => {\n          toggleChartType(!chartType)\n        }}\n      />\n\n    </Card>\n\n  )\n})\n\nexport default (SalesByPaymentType)\n\nconst Title = styled(Text)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.mainBg};\n  width: 200px;\n  padding-bottom:3px;\n  text-align: center;\n`\n","import { useMemo, useState, memo } from 'react'\nimport moment from 'moment'\n\n// Utils\nimport { groupByTime } from '../util/grouping'\n\n// Components\nimport BubbleChart from '../../../styles/reporting/BubbleChart'\nimport Flex from '../../../styles/layout/Flex'\nimport styled from 'styled-components'\n\nimport SalesTable from '../../general/SalesTable'\n\nconst xLabels = [\n  '12am', '1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am',\n  '9am', '10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm',\n  '5pm', '6pm', '7pm', '8pm', '9pm', '10pm', '11pm'\n\n]\nconst yLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nconst SalesByDate = memo(({ data }) => {\n  const [coords, activateCoords] = useState(null)\n  const chartData = useMemo(() => groupByTime(data), [data])\n  return (\n    <Flex flexWrap='wrap'>\n\n      <BubbleChart\n        minWidth='850px'\n        isLoading={!data.sales}\n        headerContent='Sales By time'\n        data={chartData.arr}\n        tooltipContent={tooltipContent}\n        xLabels={xLabels}\n        yLabels={yLabels}\n        onClick={(x, y) => {\n          activateCoords({ x, y })\n        }}\n      />\n      {\n        coords ? (\n          <PopOut\n            xLabels={xLabels}\n            yLabels={yLabels}\n            data={chartData.obj}\n            coords={coords}\n            onClose={() => activateCoords(null)}\n          />\n\n        )\n          : null\n      }\n\n    </Flex>\n  )\n})\n\nexport default (SalesByDate)\n\nconst PopOut = ({ data, xLabels, yLabels, coords: { x, y }, onClose }) => {\n  const time = moment(xLabels[x], 'h a').format('H')\n  const day = yLabels[y].toLowerCase()\n  const sales = data[day][parseInt(time)] || []\n  return (\n    <SalesTable\n      minWidth='400px'\n      data={sales}\n      onClose={onClose}\n      headerContent={`${day} - ${xLabels[x]}`}\n      columnLabels={\n        ['date sold', 'username', 'item price']\n      }\n    />\n  )\n}\n\nconst tooltipContent = (value, time, day) => {\n  return (\n    <Flex flexDirection='column'>\n      <Flex>\n        <Strong>Day:</Strong> {day}\n      </Flex>\n      <Flex>\n        <Strong>Time:</Strong> {time}\n      </Flex>\n      <Flex>\n        <Strong>Sold:</Strong> {value} {value === 1 ? 'Item' : 'Items'}\n      </Flex>\n    </Flex>)\n}\n\nconst Strong = styled.strong`\n  margin-right: 5px;\n`\n","import { useState, useEffect, memo } from 'react'\nimport _ from 'lodash'\nimport { useSelector } from 'react-redux'\nimport GoogleMapReact from 'google-map-react'\nimport styled from 'styled-components'\n\nimport Card from '../../../styles/elements/Card'\nimport Tooltip from '../../../styles/elements/Tooltip'\nimport SalesTable from '../../general/SalesTable'\nimport SaleDetails from '../../general/SaleDetails'\nimport Flex from '../../../styles/layout/Flex'\nimport { getGeopoints } from '../util/geopoints'\n\nconst SalesMap = memo(({ data, styles, isBasic }) => {\n  const [salesToMap, setSalesToMap] = useState([])\n  const [salesToShow, setSalesToShow] = useState({})\n  const [activeSale, activateSale] = useState(null)\n  const { googleMapsKey } = useSelector(state => state.generalReducer)\n  const [geocodes, setGeocodes] = useState([])\n\n  useEffect(() => {\n    getGeopoints(data, (res) => {\n      setGeocodes(res)\n    })\n  }, [data])\n\n  useEffect(() => {\n    return setSalesToMap(_.values(geocodes))\n  }, [geocodes])\n\n  if (!googleMapsKey) return null\n\n  return (\n    <Card\n      headerContent='Map of Sales (US only)'\n      proOnly={isBasic ? {\n        component: 'Map of Sales (US only)',\n        img: 'sales-map.png'\n      } : null}\n      height='350px'\n    >\n      <Flex width={[1, 1, 1, 1]}>\n        <MapContainer mini={salesToShow.sales}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: googleMapsKey.key }}\n            defaultCenter={{ lat: 39, lng: -98 }}\n            defaultZoom={0}\n            yesIWantToUseGoogleMapApiInternals\n            gestureHandling='cooperative'\n            options={{ gestureHandling: 'cooperative' }}\n            minWidth='500px'\n          >\n            {salesToMap.length\n              ? salesToMap.map((zip, i) => {\n                const { geopoint: { lat, lng } } = zip\n                if (getTitle(zip).includes('undefined')) return null // this weeds out other countries\n                return (\n                  <Marker\n                    setSalesToShow={setSalesToShow}\n                    activateSale={activateSale}\n                    zip={zip}\n                    key={i}\n                    lat={lat}\n                    lng={lng}\n                  />\n                )\n              })\n              : null}\n\n          </GoogleMapReact>\n        </MapContainer>\n        {salesToShow.sales && !activeSale\n          ? (\n            <SalesTable\n              boxShadow='none'\n              m='0'\n              minWidth='50%'\n              data={salesToShow}\n              currencyType={data.currency_type}\n              headerContent={getTitle(salesToShow)}\n              handleRowClick={(row, i) => {\n                activateSale(row.rowData)\n              }}\n              onClose={() => setSalesToShow({})}\n            />\n          ) : activeSale ? (\n            <SaleDetails\n              chartHeight={200}\n              currencyType={data.currency_type}\n              boxShadow='none'\n              m='0'\n              minWidth='50%'\n              onClose={() => activateSale(null)}\n              row={activeSale}\n              getUrl={data.getUrl}\n            />\n          )\n            : null}\n      </Flex>\n    </Card>\n  )\n})\n\nexport default SalesMap\n\nconst Marker = memo(({ zip, setSalesToShow, activateSale }) => {\n  return (\n    <Tooltip\n      offset={40}\n      title={getTitle(zip)}\n      hideOnClick={false}\n    >\n      <I\n        className='fa fa-map-marker' onClick={() => {\n          activateSale(null)\n          setSalesToShow(zip)\n        }}\n      />\n    </Tooltip>)\n})\n\n// utils\nfunction getTitle ({ location, sales }) {\n  const title = `${location.city}, ${location.state} ${location.zip} - ${sales.length}`\n  return title\n}\n\nconst MapContainer = styled.div`\n  visibility: visible;\n  height: 320px;\n  width: 100%;\n  background: 'black';\n  transition: .2s;\n  display: flex;\n`\nconst I = styled.i`\n  font-size: 25px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.pastelRose};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red}\n\n  }\n`\n","import ValueBox from '../../../styles/reporting/ValueBox'\nimport Flex from '../../../styles/layout/Flex'\n\nconst TopValueBoxes = ({ data, minWidth }) => {\n  return (\n    <Flex flexWrap='wrap' mt='5px'>\n      <ValueBox\n        minWidth={minWidth}\n        value={data.sales ? data.sales.length : 0}\n        title='Items Sold'\n      />\n      <ValueBox\n        minWidth={minWidth}\n        float\n        currencyType={data.currency_type}\n        value={data.avg_price}\n        title='Average Item Price'\n      />\n      <ValueBox\n        minWidth={minWidth}\n        value={data.avg_time_listed}\n        title='Average Days Listed'\n      />\n      <ValueBox\n        minWidth={minWidth}\n        value={data.free_shipping}\n        title='Items Offered with Free Shipping'\n      />\n    </Flex>\n  )\n}\n\nexport default TopValueBoxes\n","import TotalEarnings from '../../../styles/reporting/TotalEarnings'\nimport { memo } from 'react'\n\nconst TotalEarningsView = memo(({ data, half }) => (\n  <TotalEarnings\n    m='0px'\n    boxShadow='none'\n    borderRadius='0px'\n    float\n    currencyType='$'\n    title='Total Earnings'\n    value={data.total_earnings}\n    netValue={\n      (data.total_earnings - data.total_shipping_cost - data.depop_fees).toFixed(2)\n    }\n    data={[\n      {\n        name: 'Net Earnings',\n        value: parseFloat(data.total_earnings - data.total_shipping_cost - data.depop_fees)\n      },\n      { name: 'Depop Fees', value: parseFloat(data.depop_fees) },\n      { name: 'Paypal Fees', value: parseFloat(data.paypal_fees) },\n      { name: 'Total Shipping', value: parseFloat(data.total_shipping_cost) }\n    ]}\n  />\n))\n\nexport default TotalEarningsView\n","import { memo, useMemo, useState } from 'react'\nimport moment from 'moment'\n\nimport LineChart from '../../../styles/reporting/LineChart'\n\nimport { groupByDate } from '../util/grouping'\nimport Flex from '../../../styles/layout/Flex'\nimport Button from '../../../styles/elements/Button'\n\nconst VariableLineChart = memo(({ data }) => {\n  const [variables, updateVars] = useState([\n    { dataKey: 'Items Sold', size: 70, color: 'teal', disabled: false },\n    { dataKey: 'Gross', size: 70, color: 'pastelPurple', disabled: true },\n    { dataKey: 'Net', size: 70, color: 'pastelGreen', disabled: true }\n  ])\n  const chartData = useMemo(() => groupByDate(data, true), [data])\n  const handleClick = i => {\n    const newVars = [...variables]\n    newVars[i].disabled = !newVars[i].disabled\n    updateVars(newVars)\n  }\n  const Buttons = () => (\n    <Flex>\n      {\n        variables.map(({ dataKey, color, disabled }, i) => (\n          <Button\n            key={i}\n            mr='4px'\n            bg='mainBg'\n            color={disabled ? 'greyDark' : color}\n            onClick={() => handleClick(i)}\n          >\n            {dataKey}\n          </Button>\n        ))\n      }\n\n    </Flex>\n  )\n  return (\n    <LineChart\n      headerContent={<Buttons />}\n      data={chartData}\n      xdataKey='Date Sold'\n      lines={variables}\n      hideDot\n      tickFormatter={formatXAxis}\n      labelFormatter={formatLabel}\n      formatTooltip={(t, l) => formatTooltip(t, l, data)}\n    />\n  )\n})\n\nexport default (VariableLineChart)\n\nconst formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\nconst formatLabel = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }\n\nconst formatTooltip = (value, name, props) => {\n  if (name !== 'Items Sold') {\n    const num = value.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })\n    return `$${num}`\n  }\n  return value\n}\n","import Flex from '../../styles/layout/Flex'\nimport { useSelector } from 'react-redux'\n\nimport SalesByDate from './SalesByDate'\nimport SalesByCategory from './SalesByCategory'\nimport SalesMap from './SalesMap'\nimport SalesByTime from './SalesByTime'\nimport SalesAndListingsByDay from './SalesAndListingsByDay'\nimport RecentSales from './RecentSales'\nimport SalesByPaymentType from './SalesByPaymentType'\nimport RevenueOverview from './RevenueOverview'\nimport ProfitsByMonth from './ProfitsByMonth'\nimport TotalEarningsView from './TotalEarnings'\nimport { CompareView } from './CompareView'\nimport TopValueBoxes from './TopValueBoxes'\nimport VariableLineGraph from './VariableLineGraph'\nimport NoDataFound from '../../styles/elements/NoDataFound'\n\nconst Reports = (props) => {\n  const { rangedData, allData, compareData, user } = useSelector(state => state.generalReducer)\n  const data = rangedData\n\n  const isBasic = user.membership.type === 'basic'\n  if (JSON.stringify(compareData) !== '{}' && !isBasic) {\n    return <CompareView data={rangedData} compareData={compareData} />\n  }\n  return (\n    <Flex flexDirection='column' width={[1]} justifyContent='center'>\n      {\n        !data.sales.length ? (\n          <NoDataFound\n            mt='100px'\n            title='Shoot!'\n            msg=\"It doesn't look like you have any sales in the specified date range.\"\n          />)\n          : (\n\n            <>\n              {/* <RoadToVerified data={data} /> */}\n              <Flex>\n                <TotalEarningsView data={data} />\n              </Flex>\n              <TopValueBoxes data={data} minWidth='20%' />\n\n              <Flex>\n                <RevenueOverview data={data} isBasic={isBasic} />\n                <SalesByPaymentType data={data} isBasic={isBasic} />\n              </Flex>\n              <SalesByDate data={data} />\n              <SalesByCategory data={data} isBasic={isBasic} />\n              <SalesMap data={data} isBasic={isBasic} />\n\n              <Flex>\n                <SalesAndListingsByDay data={data} />\n                <ProfitsByMonth data={data} />\n              </Flex>\n              <VariableLineGraph data={data} />\n              <RecentSales data={allData} />\n              <SalesByTime data={data} />\n            </>\n          )\n      }\n    </Flex>\n  )\n}\nexport default Reports\n\nconst tempData = [\n  { time: '13:11', sales: 5 },\n  { time: '14:11', sales: 10 },\n  { time: '15:11', sales: 20 },\n  { time: '16:11', sales: 40 },\n  { time: '17:11', sales: 30 },\n  { time: 'May', sales: 30 },\n  { time: 'June', sales: 40 },\n  { time: 'July', sales: 50 },\n  { time: 'August', sales: 60 },\n  { time: 'September', sales: 70 },\n  { time: 'October', sales: 50 },\n  { time: 'November', sales: 100 }\n]\n","\nexport const formatNum = (type, num) => {\n  return type + num.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })\n}\n","import geocodes from '../../../assets/geocodes.json'\n\nexport const getGeopoints = (allSales, resolve) => {\n  if (!allSales) return\n  const geocodeRequests = [] // holds addresses that need to be updated\n  const newDocObjs = {} // holds all updated data which will be sent to state\n\n  allSales.sales.forEach((doc, i) => {\n    const sale = allSales.sales[i]\n    const zip = sale.post_code.trim()\n\n    geocodeRequests.push(zip)\n\n    newDocObjs[zip] = {\n      sales: newDocObjs[zip] ? [...newDocObjs[zip].sales, allSales.sales[i]] : [allSales.sales[i]],\n      geopoint: { lat: 0, lng: 0 },\n      location: {}\n    }\n  })\n  if (geocodeRequests.length) {\n    // finds geocode in JSON obj\n    for (let i = 0; i < geocodeRequests.length; i++) {\n      const zip = geocodeRequests[i]\n      for (let j = 0; j < geocodes.length; j++) {\n        if (zip === geocodes[j].fields.zip) {\n          newDocObjs[zip].geopoint = {\n            lat: geocodes[j].fields.latitude,\n            lng: geocodes[j].fields.longitude\n          }\n\n          newDocObjs[zip].location = {\n            city: geocodes[j].fields.city,\n            state: geocodes[j].fields.state,\n            zip: geocodes[j].fields.zip,\n            timezone: geocodes[j].fields.timezone\n          }\n          continue\n        }\n      }\n    }\n  }\n  resolve(newDocObjs)\n}\n","import moment from 'moment'\nimport currency from 'currency.js'\nimport theme from '../../../theme'\n\nexport const groupByDay = (data) => {\n  const groupedData = {\n    Sun: { sales: 0, listings: 0 },\n    Mon: { sales: 0, listings: 0 },\n    Tue: { sales: 0, listings: 0 },\n    Wed: { sales: 0, listings: 0 },\n    Thu: { sales: 0, listings: 0 },\n    Fri: { sales: 0, listings: 0 },\n    Sat: { sales: 0, listings: 0 }\n  }\n  const newData = []\n  if (data.sales) {\n    // groups data\n    data.sales.forEach((file) => {\n      const saleDay = moment(file.date_of_sale, 'MM/DD/YYYY').format('ddd')\n      const listingDay = moment(file.date_of_listing, 'MM/DD/YYYY').format('ddd')\n      groupedData[listingDay].listings++\n      groupedData[saleDay].sales++\n    })\n    // sets up data in recharts format\n    Object.keys(groupedData).forEach((key) => {\n      newData.push({ Day: key, 'Items Sold': groupedData[key].sales, 'Items Listed': groupedData[key].listings })\n    })\n  }\n  return newData\n}\n\nexport const groupByDate = (data, showEmptyDates) => {\n  const newData = []\n  if (data.sales) {\n    data.sales.forEach(({ date_of_sale, total, buyer_shipping_cost, usps_cost }) => {\n      const gross = currency(total).value\n      const net = gross - currency(buyer_shipping_cost).value - currency(usps_cost).value\n      const latest = newData[newData.length - 1]\n      if (!newData.length || latest['Date Sold'] !== date_of_sale) {\n        if (latest && showEmptyDates) {\n          const milisecs =\n              new Date(moment(date_of_sale, 'MM-DD-YYYY').format()).getTime() -\n              new Date(moment(latest['Date Sold'], 'MM-DD-YYYY').format()).getTime()\n          const diff = milisecs / (1000 * 3600 * 24)\n          if (diff !== 1) {\n            for (let i = 1; i < diff; i++) {\n              const day = new Date(moment(latest['Date Sold'], 'MM-DD-YYYY').format()).getDate() + i\n              const date = new Date(moment(latest['Date Sold'], 'MM-DD-YYYY').format())\n              const formatted = moment(date.setDate(day)).format('MM-DD-YYYY')\n\n              newData.push({ 'Date Sold': formatted, 'Items Sold': 0, Gross: 0, Net: 0 })\n            }\n          }\n        }\n\n        newData.push({ 'Date Sold': date_of_sale, 'Items Sold': 1, Gross: gross, Net: net })\n      } else {\n        latest['Items Sold'] += 1\n        latest.Net += net\n        latest.Gross += gross\n      }\n    })\n  }\n  return newData\n}\n\nexport const groupByTime = (data) => {\n  // const groupedData = {}\n  const newData = [[], [], [], [], [], [], []].fill(0)\n    .map(() => new Array(24).fill(0))\n  const obj = {\n    sun: [],\n    mon: [],\n    tue: [],\n    wed: [],\n    thu: [],\n    fri: [],\n    sat: []\n  }\n  if (data.sales) {\n    // groups data\n    data.sales.forEach((sale) => {\n      const hourIndex = moment(sale.time_of_sale, 'hh:mm A').format('H')\n      const day = moment(sale.date_of_sale).format('ddd').toLowerCase()\n      if (obj[day][hourIndex]) {\n        obj[day][hourIndex].push(sale)\n      } else obj[day][hourIndex] = [sale]\n      // obj[day].push(sale)\n      switch (day) {\n        case 'sun': {\n          newData[0][hourIndex] += 1\n          break\n        }\n        case 'mon': {\n          newData[1][hourIndex] += 1\n          break\n        }\n        case 'tue': {\n          newData[2][hourIndex] += 1\n          break\n        }\n        case 'wed': {\n          newData[3][hourIndex] += 1\n          break\n        }\n        case 'thu': {\n          newData[4][hourIndex] += 1\n          break\n        }\n        case 'fri': {\n          newData[5][hourIndex] += 1\n          break\n        }\n        case 'sat': {\n          newData[6][hourIndex] += 1\n          break\n        }\n      }\n    })\n  }\n  return { arr: newData, obj }\n}\n\nexport const groupByCategory = (data, gross) => {\n  const newData = []\n  const allCategories = {}\n  if (data.sales) {\n    data.sales.forEach(({ category, total }) => {\n      const totalNum = currency(total).value\n      if (allCategories[category]) {\n        allCategories[category].sold += 1\n        allCategories[category].gross += totalNum\n      } else allCategories[category] = { sold: 1, gross: totalNum }\n    })\n  }\n\n  Object.keys(allCategories).forEach((key) => {\n    newData.push({\n      Category: capitalize(key),\n      'Items Sold': allCategories[key].sold,\n      'Gross Earnings': allCategories[key].gross\n    })\n  })\n  newData.sort((a, b) => {\n    return b['Items Sold'] - a['Items Sold']\n  })\n  return newData.slice(0, 15)\n}\n\nexport const groupByPaymentType = (data) => {\n  const newData = []\n  const paymentTypes = {}\n  if (data.sales) {\n    data.sales.forEach(({ payment_type, total }) => {\n      const totalNum = currency(total).value\n      if (paymentTypes[payment_type]) {\n        paymentTypes[payment_type].sold += 1\n        paymentTypes[payment_type].gross += totalNum\n      } else paymentTypes[payment_type] = { sold: 1, gross: totalNum }\n    })\n  }\n  const colors = [theme.colors.pastelOrange, theme.colors.pastelRose, theme.colors.primary, theme.colors.pastelBlueLight]\n\n  Object.keys(paymentTypes).forEach((key, i) => {\n    newData.push({\n      name: key === 'STRIPE' ? 'BANK ACCOUNT' : key,\n      sold: paymentTypes[key].sold,\n      gross: paymentTypes[key].gross,\n      color: colors[i]\n    })\n  })\n\n  return newData\n}\n\nexport const groupByWeek = (data, showEmptyDates) => {\n  const newData = []\n  const obj = {}\n  if (data.sales) {\n    data.sales.forEach(({ date_of_sale, total, buyer_shipping_cost, usps_cost }) => {\n      const { week, month } = getDateInfo(date_of_sale)\n      const currentWeek = `${month} - Wk${week}`\n\n      if (!obj[currentWeek]) obj[currentWeek] = { Gross: 0, Net: 0 }\n\n      const gross = currency(total).value\n      const net = gross - currency(buyer_shipping_cost).value - currency(usps_cost).value\n      obj[currentWeek].Gross += gross\n      obj[currentWeek].Net += net\n    })\n    Object.keys(obj).forEach(key => {\n      newData.push({ week: key, ...obj[key] })\n    })\n  }\n  return newData\n}\n\nfunction getDateInfo (date) {\n  const month = moment(date).format('MMM YYYY')\n  var nthOfMonth = Math.ceil(moment(date).date() / 7)\n  if (nthOfMonth >= 5) return { week: 4, month }\n  else return { week: nthOfMonth, month }\n}\n\nfunction capitalize (str) {\n  str = str.split(' ')\n  for (let i = 0; i < str.length; i++) {\n    str[i] = str[i][0].toUpperCase() + str[i].substr(1)\n  }\n\n  return str.join(' ')\n}\n","import moment from 'moment'\nimport currency from 'currency.js'\n\nexport const formatSalesTable = ({ sales, currency_type }, currencyType) => {\n  const newSales = []\n  sales.forEach((sale) => {\n    const ms = new Date(sale.date_of_sale).getTime() - new Date(sale.date_of_listing).getTime()\n    const days = ms / (1000 * 3600 * 24)\n    newSales.push({\n      ...sale,\n      'date sold': moment(sale.date_of_sale).format('MM/DD/YYYY'),\n      buyer: `${sale.name}`,\n      username: `${sale.buyer}`,\n      'item price': sale.item_price,\n      'buyer-paid shipping': sale.buyer_shipping_cost,\n      'seller-paid shipping': sale.usps_cost,\n      'depop fees': `${currency_type || currencyType}${currency(sale.depop_fee).value + currency(sale.depop_payments_fee).value}`,\n      'date listed': moment(sale.date_of_listing).format('MM/DD/YYYY'),\n      'days listed': days, // converts from ms to days\n      'item description': formatDescription(sale.description),\n      address: `${sale.address_line_1} ${sale.city}, ${sale.state ? sale.state : ''} ${sale.post_code}`\n\n    })\n  })\n  return sort(newSales)\n}\n\nexport const getRecentSales = ({ sales, currency_type }, currencyType) => {\n  const sortedSales = sort(sales, 'date_of_sale')\n  const newSales = []\n  const mostRecentDate = sortedSales[0].date_of_sale\n  const scndMostRecentDate = moment(mostRecentDate).subtract(1, 'days').format('MM-DD-YYYY')\n  sortedSales.forEach((sale) => {\n    if (sale.date_of_sale === mostRecentDate || sale.date_of_sale === scndMostRecentDate || newSales.length < 15) {\n      const ms = new Date(sale.date_of_sale).getTime() - new Date(sale.date_of_listing).getTime()\n      const days = ms / (1000 * 3600 * 24)\n      newSales.push({\n        ...sale,\n        'date sold': moment(sale.date_of_sale).format('MM/DD/YYYY'),\n        buyer: `${sale.name}`,\n        username: `${sale.buyer}`,\n        'item price': sale.item_price,\n        'buyer-paid shipping': sale.buyer_shipping_cost,\n        'seller-paid shipping': sale.usps_cost,\n        'depop fees': `${currency_type || currencyType}${currency(sale.depop_fee).value + currency(sale.depop_payments_fee).value}`,\n        'date listed': moment(sale.date_of_listing).format('MM/DD/YYYY'),\n        'days listed': days, // converts from ms to days\n        'item description': formatDescription(sale.description),\n        address: `${sale.address_line_1} ${sale.city}, ${sale.state ? sale.state : ''} ${sale.post_code}`\n\n      })\n    }\n  })\n  return newSales\n}\n\n// utils\nconst sort = (sales, term) => {\n  return [...sales].sort((a, b) => {\n    const date1 = new Date(a[term || 'date sold'])\n    const date2 = new Date(b[term || 'date sold'])\n    return date2 - date1\n  })\n}\nconst formatDescription = (text) => {\n  const tagStart = text.lastIndexOf('{')\n\n  const withoutTags = tagStart !== -1 ? text.substring(0, tagStart) : text\n  return withoutTags\n}\n","import Reports from '../components/reports'\n\nexport default (props) => {\n  return (<Reports />)\n}\n","import styled from 'styled-components'\nimport { transparentize } from 'polished'\n\nimport Flex from '../../layout/Flex'\nimport Button from '../../elements/Button'\nimport Text from '../../elements/Text'\nimport theme from '../../../theme'\nimport Link from 'next/link'\n\nfunction BlurShield (props) {\n  return (\n    <Container img={'/blurs/' + props.img}>\n      <Flex bg={transparentize(0.8, theme.colors.black)} flex={[1]} justifyContent='center' alignItems='center' flexDirection='column'>\n        <Text textAlign='center' fontSize='25px' fontWeight={600} color='black'>{props.component}</Text>\n        <Divider />\n        <Text textAlign='center' fontSize='15px' fontWeight={400} mb='10px'>Pro Version Only</Text>\n        <Link href='/settings/membership'>\n          <Button background='primary' color='white' size='md'>Upgrade Now</Button>\n        </Link>\n      </Flex>\n    </Container>\n\n  )\n}\n\nexport default BlurShield\n\nconst Container = styled(Flex)`\n  background-image: url(${({ img }) => img});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n`\nconst Divider = styled.div`\n  width: 100px;\n  height: 2px; \n  background: ${({ theme }) => theme.colors.primary};\n  margin: 10px 0px 10px 0px;\n`\n","import { Button } from 'rebass'\nimport theme from '../../../theme'\nimport styled from 'styled-components'\nimport ThreeDotLoader from '../Loading/ThreeDotLoader'\nimport Flex from '../../layout/Flex'\n\nconst Btn = ({ children, bg, height, color, isLoading, ...props }) => {\n  return (\n    <StyledButton\n      fontSize={15}\n      {...props}\n      bg={theme.colors[bg || 'primary']}\n      color={theme.colors[color || 'white']}\n      height={height || '35px'}\n    >\n      {isLoading ? (\n        <Flex justifyContent='center' alignItems='center'>\n          <ThreeDotLoader color={color || 'white'} bg={bg || 'primary'} />\n        </Flex>\n      ) : (\n        children\n      )}\n    </StyledButton>\n  )\n}\n\nexport default Btn\n\nconst StyledButton = styled(Button)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: ${({ theme }) => theme.transitionDurations[1]};\n    cursor: ${({ disabled }) => disabled ? 'not-allowed' : 'pointer'};\n    user-select:none;\n    overflow: hidden;\n    letter-spacing: .5px;\n    &:hover {\n        opacity: .7;\n    }\n`\n","import styled from 'styled-components'\n\nimport Flex from '../../layout/Flex'\nimport Switch from '../Switch'\nimport Tooltip from '../Tooltip'\nimport Spinner from '../Loading/Spinner'\nimport BlurShield from '../BlurShield'\nconst Card = ({\n  onClose,\n  headerBorder,\n  switchLabel,\n  switchCheck,\n  switchEvent,\n  switchDisabled,\n  switchDisabledMsg,\n  proOnly,\n  ...props\n}) => {\n  return (\n    <Container\n      m='10px'\n      flexDirection='column'\n      alignItems='center'\n      {...props}\n    >\n      {\n        proOnly ? (\n          <BlurShield {...proOnly} />\n        ) : (\n          <>\n            {props.headerContent ? (\n              <Header boxShadow={props.boxShadow} border={headerBorder}>\n                {props.headerContent}\n                {\n\n                  switchLabel || onClose ? (\n                    <Tooltip disabled={!switchDisabled} title={switchDisabledMsg} hideOnClick={false}>\n                      <Flex alignItems='center'>\n                        {\n                          switchLabel\n                            ? (\n                              <Switch\n                                label={switchLabel}\n                                checked={switchCheck}\n                                onChange={switchEvent}\n                                disabled={switchDisabled}\n                              />\n                            ) : null\n                        }\n                        {\n                          onClose ? (\n                            <Button onClick={onClose}>\n                              <i className='fa fa-close' />\n                            </Button>\n                          ) : null\n                        }\n                      </Flex>\n                    </Tooltip>\n                  )\n                    : null\n                }\n              </Header>\n            ) : null}\n            {\n              props.isLoading\n                ? (\n                  <LoadingContainer>\n                    <Spinner />\n                  </LoadingContainer>)\n                : (\n                  <>{props.children}</>\n                )\n            }\n          </>\n        )\n      }\n\n    </Container>\n\n  )\n}\n\nexport default Card\n\nconst Container = styled(Flex)` \n  flex: 1;\n  border-radius: ${props => props.borderRadius ? props.borderRadius : props.theme.borderRadius.normal};\n  background-color: ${props => props.theme.colors[props.background] || props.theme.colors.white};\n  min-height:${({ minHeight }) => minHeight || 150}px;\n  /* min-width: 1px; */\n  position: relative;\n  z-index: 1;\n  height: ${({ height }) => height};\n  border-radius: ${props => props.theme.borderRadius.normal};\n\n  ${({ isLoading }) => isLoading ? `\n    display: flex;\n    flex-direction: column;\n    justify-content:space-between;\n    padding-bottom: 3%;\n  ` : null}\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    box-shadow: ${props => props.boxShadow !== 'none' ? props.theme.shadows.normal : 'none'};\n    /* background: green; */\n    z-index: -1;\n  }\n`\nconst LoadingContainer = styled.div`\n  position: absolute;\n  top: 50%;\n`\nconst Header = styled.div`\n  padding: 15px;\n  text-align: left;\n  font-size: 14px;\n  text-transform: uppercase;\n  position: relative;\n  display:flex;\n  min-height:40px;\n  display:flex;\n  align-items: center;\n  justify-content: space-between;\n  width:100%;\n  border: ${({ boxShadow, theme, border }) =>\n                              border || (boxShadow === 'none'\n                              ? theme.colors.greyLightest\n                              : 'transparent')} 1px solid;\n  border-bottom: ${({ border, theme }) => border || `1px solid ${theme.colors.greyLightest}`};\n  background-color: ${props => props.theme.colors.white};\n  border-top-right-radius: ${props => props.theme.borderRadius.normal};\n  border-top-left-radius: ${props => props.theme.borderRadius.normal};\n\n`\nconst Button = styled.button`\n  border: none;\n  background: transparent;\n  cursor:pointer;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.greyDark};\n  transition: .1s;\n  &:hover {\n\n    color: ${({ theme }) => theme.colors.black};\n  }\n\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport Flex from '../../layout/Flex'\n\nconst Spinner = props => {\n  return <Loader {...props} />\n}\n\nexport default Spinner\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst Loader = styled(Flex)`\n    font-size: 10px;\n    width: ${({ width }) => width || '4em'};\n    height: ${({ width }) => width || '4em'};\n    border-radius: 50%;\n    position: relative;\n    animation: ${spin} 1.4s infinite linear;\n    transform: translateZ(0);  \n    border: ${({ size }) => size || 4}px solid ${props => props.theme.colors[props.color] || props.theme.colors.primary};\n    border-right-color: transparent;\n\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n// const text = props.theme.colors[props.color]\n\nconst load = keyframes`\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 2.5em 0 -.3em;\n  }\n  40% {\n    box-shadow: 0 2.5em 0 0;\n  }\n}\n`\nconst circleCSS = props => {\n  return (`\n    border-radius: 50%;\n    width: 1em;\n    height: 1em;\n    `)\n}\nconst Loader = styled.div`\n    ${circleCSS}\n    background:transparent;\n    animation-fill-mode: both;\n    animation: ${load} 1.8s infinite ease-in-out;\n    position: absolute;\n    top: -2.5em;\n    color: ${props => props.theme.colors[props.color] || props.theme.colors.white};\n    font-size: 10px;\n    position: relative;\n    text-indent: -9999em;\n    transform: translateZ(0);\n    animation-delay: -0.16s;\n\n\n   &:before {\n    ${circleCSS}\n    animation-fill-mode: both;\n    animation: ${load} 1.8s infinite ease-in-out;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -2.5em;\n    animation-delay: -0.32s;\n  }\n\n  &:after {\n    ${circleCSS}\n    animation-fill-mode: both;\n    animation: ${load} 1.8s infinite ease-in-out;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 2.5em;\n\n  }   \n`\n\nconst ThreeDotLoader = props => {\n  return <Loader {...props} />\n}\n\nexport default ThreeDotLoader\n","import Flex from '../../layout/Flex'\nimport Text from '../Text'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport Link from 'next/link'\n\nconst NoDataFound = ({ title, msg, ...props }) => {\n  const { files } = useSelector(state => state.generalReducer)\n\n  return (\n    <Flex justifyContent='center' alignItems='center' {...props}>\n      <Text color='primary' fontSize={22} fontWeight={600}>{title || 'Oops!'}</Text>\n      <Divider />\n      <Flex flexDirection='column' justifyContent='space-between' alignItems='center'>\n\n        <Flex alignItems='center'>\n          {\n            files.length ? <Text color='primary'>{msg || \"It seems that you don't any sales yet!\"}</Text>\n              : (\n                <>\n              It seems that you need to\n                  <Link href='/files'>\n                    <A>\n                      upload some files. <I className='fa fa-chevron-right' />\n                    </A>\n                  </Link>\n                </>\n              )\n          }\n        </Flex>\n      </Flex>\n\n    </Flex>\n  )\n}\n\nexport default NoDataFound\n\nconst Divider = styled.div`\n    height: 70px;\n    width: 2px;\n    background: ${({ theme }) => theme.colors.primary};\n    margin: 0px 10px 0px 10px;\n`\nconst I = styled.i`\n    margin-left: 10px;\n`\nconst A = styled.a`\n    cursor: pointer;\n    text-decoration: none;\n    border-radius: ${({ theme }) => theme.borderRadius.normal};\n    background: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.textGrey};\n    border: 1px solid ${({ theme }) => theme.colors.primary};\n    padding: 10px;\n    margin-left: 5px;\n    width: 147px;\n    overflow: hidden;\n    white-space: nowrap;\n    display: flex;\n    align-items: center;\n    transition: ${({ theme }) => theme.transitionDurations[1]};\n    &:hover {\n        width: 170px;\n    }\n`\n","import Switch from 'react-ios-switch'\nimport theme from '../../../theme'\nimport styled from 'styled-components'\n\nconst SwitchView = ({ label, ...props }) => {\n  return (\n    <>\n      <Switch {...props} pendingOnColor={theme.colors.green} />\n      <Label>\n        {label}\n      </Label>\n    </>)\n}\n\nexport default SwitchView\n\nconst Label = styled.div`\n    font-weight: ${theme.fontWeights.regular};\n    font-size: 13px;\n    line-height: 18px;\n    text-transform: uppercase;\n    margin-left: 5px;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Column, Table as TableComp } from 'react-virtualized' // https://github.com/bvaughn/react-virtualized\nimport Card from '../Card'\nimport theme from '../../../theme'\n\nconst Table = (props) => {\n  const { data, columnLabels, tableHeight, tableWidth, handleRowClick, background, activeRow } = props\n  return (\n    <Card {...props}>\n\n      <TableComp\n        width={tableWidth || 250}\n        height={tableHeight || 280}\n        headerHeight={20}\n        rowWidth='100%'\n        rowHeight={30}\n        onRowClick={handleRowClick}\n        rowStyle={({ index }) => rowStyle({ handleRowClick, index }, activeRow)}\n        rowCount={data.length}\n        rowGetter={({ index }) => {\n          return data[index]\n        }}\n        style={{\n          willChange: 'auto',\n          width: '100%',\n          height: props.height,\n          background: background || theme.colors.mainBg,\n          borderRadius: theme.borderRadius.normal,\n          transition: '.2s'\n        }}\n      >\n        {columnLabels.map((label, i) => {\n          return (\n            <Column\n              key={label + i}\n              label={label}\n              dataKey={[label]}\n              cellDataGetter={({ rowData }) => rowData[label]}\n              width={100}\n            />\n          )\n        })}\n      </TableComp>\n    </Card>\n\n  )\n}\nexport default Table\n\nTable.propTypes = {\n  tableHeight: PropTypes.number, // specificies table height\n  tableWidth: PropTypes.number,\n  height: PropTypes.string, // specificies card height\n  width: PropTypes.string,\n  data: PropTypes.array,\n  columnLabels: PropTypes.array\n  // There's a lot more potentially because of rebass's styling system that we pass to\n  // the card wrapper, but that'll do for now.\n}\n\nconst rowStyle = (props, activeRow) => {\n  return (\n    {\n      cursor: props.handleRowClick ? 'pointer' : 'default',\n      color: activeRow === props.index && props.index !== -1 ? theme.colors.mainBg\n        : theme.colors.textGrey,\n      background:\n        activeRow === props.index && props.index !== -1 ? theme.colors.teal\n          : props.index % 2 === 0\n            ? theme.colors.greyLight2\n            : theme.colors.mainBg\n    }\n  )\n}\n","import React from 'react'\nimport { Text as TextComponent } from 'rebass'\nimport styled from 'styled-components'\nimport theme from '../../../theme'\n\nconst Text = ({ notFound, ...props }) => {\n  const preset = notFound ? {\n    color: theme.colors.textSubtle,\n    fontSize: '25px'\n  } : {}\n\n  return <StyledText {...preset} {...props} />\n}\n\nexport default Text\n\nconst StyledText = styled(TextComponent)`\n  color: ${({ theme, color }) => theme.colors[color]};\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Tooltip as Tippy } from 'react-tippy'\n\n// @component\nexport const Tooltip = ({ title, size, ...rest }) => {\n  const html = title ? <div>{title}</div> : rest.html\n  return (\n    <Tippy\n      html={html}\n      size={size}\n      {...rest}\n    />\n  )\n}\n\nTooltip.propTypes = {\n  position: PropTypes.oneOf([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start'\n  ])\n}\nTooltip.defaultProps = {\n  arrow: true,\n  arrowSize: 'small'\n}\n\nexport default Tooltip\n","import React from 'react'\nimport { Flex as FlexView } from 'rebass/styled-components'\n\nconst Flex = props => {\n  return (\n    <FlexView {...props}>\n      {props.children}\n    </FlexView>\n  )\n}\n\nexport default Flex\n","import React from 'react'\nimport {\n  AreaChart, Area, XAxis, Tooltip, ResponsiveContainer\n} from 'recharts'\n\nimport theme from '../../../theme'\nimport { ChartWrap } from '../styleUtil'\nimport { transparentize } from 'polished'\n\nconst Areachart = ({ areas, xdataKey, data, onHover, disableAnimation, noToolTip, ...props }) => {\n  return (\n    // <Card {...props} minWidth='100%'>\n    <ChartWrap noPadding style={{ position: 'absolute', bottom: '0px', width: '102%' }}>\n\n      <ResponsiveContainer width='100%' height='100%'>\n        <AreaChart data={data}>\n          <defs>\n            {\n              areas.map(({ key, color }, i) => {\n                return (\n                  <linearGradient key={i} id={key} x1='0' y1='0' x2='0' y2='1'>\n                    <stop offset='5%' stopColor={theme.colors[color]} stopOpacity={1} />\n                    <stop offset='100%' stopColor={theme.colors[color]} stopOpacity={0} />\n                  </linearGradient>\n\n                )\n              })\n            }\n\n          </defs>\n\n          <XAxis dataKey='week' hide />\n          {\n            noToolTip ? null : (\n\n              <Tooltip wrapperStyle={onHover ? { visibility: 'hidden' } : null} formatter={onHover} labelFormatter={onHover} />\n            )\n          }\n          {areas.map(({ key, color }, i) => {\n            return (\n              <Area\n                key={i}\n                type='monotone'\n                isAnimationActive={typeof disableAnimation !== 'boolean'}\n                dataKey={key}\n                stroke={transparentize(0.7, theme.colors[color] || theme.colors.primary)}\n                fillOpacity={1}\n                fill={`url(#${key})`}\n              />\n\n            )\n          })}\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartWrap>\n    // </Card>\n  )\n}\n\nexport default Areachart\n","import React from 'react'\nimport {\n  BarChart, Bar, XAxis, Tooltip, ResponsiveContainer, Cell, Legend\n} from 'recharts'\n\nimport Card from '../../elements/Card'\nimport theme from '../../../theme'\nimport { ChartWrap } from '../styleUtil'\n\nconst Barchart = ({\n  data,\n  xdataKey,\n  tickFormatter,\n  labelFormatter,\n  formatTooltip,\n  disableAnimation,\n  bars = [],\n  hideLegend,\n  ...props\n}) => {\n  return (\n    <Card {...props}>\n      <ChartWrap height={400}>\n        <ResponsiveContainer width='100%' height='100%'>\n          <BarChart data={data}>\n            <XAxis dataKey={xdataKey} tickFormatter={tickFormatter} />\n            <Tooltip labelFormatter={labelFormatter} formatter={formatTooltip} />\n            {!hideLegend ? (\n              <Legend\n                verticalAlign='top'\n                iconType='circle'\n                align='left'\n              />\n            ) : null}\n            {\n              bars.map(({ size, dataKey, color }, i) => {\n                return (\n                  <Bar\n                    isAnimationActive={typeof disableAnimation !== 'boolean'}\n                    key={i}\n                    barSize={size}\n                    dataKey={dataKey}\n                    type='monotone'\n                    fill={theme.colors[color] || theme.colors.primary}\n                  />)\n              })\n            }\n\n          </BarChart>\n        </ResponsiveContainer>\n      </ChartWrap>\n\n    </Card>\n  )\n}\n\nexport default Barchart\n","import HeatMap from 'react-heatmap-grid'\nimport Tooltip from '../../elements/Tooltip'\nimport Card from '../../elements/Card'\nimport theme from '../../../theme'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\n\nconst BubbleChart = ({ height, color, data, xLabels, yLabels, tooltipContent, onClick, ...props }) => {\n  return (\n    <Card {...props}>\n\n      <ChartWrap height={height}>\n\n        <HeatMap\n          cellStyle={getStyle}\n          background={color || theme.colors.teal}\n          xLabels={xLabels}\n          yLabels={yLabels}\n          xLabelsLocation='bottom'\n          data={data}\n          onClick={onClick}\n          cellRender={(value, x, y) => (\n            <Tooltip\n              title={tooltipContent(value, x, y)}\n              delay={0}\n              hideOnClick={false}\n              stickyDuration={50}\n              arrow={false}\n              offset={-25}\n              positio='top-start'\n              animation='shift'\n            >\n              <Value />\n            </Tooltip>\n          )}\n          unit='Items Sold'\n        />\n\n      </ChartWrap>\n    </Card>\n  )\n}\nexport default BubbleChart\n\nconst getStyle = (bg, value, min, max) => {\n  const opacity = (max - value) / (max - min)\n  return {\n    background: transparentize(opacity < 1 ? opacity : 0.94, theme.colors.teal)\n\n  }\n}\nconst ChartWrap = styled.div`\n  display:flex;\n  flex-wrap:wrap;\n\n  height: ${({ height }) => height || 300}px;\n  width:100%;\n  padding: 20px 10px 0px 10px;\n  justify-content:center;\n\n  >div {\n    overflow: auto;\n  }\n`\nconst Value = styled.div`\n  height: 30px;\n  margin-top: -8px;\n`\n","import React from 'react'\nimport {\n  LineChart, Line, XAxis, Tooltip, ResponsiveContainer\n} from 'recharts'\n\nimport Card from '../../elements/Card'\nimport theme from '../../../theme'\nimport { ChartWrap } from '../styleUtil'\n\nconst Linechart = ({\n  data,\n  xdataKey,\n  disableAnimation,\n  labelFormatter,\n  tickFormatter,\n  formatTooltip,\n  color,\n  hideDot,\n  lines,\n  ...props\n}) => {\n  return (\n    <Card {...props}>\n      <ChartWrap>\n        <ResponsiveContainer width='100%' height='100%'>\n          <LineChart data={data}>\n            <XAxis dataKey={xdataKey} tickFormatter={tickFormatter} />\n            <Tooltip labelFormatter={labelFormatter} formatter={formatTooltip} />\n            {\n              lines.map(({ size, dataKey, disabled, color }, i) => {\n                if (disabled) return null\n                return (\n                  <Line\n                    key={i}\n                    isAnimationActive={typeof disableAnimation !== 'boolean'}\n                    dataKey={dataKey}\n                    type='monotone'\n                    dot={!hideDot}\n                    stroke={theme.colors[color] || theme.colors.primary}\n                    strokeWidth={2}\n                  />\n                )\n              })\n            }\n\n          </LineChart>\n        </ResponsiveContainer>\n      </ChartWrap>\n    </Card>\n  )\n}\n\nexport default Linechart\n","import React from 'react'\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer\n} from 'recharts'\n\nimport Card from '../../elements/Card'\nimport Flex from '../../layout/Flex'\nimport styled from 'styled-components'\n\nconst Piechart = ({\n  data,\n  dataKey,\n  disableAnimation,\n  ...props\n}) => {\n  return (\n    <Card {...props} width={[1]}>\n      <ChartContainer>\n        <ResponsiveContainer width='100%' height='100%'>\n          <PieChart>\n            <Pie\n              data={data}\n              labelLine={false}\n              label={renderCustomizedLabel}\n              outerRadius={120}\n              innerRadius={10}\n              dataKey={dataKey}\n              isAnimationActive={typeof disableAnimation !== 'boolean'}\n\n            >\n              {\n                data.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)\n              }\n            </Pie>\n\n          </PieChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n\n    </Card>\n  )\n}\n\nexport default Piechart\n\nconst RADIAN = Math.PI / 180\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n  const x = cx + radius * Math.cos(-midAngle * RADIAN)\n  const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n  return (\n    <text x={x} y={y} fill='white' textAnchor={x > cx ? 'start' : 'end'} dominantBaseline='central'>\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  )\n}\n\nconst ChartContainer = styled(Flex)`\n  display: flex;\n  height: 260px;\n  width:100%;\n`\n","import React, { useState } from 'react'\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer, Sector\n} from 'recharts'\nimport theme from '../../../theme'\nimport styled from 'styled-components'\nimport Card from '../../elements/Card'\nimport { useSelector } from 'react-redux'\n\nconst COLORS = [theme.colors.warning, theme.colors.pastelRose, theme.colors.greenSoft, theme.colors.pastelBlueLight]\n\nconst RadialGraph = ({\n  float,\n  data,\n  radius = 50,\n  disableAnimation,\n  ...rest\n}) => {\n  const [index, setIndex] = useState(0)\n  const { allData: { currency_type } } = useSelector(state => state.generalReducer)\n  return (\n    <ChartContainer {...rest}>\n      <ResponsiveContainer width='100%' height='100%'>\n        <PieChart>\n          <Pie\n            activeIndex={index}\n            activeShape={(props) => <ActiveShape {...props} currency={currency_type} />}\n            data={data}\n            innerRadius={radius}\n            outerRadius={radius + 20}\n            fill='#8884d8'\n            isAnimationActive={typeof disableAnimation !== 'boolean'}\n            paddingAngle={5}\n            dataKey='value'\n            onMouseEnter={(_, i) => setIndex(i)}\n          >\n            {\n              data.map((set, index) => {\n                return (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={theme.colors[set.fill] || COLORS[index % COLORS.length]}\n                  />\n                )\n              }\n              )\n            }\n          </Pie>\n\n        </PieChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  )\n}\n\nexport default RadialGraph\n\nconst ActiveShape = (props) => {\n  const {\n    cx, cy, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, currency\n  } = props\n  const value = payload.value.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })\n  return (\n    <g>\n      <text x={cx} y={cy - 10} dy={8} textAnchor='middle' fill={fill}>{payload.name}</text>\n      <text x={cx} y={cy + 10} dy={8} textAnchor='middle' fill={fill}>\n        {currency}{value}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius + 5}\n        outerRadius={outerRadius + 5}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n\n    </g>\n  )\n}\n\nexport const ChartContainer = styled.div`\n  min-height: ${({ height }) => height || 250}px;\n  height: 100px;\n  min-width: 250px;\n  display: flex;\n  align-items:center;\n`\n\nexport const Container = styled(Card)`\n    \n    @media only screen and (max-width: 80px) {\n        flex-direction: column;\n    }\n  `\n","import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer, Sector\n} from 'recharts'\nimport Switch from '../../elements/Switch'\nimport theme from '../../../theme'\n\nimport {\n  Container,\n  ChartContainer,\n  TitleContainer,\n  BoxTitle,\n  SwitchContainer,\n  BoxValue\n} from './styles'\n\nconst COLORS = [theme.colors.pastelOrange, theme.colors.pastelRose, theme.colors.greenSoft, theme.colors.pastelBlueLight]\n\nconst RadialGraph = ({\n  title,\n  value = 0,\n  currencyType,\n  float,\n  data,\n  disableAnimation,\n  netValue,\n  ...rest\n}) => {\n  const [index, setIndex] = useState(0)\n  const [net, setNet] = useState(false)\n  const [activeVal, setActiveVal] = useState(value)\n\n  useEffect(() => {\n    setActiveVal(value)\n  }, [value])\n  return (\n    <Container flexDirection='row' justifyContent='space-evenly' {...rest}>\n      {\n        title\n          ? (\n            <TitleContainer>\n\n              <BoxTitle>\n                {title.toUpperCase()}\n              </BoxTitle>\n              <SwitchContainer>\n                <Switch\n                  label='Show Net Profit'\n                  checked={net}\n                  onChange={() => {\n                    setNet(!net)\n                    setActiveVal(value === activeVal ? netValue : value)\n                  }}\n                />\n\n              </SwitchContainer>\n              <BoxValue>\n                {currencyType}\n                <CountUp\n                  formattingFn={\n                    num => num.toLocaleString(undefined, {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })\n                  }\n                  decimals={float ? 2 : 0}\n                  start={activeVal === value ? parseFloat(netValue) : parseFloat(value)}\n                  end={float ? parseFloat(activeVal) : typeof activeVal === 'number' ? activeVal : 0}\n                />\n              </BoxValue>\n            </TitleContainer>)\n          : null\n      }\n      <ChartContainer>\n        <ResponsiveContainer width='100%' height='100%'>\n          <PieChart>\n            <Pie\n              activeIndex={index}\n              activeShape={(props) => <ActiveShape {...props} currency={currencyType} />}\n              data={data}\n              innerRadius={60}\n              outerRadius={80}\n              paddingAngle={5}\n              dataKey='value'\n              isAnimationActive={typeof disableAnimation !== 'boolean'}\n              onMouseEnter={(_, i) => setIndex(i)}\n            >\n              {\n                data.map((_, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                )\n                )\n              }\n            </Pie>\n\n          </PieChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n    </Container>\n  )\n}\n\nexport default RadialGraph\n\nconst ActiveShape = (props) => {\n  const {\n    cx, cy, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, currency\n  } = props\n  const value = payload.value.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })\n  return (\n    <g>\n      <text x={cx} y={cy - 10} dy={8} textAnchor='middle' fill={fill}>{payload.name}</text>\n      <text x={cx} y={cy + 10} dy={8} textAnchor='middle' fill={fill}>\n        {currency}{value}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius + 5}\n        outerRadius={outerRadius + 5}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n\n    </g>\n  )\n}\n","import styled from 'styled-components'\nimport Card from '../../elements/Card'\n\nconst label = ({ theme }) => (\n  `\n    font-weight: ${theme.fontWeights.regular};\n    font-size: 13px;\n    line-height: 18px;\n    text-transform: uppercase;\n    `\n)\nexport const ChartContainer = styled.div`\n  min-width: 250px;\n  height: 100px;\n  min-height: 250px;\n  display: flex;\n  align-items:center;\n`\n\nexport const Container = styled(Card)`\n    \n    @media only screen and (max-width: 600px) {\n        flex-direction: column;\n    }\n  `\n\nexport const TitleContainer = styled.div`\n  display:flex;\n  justify-content:center;\n  flex-direction:column;\n  @media only screen and (max-width: 600px) {\n        align-items:center;\n  }\n`\n\nexport const BoxTitle = styled.h2`\n    padding:5px;\n  text-align: left;\n  font-size: 30px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.mainBg};\n  position: relative;\n  display:flex;\n  font-size: 25px;\n  font-weight: 500;\n  margin: 0px;\n  color: ${({ theme }) => theme.colors.primary};\n\n`\nexport const Label = styled.div`\n    ${label};\n    margin-left: 5px;\n`\nexport const SwitchContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:flex-start;\n    padding-top: 10px;\n    ${label};\n`\n\nexport const BoxValue = styled.div`\n  margin-top: 10px;\n  text-align: left;\n  font-size: 30px;\n  font-weight:500;\n  color: ${({ theme }) => theme.colors.primary};\n`\n","import React from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport Flex from '../../layout/Flex'\n\nconst ValueBox = ({\n  title,\n  value = 0,\n  value2,\n  currencyType,\n  noAnimate,\n  float,\n  label1,\n  label2,\n  lessIsGood,\n  hideCompare,\n  string,\n  smallText,\n  ...rest\n}) => {\n  const biggerValue = value > value2 ? value : value2\n  const smallerValue = value < value2 ? value : value2\n  const plusOrMinus = biggerValue === value && !lessIsGood ? 'fa-plus' : 'fa-minus'\n  const caret = biggerValue === value && !lessIsGood ? 'fa-caret-up' : 'fa-caret-down'\n  const diff = biggerValue - smallerValue\n  const percentChange = Math.round((smallerValue / biggerValue) * 100)\n  let color\n  if (value > value2) {\n    color = lessIsGood ? 'bad' : 'good'\n  } else {\n    color = lessIsGood ? 'good' : 'bad'\n  }\n  return (\n    <Container m='10px' {...rest}>\n      <Title>\n        {title}\n        {\n          !isNaN(percentChange) && !hideCompare\n            ? (\n              <ChangeValue good={color === 'good'}>\n                <i\n                  className={`fa ${plusOrMinus}`}\n                  style={{\n                    marginRight: 3,\n                    fontSize: 10,\n                    marginTop: -1\n                  }}\n                />\n                {percentChange}%\n              </ChangeValue>)\n            : null\n        }\n\n      </Title>\n      <Content>\n        <Value smallText={!value2 && !smallText}>\n\n          {currencyType}\n          {\n            string ? (\n              value\n            )\n              : <CountUp\n                decimals={float ? 2 : 0}\n                start={noAnimate ? value : 0}\n                end={float ? parseFloat(value) : typeof value === 'number' ? value : 0}\n              />\n\n          }\n        </Value>\n        {\n          !isNaN(percentChange) && !hideCompare\n            ? (\n              <ChangeValue good={color === 'good'}>\n                <i\n                  className={`fa ${caret}`}\n                  style={{\n                    marginRight: 3,\n                    fontSize: 10,\n                    marginTop: -1\n                  }}\n                />\n                {currencyType}\n                {diff}\n              </ChangeValue>)\n            : null\n        }\n        <Labels>\n          {label1 || null}\n        </Labels>\n      </Content>\n\n      {\n        label2 ? (\n          <Content borderTop>\n            <Value>\n              {currencyType}\n              {\n                string\n                  ? (\n                    value2\n                  ) : (\n\n                    <CountUp\n                      decimals={float ? 2 : 0}\n                      start={noAnimate ? value2 : 0}\n                      end={float ? parseFloat(value2) : typeof value2 === 'number' ? 100 : 0}\n                    />\n                  )\n              }\n            </Value>\n            <Labels>\n              {label2 || null}\n            </Labels>\n\n          </Content>) : null\n      }\n    </Container>\n\n  )\n}\n\nexport default ValueBox\n\nconst Container = styled(Flex)`\n    background-color: ${props => props.theme.colors.white};\n    overflow: auto;\n    border-radius: $border-radius;\n    flex: 1 1;\n    box-shadow: ${props => props.theme.shadows.normal};\n    border-radius: ${props => props.theme.borderRadius.normal};\n    min-height: 92px;\n    flex-direction:column;\n`\nconst Content = styled.div`\n  padding:5px 10px;\n  text-align: left;\n  font-size: 20px;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: ${props => props.theme.colors.primary};\n  display: flex;\n  justify-content: space-between;\n  border-top: ${props => props.borderTop ? 1 : 0}px solid ${props => props.theme.colors.greyLightest};\n}\n`\nconst Title = styled.div`\n    padding: 10px;\n    text-align: left;\n    color: ${props => props.theme.colors.primary};\n    position: relative;\n    font-weight: ${props => props.theme.fontWeights.medium};\n    font-size: 18px;\n    display:flex;\n    background: ${props => props.theme.colors.greyLightest};\n`\n\nconst Labels = styled.div`\n  font-size: 15px;\n  display: flex;\n  align-items:center;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  color: ${props => props.theme.colors.textSubtle};\n`\nconst Value = styled.div`\n  font-size: ${props => props.smallText ? 25 : 20}px;\n`\nconst ChangeValue = styled.span`\n  margin-left: 10px;\n  font-size: 15px;\n  display:flex;\n  align-items:center;\n  color: ${props => props.good ? props.theme.colors.good : props.theme.colors.bad};\n  font-weight: ${props => props.theme.fontWeights.medium};\n`\n","import React from 'react'\nimport {\n  Bar, XAxis, YAxis, Tooltip,\n  ResponsiveContainer,\n  BarChart,\n  Cell\n} from 'recharts'\n\nimport Card from '../../elements/Card'\nimport { ChartWrap } from '../styleUtil'\nimport theme from '../../../theme'\n\nconst VertBarChart = ({\n  data,\n  ydataKey,\n  xdataKey,\n  height,\n  formatTooltip,\n  disableAnimation,\n  ...props\n}) => {\n  return (\n    <Card {...props}>\n      <ChartWrap height={height}>\n        <ResponsiveContainer width='100%' height='100%'>\n\n          <BarChart\n            layout='vertical'\n            data={data}\n            margin={{ top: 10, right: 20, bottom: 0, left: 50 }}\n          >\n            <XAxis type='number' />\n            <YAxis dataKey={ydataKey} type='category' />\n            <Tooltip formatter={formatTooltip} />\n            <Bar\n              dataKey={xdataKey}\n              isAnimationActive={typeof disableAnimation !== 'boolean'}\n            >\n              {\n          \t    data.map((entry, index) => {\n                  const currentColor = getColor(entry, index)\n            \t    return <Cell key={index} fill={currentColor} />\n                })\n              }\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </ChartWrap>\n\n    </Card>\n  )\n}\n\nexport default VertBarChart\n\nconst getColor = (entry, index) => {\n  const i = theme.colors.pastelArray[index] ? index : index - theme.colors.pastelArray.length\n\n  return theme.colors.pastelArray[i]\n}\n","import styled from 'styled-components'\nimport Flex from '../layout/Flex'\n\nexport const ChartWrap = styled(Flex)`\n  display:flex;\n  flex-wrap:wrap;\n  height: ${({ height }) => height || 300}px;\n  width:100%;\n  padding: ${({ noPadding }) => noPadding ? '0px' : '0px 10px '};\n`\n","import { transparentize, toColorString } from 'polished'\nimport _ from 'lodash'\n/**\n * Responsive Breakpoints\n */\nconst breakpoints = [{ // has to be an array for some stupid reason\n  xs: '600',\n  s: '768',\n  m: '992',\n  l: '1020',\n  xl: '1200'\n}]\n// -> @media only screen and (max-width: ${({theme})=>theme.breakpoints[0].s}px)\n\n/**\n * Spacing\n */\n\nconst space = [0, 4, 8, 16, 32, 64, 128, 256, 512]\n\n/**\n * Colors\n */\n\n// color values\nlet colors = {\n  white: '#fff',\n  whiteDark: '#f3f3f3',\n  black: '#000',\n  textGrey: '#585858',\n  greyDarkest: '#252629',\n  greyDarker: '#585853',\n  greyDark: '#787878',\n  greyLight: '#B2B2B2',\n  greyLight2: 'rgb(198, 198, 198)',\n  greyLighter: '#DADADA',\n  greyLightest: '#E1E1E1',\n  greyDisabled: '#ededed',\n  greenSoftDarkest: '#133531',\n  greenSoftDark: '#506A67',\n  greenSoft: '#309F87',\n  greenSoftLight: '#BBD8D3',\n  greenSoftLighter: '#D3EEEB',\n  blueBrand: '#05646E',\n  blue: '#293757',\n  blueHighlight: '#3458ac',\n  blueLight: '#96c1da',\n  bluegreyLight: '#849CA0',\n  yellowDark: '#bb6124',\n  yellow: '#FFBB2a',\n  yellowLight: '#FFC39B',\n  red: '#CD0019',\n  depopRed: '#FF2300',\n  redDark: '#9C0013',\n  redLight: '#FDC0C7',\n  redDisabled: '#C19C9C',\n  green: '#069f06',\n  purple: '#86529A',\n  teal: '#24867A',\n\n  // Pastel Colors\n  pastelPurple: '#8884d8',\n  pastelBlue: '#83a6ed',\n  pastelBlueLight: '#8dd1e1',\n  pastelGreen: '#82ca9d',\n  pastelGreenLight: '#a4de6c',\n  pastelGreenLighter: '#d0ed57',\n  pastelYellow: '#FFF933',\n  pastelOrange: '#ffc658',\n  pastelPink: '#ffd1dc',\n  pastelRose: '#fc746d'\n}\n\n// color aliases\ncolors = {\n  ...colors,\n  transparent: 'transparent',\n  primary: colors.blue,\n  textSubtle: colors.greyText,\n  accent: colors.blueHighlight,\n  danger: colors.red,\n  warning: colors.yellow,\n  success: colors.green,\n  good: colors.green,\n  bad: colors.red,\n  neutral: colors.blue,\n  mainBg: colors.greyLightest,\n  pastelArray: [\n    colors.pastelPurple,\n    colors.pastelBlue,\n    colors.pastelBlueLight,\n    colors.pastelGreen,\n    colors.pastelGreenLight,\n    colors.pastelGreenLighter,\n    colors.pastelYellow,\n    colors.pastelOrange,\n    colors.pastelPink,\n    colors.pastelRose\n  ]\n}\n\n// TOMIS const gradients = {\n//   brand: 'linear-gradient(100deg, #306e7b 0%, #43837a 70%)'\n// }\n\n/**\n * Boxes\n */\n\nconst heights = {\n  xs: 24,\n  sm: 32,\n  md: 40,\n  lg: 48\n}\n\nconst borders = ['0px solid', '1px solid', '2px solid']\nconst borderRadius = {\n  none: '0px',\n  normal: '4px',\n  more: '1em',\n  full: '100%'\n}\n\nconst shadows = {\n  subtle: '0 0 55px 0 rgba(0,0,0,0.1)',\n  subtleSmall: '0 0 35px 0 rgba(0,0,0,0.06)',\n  subtleSmallBelow: '0 5px 15px 0 rgba(0,0,0,0.03)',\n  subtleTeal: `0 0 35px 0 ${transparentize(0.75, colors.greenSoft)}`,\n  normal: '0px 0px 20px 0px rgba(0, 0, 0, .3);',\n  heavy: '0 0 35px 0 rgba(0,0,0,0.3)',\n  smallTeal: `0 0 12px 0 ${transparentize(0.85, colors.greenSoft)}`\n}\n\n/**\n * Typography\n */\n\nconst fonts = ['brandon-grotesque', 'sans-serif']\n\nconst fontSizes = [12, 14, 16, 20, 24, 32, 48, 64, 72, 96]\n\nconst lineHeights = [1, 1.125, 1.25, 1.5]\n\nconst fontWeights = {\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 600,\n  black: 900\n}\n\nconst letterSpacings = {\n  normal: 'normal',\n  caps: '0.03em'\n}\n\n/**\n * Animation\n */\n\nconst transitionDurations = ['0s', '0.2s']\n\nconst theme = {\n  // Responsive Breakpoints\n  breakpoints,\n  // Spacing\n  space,\n  // Boxes\n  heights,\n  borders,\n  borderRadius,\n  shadows,\n  // Typography\n  fonts,\n  fontSizes,\n  lineHeights,\n  fontWeights,\n  letterSpacings,\n  // Colors\n  colors,\n  // Animation\n  transitionDurations\n}\n\nexport default theme\n","module.exports = require(\"currency.js\");","module.exports = require(\"google-map-react\");","module.exports = require(\"lodash\");","module.exports = require(\"moment\");","module.exports = require(\"polished\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"react-countup\");","module.exports = require(\"react-heatmap-grid\");","module.exports = require(\"react-ios-switch\");","module.exports = require(\"react-is\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-tippy\");","module.exports = require(\"react-virtualized\");","module.exports = require(\"rebass\");","module.exports = require(\"rebass/styled-components\");","module.exports = require(\"recharts\");","module.exports = require(\"styled-components\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;ACEA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AADA;AACA;AAaA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AAEA;AACA;AACA;AAGA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAXA;AAFA;AAeA;AAAA;AAIA;AACA;AADA;AACA;AACA;AAAA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AANA;AARA;AACA;AAiBA;AAGA;AACA;AADA;AACA;AADA;AACA;AADA;AAkDA;AACA;AACA;AAFA;AAlDA;AACA;AADA;AAyDA;AAAA;AAAA;AAAA;AACA;AAAA;AAQA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AARA;AA1FA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AAKA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AACA;AADA;AACA;AACA;AAEA;AAAA;AACA;AAMA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAmDA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AANA;AACA;AAOA;AAAA;AAQA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAVA;AAWA;AACA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AAfA;AAiBA;AACA;AACA;AAEA;AACA;AADA;AACA;AAEA;AA7BA;AAKA;AA4BA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AADA,iBAYA;AACA;AADA;AAhMA;AACA;AADA;AACA;AAmMA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AADA;AAXA;AARA;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;ACjVA;AACA;AAAA;AACA;;;;AAAA;AACA;AAoHA;AACA;;AAzHA;AACA;AAkBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA,iBAGA;AARA;AACA;AADA;AACA;AAWA;AASA;AAQA;AACA;AASA;AACA;AACA;AAFA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AADA;AALA;AAaA;AACA;AACA;AACA;AADA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAfA;AADA;AADA;AACA;AAoBA;AACA;AACA;AAGA;AAEA;AACA;AADA;AAGA;AACA;AACA;AADA;AACA;;;AAIA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AALA;AACA;AACA;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;AADA;AAEA;AACA;AACA;AADA;AADA;AAMA;AACA;;;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AAUA;AAMA;AACA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AADA;AACA;;;;;;;;;;;;;;;;ACjCA;;;;;;;AAYA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAVA;AACA;AAWA;AACA;AACA;AAAA;AACA;AADA;AAdA;AACA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AAAA;AACA;AAAA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAjBA;AAAA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAKA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAgDA;AAMA;AACA;AAAA;AACA;AAEA;AAEA;AAJA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AACA;AADA;AAEA;AACA;AADA;AA7BA;AAiCA;AACA;AADA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAOA;;;AAIA;AAaA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAIA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AADA;AAMA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AADA;AApHA;AACA;AADA;AAonBA;AAEA;AAtnBA;AACA;AADA;AAioBA;AAAA;AAAA;AAAA;AACA;AACA;AAnoBA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AALA;AASA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA,iBAeA;AAEA;AACA;AACA;AADA;AACA,iBAAA;AAKA;AAEA;AAkDA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AAGA;AACA;AADA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AAAA;;;;;AAGA;AACA;AAGA;AAAA;;;;;;;;AAMA;AACA;AAGA;AAAA;;;;;;;;AAMA;AACA;AAGA;AACA;AADA;AAMA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAGA;AACA;AAAA,mBASA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAQA;AACA;AADA;AAOA;AAtBA;AAuBA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AADA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAPA;AAlBA;AAvGA;AAwIA;AACA;AADA;AAMA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AACA;AAEA;AAEA;AACA;AADA;AACA;AACA;AAAA;AADA;AACA;AAMA;AACA;AARA;AAaA;AAEA;AACA;AADA;AAOA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AARA;AAWA;AAIA;AACA;AACA;AAjBA;AADA;AAJA;AAvBA;AAJA;AACA;AA0DA;AACA;AACA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAPA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AADA;AAQA;AAAA;AAAA;AAGA;AAHA;AAOA;AACA;AACA;AAjBA;AA3BA;AAkDA;AACA;AADA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;;;;;;AAIA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AAAA;;;;;;;;AAMA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AADA;AACA;AAjBA;AAwBA;AACA;AADA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AAGA;AACA;AADA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AAGA;AACA;AADA;AAXA;AAkCA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAHA;AAAA;AAQA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AADA;AACA;AA/sBA;AACA;AADA;AACA;;AADA;;;;;;;;;;;;;;;AC3IA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACHA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AADA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAVA;AACA;AAUA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAMA;AAVA;AAWA;AA9BA;AAgCA;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AAAA;AACA;AAGA;AACA;AADA;AAOA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AADA;AAEA;AAFA;AAKA;AAAA;AAAA;AACA;AAjBA;AAqBA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAIA;AATA;AAgBA;AACA;AADA;AACA;AADA;AAGA;AAHA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AA6OA;;;;;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AADA;AALA;AASA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AADA;AACA;AAKA;AACA;AADA;AACA;AAGA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAGA;AAGA;AACA;AADA;AACA;AACA;AAMA;AAEA;AACA;AADA;AAGA;AACA;AADA;;;AAeA;AAIA;AACA;AACA;AACA;AACA;AAIA;AANA;AAQA;AAEA;AACA;AADA;AAGA;AACA;AADA;;AACA;;;;;;;;;;;;AC9WA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;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A;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AC9EA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnNA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AADA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAUA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;;;;;AAAA;AAqBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAIA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;AACA;AAUA;AACA;;;;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAqCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAKA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AATA;AACA;AAUA;AACA;AAEA;AACA;AAEA;AAJA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AADA;AAmBA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AA1CA;AA+CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAIA;AACA;AACA;AACA;AACA;AAUA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AASA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AAJA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AALA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAGA;AACA;AAEA;AASA;AACA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;ACvIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;AAFA;AACA;AAOA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAIA;AAAA;AAMA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAKA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAcA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKA;AACA;AAOA;AACA;AACA;AACA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;;;;AAIA;AAEA;;;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AACA;AAgDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AA4BA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAFA;AAKA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;ACzLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}