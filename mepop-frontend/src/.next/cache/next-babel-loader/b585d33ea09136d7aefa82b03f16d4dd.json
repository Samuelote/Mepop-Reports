{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Flex from '../styles/layout/Flex';\nimport styled from 'styled-components';\nimport Sidebar from './Sidebar';\nimport DateContainer from './DateContainer';\nimport { useSelector } from 'react-redux';\nimport NoDataFound from '../styles/elements/NoDataFound';\nimport Loading from '../styles/elements/Loading';\nimport { withFirebase } from '../firebase';\n\nvar getheaderContent = function getheaderContent(pathname) {\n  switch (pathname) {\n    case '/dashboard':\n      return 'Dashboard';\n\n    case '/reports':\n      return 'Reports';\n\n    case '/files':\n      return 'Files';\n\n    case '/settings/personal':\n      return 'Settings';\n\n    case '/fees-calculator':\n      return 'Fees Calculator';\n\n    default:\n      return 'Mepop Reports';\n  }\n};\n\nvar Layout = withFirebase(function (props) {\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      loading = _useSelector.loading,\n      compareData = _useSelector.compareData,\n      files = _useSelector.files,\n      rangedData = _useSelector.rangedData,\n      user = _useSelector.user;\n\n  var router = useRouter();\n  var heading = getheaderContent(router.pathname);\n  var noData = !files.length || JSON.stringify(rangedData) === '{}';\n  var noUser = JSON.stringify(user) === '{}';\n  var routeRequiresData = heading === 'Reports' || heading === 'Dashboard';\n  var centerContent = loading || noData;\n  var unprotectedRoute = router.pathname === '/sign-in' || router.pathname === '/sign-up';\n  var hideSideBar = router.pathname === '/settings/membership/';\n\n  if (noUser && !unprotectedRoute) {\n    return null;\n  }\n\n  if (user.profile && router.pathname !== '/settings/membership') {\n    if (!user.profile.hasSignedIn) {\n      router.push('/settings/membership');\n    }\n  }\n\n  return __jsx(Flex, {\n    justifyContent: \"center\",\n    bg: \"mainBg\",\n    flex: [1]\n  }, unprotectedRoute ? __jsx(Body, {\n    centerContent: true,\n    headerSize: 0\n  }, loading ? __jsx(Flex, {\n    justifyContent: \"center\",\n    height: \"90vh\",\n    alignItems: \"center\"\n  }, __jsx(Loading, null)) : props.children) : __jsx(React.Fragment, null, hideSideBar ? null : __jsx(Sidebar, null), __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\",\n    bg: \"mainBg\"\n  }, __jsx(Header, null, heading, heading === 'Reports' || heading === 'Dashboard' ? __jsx(DateContainer, {\n    page: heading\n  }) : null), __jsx(Body, {\n    centerContent: centerContent,\n    headerSize: JSON.stringify(compareData) !== '{}' ? 110 : 45\n  }, noData && routeRequiresData && !loading ? __jsx(NoDataFound, null) : loading ? __jsx(Flex, {\n    justifyContent: \"center\",\n    height: \"90vh\",\n    alignItems: \"center\"\n  }, __jsx(Loading, null)) : props.children))));\n});\nexport default Layout;\nvar Body = styled.div.withConfig({\n  displayName: \"Layout__Body\",\n  componentId: \"rqjs94-0\"\n})([\"overflow:auto;height:calc(100vh - \", \"px);width:100vw;padding-bottom:70px;\", \"\"], function (_ref) {\n  var headerSize = _ref.headerSize;\n  return headerSize;\n}, function (_ref2) {\n  var centerContent = _ref2.centerContent;\n\n  if (centerContent) {\n    return \"\\n      display: flex;\\n      justify-content: center;\\n    \";\n  }\n});\nvar Header = styled.div.withConfig({\n  displayName: \"Layout__Header\",\n  componentId: \"rqjs94-1\"\n})([\"background:white;width:100%;min-height:50px;border-bottom:1px solid \", \";display:flex;align-items:center;padding-left:10px;font-wieght:\", \";color:\", \";font-weight:\", \";font-size:20px;justify-content:space-between;\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.mainBg;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.fontWeights.bold;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.primary;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.fontWeights.bold;\n});","map":null,"metadata":{},"sourceType":"module"}