{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_LOCATION_KEYS } from '../generalReducer';\nexport var setupLocationKeys = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var firebase, dispatch, googleKey;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase = _ref.firebase, dispatch = _ref.dispatch;\n            _context.next = 3;\n            return firebase.retreiveGoogleMapsKey();\n\n          case 3:\n            googleKey = _context.sent;\n\n            if (googleKey.error) {\n              // Put in error UI box\n              alert('Error Occurred');\n            }\n\n            dispatch({\n              type: SET_LOCATION_KEYS,\n              payload: {\n                googleKey: googleKey.data\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function setupLocationKeys(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/samuelwood/development/test/mepop-next/src/store/actions/keySetup.js"],"names":["SET_LOCATION_KEYS","setupLocationKeys","firebase","dispatch","retreiveGoogleMapsKey","googleKey","error","alert","type","payload","data"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,IAAMC,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,QAASA,QAAT,EAAmBC,QAAnB,QAAmBA,QAAnB;AAAA;AAAA,mBACPD,QAAQ,CAACE,qBAAT,EADO;;AAAA;AACzBC,YAAAA,SADyB;;AAG/B,gBAAIA,SAAS,CAACC,KAAd,EAAqB;AACnB;AACAC,cAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;;AACDJ,YAAAA,QAAQ,CAAC;AACPK,cAAAA,IAAI,EAAER,iBADC;AAEPS,cAAAA,OAAO,EAAE;AAAEJ,gBAAAA,SAAS,EAAEA,SAAS,CAACK;AAAvB;AAFF,aAAD,CAAR;;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBT,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import { SET_LOCATION_KEYS } from '../generalReducer'\n\nexport const setupLocationKeys = async ({ firebase, dispatch }) => {\n  const googleKey = await firebase.retreiveGoogleMapsKey()\n\n  if (googleKey.error) {\n    // Put in error UI box\n    alert('Error Occurred')\n  }\n  dispatch({\n    type: SET_LOCATION_KEYS,\n    payload: { googleKey: googleKey.data }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}