{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/test/mepop-next/src/styles/elements/Select/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Flex } from 'rebass';\nimport SelectInput from 'react-dropdown-select';\nimport { Select as RebassSelect } from '@rebass/forms';\nimport Box from '../../layout/Box';\nimport Label from '../Form/Label';\nimport styled from 'styled-components';\n\nvar Select = function Select(_ref) {\n  var options = _ref.options,\n      _ref$labelField = _ref.labelField,\n      labelField = _ref$labelField === void 0 ? 'label' : _ref$labelField,\n      _ref$valueField = _ref.valueField,\n      valueField = _ref$valueField === void 0 ? 'value' : _ref$valueField,\n      onChange = _ref.onChange,\n      rebass = _ref.rebass,\n      label = _ref.label,\n      _ref$selectProps = _ref.selectProps,\n      selectProps = _ref$selectProps === void 0 ? {\n    style: {}\n  } : _ref$selectProps,\n      props = _objectWithoutProperties(_ref, [\"options\", \"labelField\", \"valueField\", \"onChange\", \"rebass\", \"label\", \"selectProps\"]);\n\n  return __jsx(React.Fragment, null, rebass ? __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, label ? __jsx(Label, {\n    label: label,\n    fontWeight: 500 // color={!labelIsShown ? 'transparent' : null}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }) : null, __jsx(StyledSelect, _extends({}, props, {\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), options.map(function (opt, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: JSON.stringify({\n        value: opt[valueField],\n        label: opt[labelField]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, opt[labelField]);\n  }))) : __jsx(Flex, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(SelectInput, _extends({\n    options: options,\n    onChange: onChange\n  }, selectProps, {\n    style: _objectSpread(_objectSpread({}, selectProps.style), {}, {\n      fontWeight: 500,\n      fontSize: '15px',\n      minWidth: '50px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_c = Select;\nexport default Select;\nvar StyledSelect = styled(RebassSelect).withConfig({\n  displayName: \"Select__StyledSelect\",\n  componentId: \"at60a0-0\"\n})([\"border-radius:\", \";border-color:\", \" !important;color:\", \" !important;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.borderRadius.normal;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.greyDisabled;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.primary;\n});\n_c2 = StyledSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"StyledSelect\");","map":{"version":3,"sources":["/Users/samuelwood/development/test/mepop-next/src/styles/elements/Select/index.js"],"names":["React","Flex","SelectInput","Select","RebassSelect","Box","Label","styled","options","labelField","valueField","onChange","rebass","label","selectProps","style","props","map","opt","key","JSON","stringify","value","fontWeight","fontSize","minWidth","StyledSelect","theme","borderRadius","normal","colors","greyDisabled","primary"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,MAAM,IAAIC,YAAnB,QAAuC,eAAvC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAMJ,MAAM,GAAG,SAATA,MAAS,OAST;AAAA,MARJK,OAQI,QARJA,OAQI;AAAA,6BAPJC,UAOI;AAAA,MAPJA,UAOI,gCAPS,OAOT;AAAA,6BANJC,UAMI;AAAA,MANJA,UAMI,gCANS,OAMT;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,8BAFJC,WAEI;AAAA,MAFJA,WAEI,iCAFU;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAEV;AAAA,MADDC,KACC;;AACJ,SACE,4BAEIJ,MAAM,GACJ,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,KAAK,GAED,MAAC,KAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,UAAU,EAAE,GAFd,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,GAMK,IARd,EAUE,MAAC,YAAD,eAAkBG,KAAlB;AAAyB,IAAA,QAAQ,EAAEL,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,OAAO,CAACS,GAAR,CAAY,UAACC,GAAD,EAAMC,GAAN;AAAA,WACX;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEJ,GAAG,CAACR,UAAD,CAAZ;AAA0BG,QAAAA,KAAK,EAAEK,GAAG,CAACT,UAAD;AAApC,OAAf,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGS,GAAG,CAACT,UAAD,CAJN,CADW;AAAA,GAAZ,CADH,CAVF,CADI,GAyBJ,MAAC,IAAD,eAAUO,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,WAAD;AACE,IAAA,OAAO,EAAER,OADX;AAEE,IAAA,QAAQ,EAAEG;AAFZ,KAGMG,WAHN;AAIE,IAAA,KAAK,kCAAOA,WAAW,CAACC,KAAnB;AAA0BQ,MAAAA,UAAU,EAAE,GAAtC;AAA2CC,MAAAA,QAAQ,EAAE,MAArD;AAA6DC,MAAAA,QAAQ,EAAE;AAAvE,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CA3BN,CADF;AAwCD,CAlDD;;KAAMtB,M;AAoDN,eAAeA,MAAf;AAEA,IAAMuB,YAAY,GAAGnB,MAAM,CAACH,YAAD,CAAT;AAAA;AAAA;AAAA,+EACC;AAAA,MAAGuB,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,YAAN,CAAmBC,MAAlC;AAAA,CADD,EAEA;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,MAAN,CAAaC,YAA5B;AAAA,CAFA,EAGP;AAAA,MAAGJ,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,MAAN,CAAaE,OAA5B;AAAA,CAHO,CAAlB;MAAMN,Y","sourcesContent":["import React from 'react'\nimport { Flex } from 'rebass'\nimport SelectInput from 'react-dropdown-select'\nimport { Select as RebassSelect } from '@rebass/forms'\nimport Box from '../../layout/Box'\nimport Label from '../Form/Label'\nimport styled from 'styled-components'\n\nconst Select = ({\n  options,\n  labelField = 'label',\n  valueField = 'value',\n  onChange,\n  rebass,\n  label,\n  selectProps = { style: {} },\n  ...props\n}) => {\n  return (\n    <>\n      {\n        rebass ? (\n          <Box>\n            {\n              label\n                ? (\n                  <Label\n                    label={label}\n                    fontWeight={500}\n                    // color={!labelIsShown ? 'transparent' : null}\n                  />) : null\n            }\n            <StyledSelect {...props} onChange={onChange}>\n              {options.map((opt, key) => (\n                <option\n                  key={key}\n                  value={JSON.stringify({ value: opt[valueField], label: opt[labelField] })}\n                >\n                  {opt[labelField]}\n                </option>\n              ))}\n\n            </StyledSelect>\n          </Box>\n        ) : (\n\n          <Flex {...props}>\n            <SelectInput\n              options={options}\n              onChange={onChange}\n              {...selectProps}\n              style={{ ...selectProps.style, fontWeight: 500, fontSize: '15px', minWidth: '50px' }}\n            />\n          </Flex>\n        )\n      }\n    </>\n  )\n}\n\nexport default Select\n\nconst StyledSelect = styled(RebassSelect)`\n  border-radius: ${({ theme }) => theme.borderRadius.normal};\n  border-color: ${({ theme }) => theme.colors.greyDisabled} !important;\n  color: ${({ theme }) => theme.colors.primary} !important;\n`\n"]},"metadata":{},"sourceType":"module"}