{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Flex from '../../styles/layout/Flex';\nimport { useSelector } from 'react-redux';\nimport SalesByDate from './SalesByDate';\nimport SalesByCategory from './SalesByCategory';\nimport SalesMap from './SalesMap';\nimport SalesByTime from './SalesByTime';\nimport SalesAndListingsByDay from './SalesAndListingsByDay';\nimport RecentSales from './RecentSales';\nimport SalesByPaymentType from './SalesByPaymentType';\nimport RevenueOverview from './RevenueOverview';\nimport ProfitsByMonth from './ProfitsByMonth';\nimport TotalEarningsView from './TotalEarnings';\nimport { CompareView } from './CompareView';\nimport TopValueBoxes from './TopValueBoxes';\nimport VariableLineGraph from './VariableLineGraph';\nimport NoDataFound from '../../styles/elements/NoDataFound';\n\nvar Reports = function Reports(props) {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      rangedData = _useSelector.rangedData,\n      allData = _useSelector.allData,\n      compareData = _useSelector.compareData,\n      user = _useSelector.user;\n\n  var data = rangedData;\n  var isBasic = user.membership.type === 'basic';\n\n  if (JSON.stringify(compareData) !== '{}' && !isBasic) {\n    return __jsx(CompareView, {\n      data: rangedData,\n      compareData: compareData,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, !data.length ? __jsx(NoDataFound, {\n    mt: \"100px\",\n    title: \"Aw shucks!\",\n    msg: \"It doesn't look like you have any sales in the date range specified\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(TotalEarningsView, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(TopValueBoxes, {\n    data: data,\n    minWidth: \"20%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, __jsx(RevenueOverview, {\n    data: data,\n    isBasic: isBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), __jsx(SalesByPaymentType, {\n    data: data,\n    isBasic: isBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), __jsx(SalesByDate, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), __jsx(SalesByCategory, {\n    data: data,\n    isBasic: isBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), __jsx(SalesMap, {\n    data: data,\n    isBasic: isBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, __jsx(SalesAndListingsByDay, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), __jsx(ProfitsByMonth, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), __jsx(VariableLineGraph, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), __jsx(RecentSales, {\n    data: allData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), __jsx(SalesByTime, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })));\n};\n\n_s(Reports, \"avGDha7rsGd0iLkEKeQb3HSCuzU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Reports;\nexport default Reports;\nvar tempData = [{\n  time: '13:11',\n  sales: 5\n}, {\n  time: '14:11',\n  sales: 10\n}, {\n  time: '15:11',\n  sales: 20\n}, {\n  time: '16:11',\n  sales: 40\n}, {\n  time: '17:11',\n  sales: 30\n}, {\n  time: 'May',\n  sales: 30\n}, {\n  time: 'June',\n  sales: 40\n}, {\n  time: 'July',\n  sales: 50\n}, {\n  time: 'August',\n  sales: 60\n}, {\n  time: 'September',\n  sales: 70\n}, {\n  time: 'October',\n  sales: 50\n}, {\n  time: 'November',\n  sales: 100\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/index.js"],"names":["Flex","useSelector","SalesByDate","SalesByCategory","SalesMap","SalesByTime","SalesAndListingsByDay","RecentSales","SalesByPaymentType","RevenueOverview","ProfitsByMonth","TotalEarningsView","CompareView","TopValueBoxes","VariableLineGraph","NoDataFound","Reports","props","state","generalReducer","rangedData","allData","compareData","user","data","isBasic","membership","type","JSON","stringify","length","tempData","time","sales"],"mappings":"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","sourcesContent":["import Flex from '../../styles/layout/Flex'\nimport { useSelector } from 'react-redux'\n\nimport SalesByDate from './SalesByDate'\nimport SalesByCategory from './SalesByCategory'\nimport SalesMap from './SalesMap'\nimport SalesByTime from './SalesByTime'\nimport SalesAndListingsByDay from './SalesAndListingsByDay'\nimport RecentSales from './RecentSales'\nimport SalesByPaymentType from './SalesByPaymentType'\nimport RevenueOverview from './RevenueOverview'\nimport ProfitsByMonth from './ProfitsByMonth'\nimport TotalEarningsView from './TotalEarnings'\nimport { CompareView } from './CompareView'\nimport TopValueBoxes from './TopValueBoxes'\nimport VariableLineGraph from './VariableLineGraph'\nimport NoDataFound from '../../styles/elements/NoDataFound'\n\nconst Reports = (props) => {\n  const { rangedData, allData, compareData, user } = useSelector(state => state.generalReducer)\n  const data = rangedData\n\n  const isBasic = user.membership.type === 'basic'\n  if (JSON.stringify(compareData) !== '{}' && !isBasic) {\n    return <CompareView data={rangedData} compareData={compareData} />\n  }\n  return (\n    <Flex flexDirection='column' width={[1]} justifyContent='center'>\n      {\n        !data.length ? <NoDataFound mt='100px' title='Aw shucks!' msg=\"It doesn't look like you have any sales in the date range specified\" />\n          : (\n\n            <>\n              {/* <RoadToVerified data={data} /> */}\n              <Flex>\n                <TotalEarningsView data={data} />\n              </Flex>\n              <TopValueBoxes data={data} minWidth='20%' />\n\n              <Flex>\n                <RevenueOverview data={data} isBasic={isBasic} />\n                <SalesByPaymentType data={data} isBasic={isBasic} />\n              </Flex>\n              <SalesByDate data={data} />\n              <SalesByCategory data={data} isBasic={isBasic} />\n              <SalesMap data={data} isBasic={isBasic} />\n\n              <Flex>\n                <SalesAndListingsByDay data={data} />\n                <ProfitsByMonth data={data} />\n              </Flex>\n              <VariableLineGraph data={data} />\n              <RecentSales data={allData} />\n              <SalesByTime data={data} />\n            </>\n          )\n      }\n    </Flex>\n  )\n}\nexport default Reports\n\nconst tempData = [\n  { time: '13:11', sales: 5 },\n  { time: '14:11', sales: 10 },\n  { time: '15:11', sales: 20 },\n  { time: '16:11', sales: 40 },\n  { time: '17:11', sales: 30 },\n  { time: 'May', sales: 30 },\n  { time: 'June', sales: 40 },\n  { time: 'July', sales: 50 },\n  { time: 'August', sales: 60 },\n  { time: 'September', sales: 70 },\n  { time: 'October', sales: 50 },\n  { time: 'November', sales: 100 }\n]\n"]},"metadata":{},"sourceType":"module"}