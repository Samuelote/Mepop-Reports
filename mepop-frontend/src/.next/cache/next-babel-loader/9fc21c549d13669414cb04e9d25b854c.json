{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Form/Label.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Label as RebassLabel } from '@rebass/forms';\nLabel.propTypes = {\n  label: PropTypes.string,\n  htmlfor: PropTypes.string,\n  color: PropTypes.string\n};\n\nfunction Label(_ref) {\n  let {\n    label,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"children\"]);\n\n  return __jsx(LabelComponent, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), label, children);\n}\n\nexport default Label;\nconst LabelComponent = styled(RebassLabel).withConfig({\n  displayName: \"Label__LabelComponent\",\n  componentId: \"sc-12zcarr-0\"\n})([\"display:flex;justify-content:center;flex-direction:column;font-weight:600;font-size:13px;line-height:18px;text-transform:uppercase;transition:color .5s;text-transform:capitalize;user-select:none;color:\", \";\"], props => props.color || props.theme.colors.greyDark);","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Form/Label.js"],"names":["React","PropTypes","styled","Label","RebassLabel","propTypes","label","string","htmlfor","color","children","rest","LabelComponent","props","theme","colors","greyDark"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAK,IAAIC,WAAlB,QAAqC,eAArC;AAEAD,KAAK,CAACE,SAAN,GAAkB;AAChBC,EAAAA,KAAK,EAAEL,SAAS,CAACM,MADD;AAEhBC,EAAAA,OAAO,EAAEP,SAAS,CAACM,MAFH;AAGhBE,EAAAA,KAAK,EAAER,SAAS,CAACM;AAHD,CAAlB;;AAMA,SAASJ,KAAT,OAA8C;AAAA,MAA9B;AAAEG,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAA8B;AAAA,MAARC,IAAQ;;AAC5C,SACE,MAAC,cAAD,eAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,KADH,EAEGI,QAFH,CADF;AAMD;;AAED,eAAeP,KAAf;AAEA,MAAMS,cAAc,GAAGV,MAAM,CAACE,WAAD,CAAT;AAAA;AAAA;AAAA,uNAWPS,KAAK,IAAIA,KAAK,CAACJ,KAAN,IAAeI,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,QAXpC,CAApB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Label as RebassLabel } from '@rebass/forms'\n\nLabel.propTypes = {\n  label: PropTypes.string,\n  htmlfor: PropTypes.string,\n  color: PropTypes.string\n}\n\nfunction Label ({ label, children, ...rest }) {\n  return (\n    <LabelComponent {...rest}>\n      {label}\n      {children}\n    </LabelComponent>\n  )\n}\n\nexport default Label\n\nconst LabelComponent = styled(RebassLabel)`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: 600;\n    font-size: 13px;\n    line-height: 18px;\n    text-transform: uppercase;\n    transition: color .5s;\n    text-transform: capitalize;\n    user-select: none;\n    color: ${props => props.color || props.theme.colors.greyDark};\n`\n"]},"metadata":{},"sourceType":"module"}