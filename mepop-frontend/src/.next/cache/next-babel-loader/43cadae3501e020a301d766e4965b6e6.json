{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Input as RebassInput } from '@rebass/forms';\nimport Label from '../Form/Label';\nimport Flex from '../../layout/Flex';\n\nvar Input = function Input(_ref) {\n  var htmlfor = _ref.htmlfor,\n      label = _ref.label,\n      alwaysShowLabel = _ref.alwaysShowLabel,\n      boxProps = _ref.boxProps,\n      hideEye = _ref.hideEye,\n      rest = _objectWithoutProperties(_ref, [\"htmlfor\", \"label\", \"alwaysShowLabel\", \"boxProps\", \"hideEye\"]);\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      togglePassword = _useState[1];\n\n  var _useState2 = useState(!!rest.value || !!rest.defaultValue || alwaysShowLabel),\n      labelIsShown = _useState2[0],\n      showLabel = _useState2[1];\n\n  var handleFocus = function handleFocus(e) {\n    if (!alwaysShowLabel) {\n      if (e.target.value && !labelIsShown) showLabel(true);else if (!e.target.value && labelIsShown) showLabel(false);\n    }\n\n    if (rest.onChange) rest.onChange(e);\n  };\n\n  var hoverIcon = function hoverIcon(type) {\n    togglePassword(type === 'enter');\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    m: \"2px\"\n  }, label ? __jsx(Label, {\n    htmlfor: htmlfor,\n    label: label,\n    fontWeight: 500,\n    color: !labelIsShown ? 'transparent' : null\n  }) : null, __jsx(Flex, {\n    alignItems: \"center\"\n  }, __jsx(StyleInput, _extends({\n    pl: rest.bg ? '5px' : !rest.disabled ? '0px' : null\n  }, rest, {\n    type: showPassword ? 'text' : rest.type,\n    onChange: handleFocus\n  })), rest.type === 'password' && !hideEye ? __jsx(Flex, {\n    ml: \"3px\" // color='greyDisabled'\n    ,\n    height: \"100%\",\n    py: \"8px\",\n    px: \"5px\",\n    onMouseOver: function onMouseOver() {\n      return hoverIcon('enter');\n    },\n    onMouseLeave: function onMouseLeave() {\n      return hoverIcon('leave');\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-eye\"\n  })) : null));\n};\n\nexport default Input;\nvar StyleInput = styled(RebassInput).withConfig({\n  displayName: \"Input__StyleInput\",\n  componentId: \"ura2uu-0\"\n})([\"background:\", \" !important;transition:\", \";height:35px;padding-left:15px;color:\", \" !important;font-size:15px;font-weight:500;border-radius:\", \";border:1px solid \", \" !important;border-bottom:1px solid \", \" !important;outline:none;&::placeholder{font-weight:\", \";}\"], function (_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled,\n      bg = _ref2.bg;\n  return disabled ? theme.colors.greyDisabled : theme.colors[bg || 'white'];\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.transitionDurations[1];\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled;\n  return disabled ? null : theme.colors.primary;\n}, function (_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      borderRadius = _ref5.borderRadius;\n  return disabled || borderRadius ? theme.borderRadius.normal : 0;\n}, function (_ref6) {\n  var borderColor = _ref6.borderColor,\n      theme = _ref6.theme;\n  return borderColor ? theme.colors[borderColor] : 'transparent';\n}, function (_ref7) {\n  var theme = _ref7.theme,\n      disabled = _ref7.disabled,\n      bg = _ref7.bg,\n      borderColor = _ref7.borderColor;\n  return disabled ? theme.colors[bg || 'white'] : theme.colors[borderColor || 'greyDisabled'];\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.fontWeights.regular;\n});","map":null,"metadata":{},"sourceType":"module"}