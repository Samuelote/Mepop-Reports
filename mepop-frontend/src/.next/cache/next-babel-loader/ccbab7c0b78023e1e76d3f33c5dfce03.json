{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport FirebaseContext, { withFirebase } from './context';\nimport { getFileMethod, deleteFileMethod, uploadFilesMethod } from './methods/files';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyB04NiM6bapVV6Jd2ZRw5vUVLy3Cu7o0x0',\n  authDomain: 'mepop-app.firebaseapp.com',\n  databaseURL: 'https://mepop-app.firebaseio.com',\n  projectId: 'mepop-app',\n  storageBucket: 'mepop-app.appspot.com',\n  messagingSenderId: '619885550344',\n  appId: '1:619885550344:web:28a8d730b1ca91a5f6aabd',\n  measurementId: 'G-WM4LPLQMKX'\n};\n\nvar Firebase = /*#__PURE__*/function () {\n  function Firebase() {\n    _classCallCheck(this, Firebase);\n\n    try {\n      firebase.initializeApp(firebaseConfig);\n      firebase.analytics(); // uncomment this if running functions in emulator\n      // if (window.location.href.includes('localhost')) {\n      //   console.log('Dev env')\n      //   firebase.functions().useFunctionsEmulator('http://localhost:4001')\n      // }\n    } catch (err) {\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.message);\n      }\n    }\n\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n    this.db = firebase.firestore();\n    this.functions = firebase.functions();\n  } // Get api Keys from firestore\n\n\n  _createClass(Firebase, [{\n    key: \"retreiveGoogleMapsKey\",\n    value: function retreiveGoogleMapsKey() {\n      // getGoogleMapsKey(this.db)\n      var docRef = this.db.collection('keys').doc('googleMaps');\n      return docRef.get().then(function (doc) {\n        if (doc.exists) {\n          return {\n            error: null,\n            data: doc.data()\n          };\n        } else {\n          window.alert('Unknown Error Occurred');\n        }\n      })[\"catch\"](function (error) {\n        return {\n          error: error,\n          data: null\n        };\n      });\n    } // Stripe\n\n  }, {\n    key: \"handleStripeClients\",\n    value: function handleStripeClients() {\n      var _this = this;\n\n      // creates stripe client if doesn't exist (This handles people moving over from legacy app but who already have accounts)\n      return this.db.collection('stripeClients').doc(this.auth.currentUser.uid).get().then(function (doc) {\n        if (!doc.exists) {\n          return _this.createStripeClient();\n        }\n      });\n    }\n  }, {\n    key: \"createStripeClient\",\n    value: function createStripeClient() {\n      var createStripeClientFunction = firebase.functions().httpsCallable('createStripeClient');\n      var _this$auth$currentUse = this.auth.currentUser,\n          email = _this$auth$currentUse.email,\n          uid = _this$auth$currentUse.uid;\n      createStripeClientFunction({\n        email: email,\n        uid: uid\n      }).then(function () {\n        console.log('Create Stripe Client');\n      });\n    } // profiles\n\n  }, {\n    key: \"handleProfile\",\n    value: function handleProfile(userAndMembership) {\n      var _this2 = this;\n\n      return this.db.collection('profiles').doc(this.auth.currentUser.uid).get().then(function (doc) {\n        _this2.handleStripeClients();\n\n        if (!doc.exists) {\n          _this2.setProfile().then(function (newDoc) {\n            // creates new profile if it doesn't exist (only on first login/signup ever)\n            return _objectSpread(_objectSpread({}, userAndMembership), {}, {\n              profile: newDoc\n            });\n          });\n        } else {\n          return _objectSpread(_objectSpread({}, userAndMembership), {}, {\n            profile: doc.data()\n          });\n        }\n      });\n    }\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(incomingDoc, uid) {\n      var initialDoc = {\n        firstName: '',\n        lastName: '',\n        depopShopName: '',\n        hasSignedIn: false,\n        email: this.auth.currentUser ? this.auth.currentUser.email : ''\n      };\n      return this.db.collection('profiles').doc(uid || this.auth.currentUser.uid).set(incomingDoc || initialDoc).then(function () {\n        return incomingDoc || initialDoc;\n      })[\"catch\"](function () {\n        return alert('Error Occurred Creating Profile');\n      });\n    } // memberships\n\n  }, {\n    key: \"handleMembership\",\n    value: function handleMembership(user) {\n      var _this3 = this;\n\n      return this.db.collection('memberships').doc(this.auth.currentUser.uid).get().then(function (doc) {\n        if (!doc.exists) {\n          _this3.setMembership().then(function (newDoc) {\n            // creates new membership if it doesn't exist (only on first login/signup ever)\n            return _this3.handleProfile({\n              user: user,\n              membership: newDoc\n            }).then(function (newUserObject) {\n              return newUserObject;\n            });\n          });\n        } else {\n          return _this3.handleProfile({\n            user: user,\n            membership: doc.data()\n          }).then(function (newUserObject) {\n            return newUserObject;\n          });\n        }\n      });\n    }\n  }, {\n    key: \"setMembership\",\n    value: function setMembership(incomingDoc) {\n      var newDoc = {\n        type: 'basic',\n        paymentInfo: {}\n      };\n      return this.db.collection('memberships').doc(this.auth.currentUser.uid).set(incomingDoc || newDoc).then(function () {\n        return incomingDoc || newDoc;\n      })[\"catch\"](function () {\n        return window.alert('Error Occurred Creating Membership');\n      });\n    } // auth\n\n  }, {\n    key: \"doCreateUser\",\n    value: function doCreateUser(_ref) {\n      var _this4 = this;\n\n      var password = _ref.password,\n          form = _objectWithoutProperties(_ref, [\"password\"]);\n\n      return this.auth.createUserWithEmailAndPassword(form.email, password).then(function (_ref2) {\n        var user = _ref2.user;\n        return _this4.setProfile(form, user.uid);\n      });\n    }\n  }, {\n    key: \"doGetCurrentUser\",\n    value: function doGetCurrentUser() {\n      return this.auth;\n    }\n  }, {\n    key: \"doSignIn\",\n    value: function doSignIn(email, password) {\n      var _this5 = this;\n\n      return this.auth.signInWithEmailAndPassword(email, password).then(function (_ref3) {\n        var user = _ref3.user;\n        return _this5.handleMembership(user);\n      });\n    }\n  }, {\n    key: \"doSignOut\",\n    value: function doSignOut() {\n      this.auth.signOut();\n    }\n  }, {\n    key: \"doPasswordReset\",\n    value: function doPasswordReset(email) {\n      return this.auth.sendPasswordResetEmail(email);\n    }\n  }, {\n    key: \"doPasswordUpdate\",\n    value: function doPasswordUpdate(passwords) {\n      var _this6 = this;\n\n      return this.auth.signInWithEmailAndPassword(this.auth.currentUser.email, passwords.oldPassword).then(function (_ref4) {\n        var user = _ref4.user;\n        return _this6.auth.currentUser.updatePassword(passwords.newPassword);\n      });\n    } // files\n\n  }, {\n    key: \"getUserFiles\",\n    value: function getUserFiles(resolve) {\n      getFileMethod(this.auth, this.storage, resolve);\n    }\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile(filename, fetchFiles) {\n      deleteFileMethod(this.auth, this.storage, filename, fetchFiles);\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function uploadFiles(files, fetchFiles, err) {\n      uploadFilesMethod(this.auth, this.storage, files, fetchFiles, err);\n    }\n  }]);\n\n  return Firebase;\n}();\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/firebase/index.js"],"names":["firebase","FirebaseContext","withFirebase","getFileMethod","deleteFileMethod","uploadFilesMethod","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","initializeApp","analytics","err","test","message","console","error","auth","storage","db","firestore","functions","docRef","collection","doc","get","then","exists","data","window","alert","currentUser","uid","createStripeClient","createStripeClientFunction","httpsCallable","email","log","userAndMembership","handleStripeClients","setProfile","newDoc","profile","incomingDoc","initialDoc","firstName","lastName","depopShopName","hasSignedIn","set","user","setMembership","handleProfile","membership","newUserObject","type","paymentInfo","password","form","createUserWithEmailAndPassword","signInWithEmailAndPassword","handleMembership","signOut","sendPasswordResetEmail","passwords","oldPassword","updatePassword","newPassword","resolve","filename","fetchFiles","files"],"mappings":"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","sourcesContent":["\nimport firebase from 'firebase'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport FirebaseContext, { withFirebase } from './context'\nimport { getFileMethod, deleteFileMethod, uploadFilesMethod } from './methods/files'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB04NiM6bapVV6Jd2ZRw5vUVLy3Cu7o0x0',\n  authDomain: 'mepop-app.firebaseapp.com',\n  databaseURL: 'https://mepop-app.firebaseio.com',\n  projectId: 'mepop-app',\n  storageBucket: 'mepop-app.appspot.com',\n  messagingSenderId: '619885550344',\n  appId: '1:619885550344:web:28a8d730b1ca91a5f6aabd',\n  measurementId: 'G-WM4LPLQMKX'\n}\n\nclass Firebase {\n  constructor () {\n    try {\n      firebase.initializeApp(firebaseConfig)\n      firebase.analytics()\n      // uncomment this if running functions in emulator\n      // if (window.location.href.includes('localhost')) {\n      //   console.log('Dev env')\n      //   firebase.functions().useFunctionsEmulator('http://localhost:4001')\n      // }\n    } catch (err) {\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.message)\n      }\n    }\n\n    this.auth = firebase.auth()\n    this.storage = firebase.storage()\n    this.db = firebase.firestore()\n    this.functions = firebase.functions()\n  }\n\n  // Get api Keys from firestore\n  retreiveGoogleMapsKey () {\n    // getGoogleMapsKey(this.db)\n    const docRef = this.db.collection('keys').doc('googleMaps')\n    return docRef.get().then(function (doc) {\n      if (doc.exists) {\n        return { error: null, data: doc.data() }\n      } else {\n        window.alert('Unknown Error Occurred')\n      }\n    }).catch(function (error) {\n      return { error, data: null }\n    })\n  }\n  // Stripe\n\n  handleStripeClients () {\n    // creates stripe client if doesn't exist (This handles people moving over from legacy app but who already have accounts)\n    return this.db.collection('stripeClients').doc(this.auth.currentUser.uid).get()\n      .then((doc) => {\n        if (!doc.exists) {\n          return this.createStripeClient()\n        }\n      })\n  }\n\n  createStripeClient () {\n    const createStripeClientFunction = firebase.functions().httpsCallable('createStripeClient')\n    const { email, uid } = this.auth.currentUser\n    createStripeClientFunction({ email, uid }).then(() => {\n      console.log('Create Stripe Client')\n    })\n  }\n\n  // profiles\n  handleProfile (userAndMembership) {\n    return this.db.collection('profiles').doc(this.auth.currentUser.uid).get().then((doc) => {\n      this.handleStripeClients()\n      if (!doc.exists) {\n        this.setProfile().then((newDoc) => {\n          // creates new profile if it doesn't exist (only on first login/signup ever)\n\n          return { ...userAndMembership, profile: newDoc }\n        })\n      } else {\n        return { ...userAndMembership, profile: doc.data() }\n      }\n    })\n  }\n\n  setProfile (incomingDoc, uid) {\n    const initialDoc = {\n      firstName: '',\n      lastName: '',\n      depopShopName: '',\n      hasSignedIn: false,\n      email: this.auth.currentUser ? this.auth.currentUser.email : ''\n    }\n    return this.db.collection('profiles').doc(uid || this.auth.currentUser.uid).set(incomingDoc || initialDoc).then(() => {\n      return incomingDoc || initialDoc\n    }).catch(() => alert('Error Occurred Creating Profile'))\n  }\n\n  // memberships\n  handleMembership (user) {\n    return this.db.collection('memberships').doc(this.auth.currentUser.uid).get().then((doc) => {\n      if (!doc.exists) {\n        this.setMembership().then((newDoc) => {\n          // creates new membership if it doesn't exist (only on first login/signup ever)\n          return this.handleProfile({ user, membership: newDoc }).then((newUserObject) => {\n            return newUserObject\n          })\n        })\n      } else {\n        return this.handleProfile({ user, membership: doc.data() }).then((newUserObject) => {\n          return newUserObject\n        })\n      }\n    })\n  }\n\n  setMembership (incomingDoc) {\n    const newDoc = { type: 'basic', paymentInfo: {} }\n    return this.db.collection('memberships').doc(this.auth.currentUser.uid).set(incomingDoc || newDoc).then(() => {\n      return incomingDoc || newDoc\n    }).catch(() => window.alert('Error Occurred Creating Membership'))\n  }\n\n  // auth\n  doCreateUser ({ password, ...form }) {\n    return this.auth.createUserWithEmailAndPassword(form.email, password)\n      .then(({ user }) => {\n        return this.setProfile(form, user.uid)\n      })\n  }\n\n  doGetCurrentUser () {\n    return this.auth\n  }\n\n  doSignIn (email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        return this.handleMembership(user)\n      })\n  }\n\n  doSignOut () { this.auth.signOut() }\n\n  doPasswordReset (email) {\n    return this.auth.sendPasswordResetEmail(email)\n  }\n\n  doPasswordUpdate (passwords) {\n    return this.auth.signInWithEmailAndPassword(this.auth.currentUser.email, passwords.oldPassword)\n      .then(({ user }) => {\n        return this.auth.currentUser.updatePassword(passwords.newPassword)\n      })\n  }\n\n  // files\n  getUserFiles (resolve) {\n    getFileMethod(this.auth, this.storage, resolve)\n  }\n\n  deleteFile (filename, fetchFiles) {\n    deleteFileMethod(this.auth, this.storage, filename, fetchFiles)\n  }\n\n  uploadFiles (files, fetchFiles, err) {\n    uploadFilesMethod(this.auth, this.storage, files, fetchFiles, err)\n  }\n}\n\nexport default Firebase\nexport { FirebaseContext, withFirebase }\n"]},"metadata":{},"sourceType":"module"}