{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useMemo, useState } from 'react';\nimport moment from 'moment';\nimport LineChart from '../../../styles/reporting/LineChart';\nimport { groupByDate } from '../util/grouping';\nimport Flex from '../../../styles/layout/Flex';\nimport Button from '../../../styles/elements/Button';\nvar VariableLineChart = memo(function (_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([{\n    dataKey: 'Items Sold',\n    size: 70,\n    color: 'teal',\n    disabled: false\n  }, {\n    dataKey: 'Gross',\n    size: 70,\n    color: 'pastelPurple',\n    disabled: true\n  }, {\n    dataKey: 'Net',\n    size: 70,\n    color: 'pastelGreen',\n    disabled: true\n  }]),\n      variables = _useState[0],\n      updateVars = _useState[1];\n\n  var chartData = useMemo(function () {\n    return groupByDate(data, true);\n  }, [data]);\n\n  var handleClick = function handleClick(i) {\n    var newVars = _toConsumableArray(variables);\n\n    newVars[i].disabled = !newVars[i].disabled;\n    updateVars(newVars);\n  };\n\n  var Buttons = function Buttons() {\n    return __jsx(Flex, null, variables.map(function (_ref2, i) {\n      var dataKey = _ref2.dataKey,\n          color = _ref2.color,\n          disabled = _ref2.disabled;\n      return __jsx(Button, {\n        key: i,\n        mr: \"4px\",\n        bg: \"mainBg\",\n        color: disabled ? 'greyDark' : color,\n        onClick: function onClick() {\n          return handleClick(i);\n        }\n      }, dataKey);\n    }));\n  };\n\n  return __jsx(LineChart, {\n    headerContent: __jsx(Buttons, null),\n    data: chartData,\n    xdataKey: \"Date Sold\",\n    lines: variables,\n    hideDot: true,\n    tickFormatter: formatXAxis,\n    labelFormatter: formatLabel,\n    formatTooltip: function formatTooltip(t, l) {\n      return _formatTooltip(t, l, data);\n    }\n  });\n});\nexport default VariableLineChart;\n\nvar formatXAxis = function formatXAxis(tickItem) {\n  return moment(tickItem, 'MM/DD/YYYY').format('M/D');\n};\n\nvar formatLabel = function formatLabel(tickItem) {\n  return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY');\n};\n\nvar _formatTooltip = function _formatTooltip(value, name, props) {\n  if (name !== 'Items Sold') {\n    var num = value.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    return \"$\".concat(num);\n  }\n\n  return value;\n};","map":null,"metadata":{},"sourceType":"module"}