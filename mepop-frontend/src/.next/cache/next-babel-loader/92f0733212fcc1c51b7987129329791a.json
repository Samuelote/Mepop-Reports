{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// styles\nimport Flex from '../../styles/layout/Flex';\nimport ValueBox from '../../styles/reporting/ValueBox';\nimport TotalEarnings from '../../styles/reporting/TotalEarnings'; // components\n\nimport ProfitsByMonth from './ProfitsByMonth';\nimport SaleTable from './SaleTable'; // custom containers\n\nimport { ValueContainer, GraphContainer } from './styles';\nimport { useSelector } from 'react-redux'; // utils\n\nimport { getAvgProfits, bestTimeToList, avgItemsPerDay } from './util';\n\nconst Dashboard = props => {\n  const {\n    allData\n  } = useSelector(state => state.generalReducer);\n  const data = allData;\n  if (!data) return null;\n  const avgNetProfit = getAvgProfits(data);\n  const whenToList = bestTimeToList(data);\n  const itemsSoldPerDay = avgItemsPerDay(data);\n  return __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    bg: \"mainBg\",\n    width: [1]\n  }, __jsx(Flex, {\n    width: [1],\n    flexDirection: \"column\"\n  }, __jsx(ValueContainer, null, __jsx(ValueBox, {\n    minWidth: \"167px\" // for mobile. Should change\n    ,\n    title: \"Average Net Profit\",\n    value: avgNetProfit.weekly,\n    value2: avgNetProfit.monthly,\n    float: true,\n    hideCompare: true,\n    currencyType: \"$\",\n    label1: \"Weekly\",\n    label2: \"Monthly\"\n  }), __jsx(ValueBox, {\n    title: \"Hottest Days\",\n    value: whenToList.list.join(', '),\n    value2: whenToList.sell.join(', '),\n    string: true,\n    hideCompare: true,\n    label1: \"To List\",\n    label2: \"To Sell\"\n  }), __jsx(ValueBox, {\n    title: \"Avg. Items Sold Per Day\",\n    value: itemsSoldPerDay\n  })), __jsx(GraphContainer, {\n    m: \"0px\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    borderRadius: \"0px\",\n    flexWrap: \"wrap\"\n  }, __jsx(TotalEarnings, {\n    boxShadow: \"none\",\n    borderRadius: \"0px\",\n    float: true,\n    currencyType: \"$\",\n    title: \"Total Earnings\",\n    value: data.total_earnings,\n    netValue: (data.total_earnings - data.total_shipping_cost - data.depop_fees).toFixed(2),\n    data: [{\n      name: 'Net Earnings',\n      value: parseFloat(data.total_earnings - data.total_shipping_cost - data.depop_fees)\n    }, {\n      name: 'Depop Fees',\n      value: parseFloat(data.depop_fees)\n    }, {\n      name: 'Paypal Fees',\n      value: parseFloat(data.paypal_fees)\n    }, {\n      name: 'Total Shipping',\n      value: parseFloat(data.total_shipping_cost)\n    }]\n  }), __jsx(ProfitsByMonth, {\n    data: data\n  })), __jsx(SaleTable, {\n    data: data,\n    getUrl: data.getUrl\n  })));\n};\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}