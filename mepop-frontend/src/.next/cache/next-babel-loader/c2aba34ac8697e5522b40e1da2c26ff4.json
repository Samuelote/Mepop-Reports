{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/dashboard/ProfitsByMonth/index.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport BarChart from '../../../styles/reporting/BarChart';\nimport styled from 'styled-components';\nimport { getProfitsByMonth } from '../util'; // styles\n\nconst Barchart = (_ref) => {\n  let {\n    color,\n    data,\n    xdataKey,\n    barDataKey,\n    barGap,\n    barSize\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"color\", \"data\", \"xdataKey\", \"barDataKey\", \"barGap\", \"barSize\"]);\n\n  const monthlyNetProfit = getProfitsByMonth(data);\n  return __jsx(BarChart, {\n    headerBorder: \"none\",\n    boxShadow: \"none\",\n    headerContent: \"Net Earnings By Month\",\n    data: monthlyNetProfit,\n    formatTooltip: (t, l) => formatTooltip(t, l, data),\n    xdataKey: \"month\",\n    bars: [{\n      dataKey: 'Net Profit',\n      size: 50,\n      color: 'pastelPurple'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Barchart;\n\nconst formatTooltip = (value, name, props) => {\n  return `$${value}`;\n};\n\nconst ChartWrap = styled.div.withConfig({\n  displayName: \"ProfitsByMonth__ChartWrap\",\n  componentId: \"sc-3cnvm6-0\"\n})([\"display:flex;flex-wrap:wrap;height:300px;width:100%;\"]);\nconst Title = styled.div.withConfig({\n  displayName: \"ProfitsByMonth__Title\",\n  componentId: \"sc-3cnvm6-1\"\n})([\"width:100%;padding:0px 20px;font-size:18px;font-weight:500;margin:0px;color:\", \";text-transform:uppercase;border-bottom:1px solid #e0e0e0;\"], ({\n  theme\n}) => theme.colors.primary);","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/dashboard/ProfitsByMonth/index.js"],"names":["React","BarChart","styled","getProfitsByMonth","Barchart","color","data","xdataKey","barDataKey","barGap","barSize","props","monthlyNetProfit","t","l","formatTooltip","dataKey","size","value","name","ChartWrap","div","Title","theme","colors","primary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,SAAlC,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,UAQX;AAAA,MARY;AAChBC,IAAAA,KADgB;AAEhBC,IAAAA,IAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA,UAJgB;AAKhBC,IAAAA,MALgB;AAMhBC,IAAAA;AANgB,GAQZ;AAAA,MADDC,KACC;;AACJ,QAAMC,gBAAgB,GAAGT,iBAAiB,CAACG,IAAD,CAA1C;AAEA,SACE,MAAC,QAAD;AACE,IAAA,YAAY,EAAC,MADf;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,aAAa,EAAC,uBAHhB;AAIE,IAAA,IAAI,EAAEM,gBAJR;AAKE,IAAA,aAAa,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUC,aAAa,CAACF,CAAD,EAAIC,CAAJ,EAAOR,IAAP,CALxC;AAME,IAAA,QAAQ,EAAC,OANX;AAOE,IAAA,IAAI,EAAE,CACJ;AAAEU,MAAAA,OAAO,EAAE,YAAX;AAAyBC,MAAAA,IAAI,EAAE,EAA/B;AAAmCZ,MAAAA,KAAK,EAAE;AAA1C,KADI,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAxBD;;AA0BA,eAAeD,QAAf;;AAEA,MAAMW,aAAa,GAAG,CAACG,KAAD,EAAQC,IAAR,EAAcR,KAAd,KAAwB;AAC5C,SAAQ,IAAGO,KAAM,EAAjB;AACD,CAFD;;AAGA,MAAME,SAAS,GAAGlB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,4DAAf;AAMA,MAAMC,KAAK,GAAGpB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,mJAME,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAN9B,CAAX","sourcesContent":["import React from 'react'\nimport BarChart from '../../../styles/reporting/BarChart'\nimport styled from 'styled-components'\nimport { getProfitsByMonth } from '../util'\n\n// styles\n\nconst Barchart = ({\n  color,\n  data,\n  xdataKey,\n  barDataKey,\n  barGap,\n  barSize,\n  ...props\n}) => {\n  const monthlyNetProfit = getProfitsByMonth(data)\n\n  return (\n    <BarChart\n      headerBorder='none'\n      boxShadow='none'\n      headerContent='Net Earnings By Month'\n      data={monthlyNetProfit}\n      formatTooltip={(t, l) => formatTooltip(t, l, data)}\n      xdataKey='month'\n      bars={[\n        { dataKey: 'Net Profit', size: 50, color: 'pastelPurple' }\n      ]}\n    />\n  )\n}\n\nexport default Barchart\n\nconst formatTooltip = (value, name, props) => {\n  return `$${value}`\n}\nconst ChartWrap = styled.div`\n  display:flex;\n  flex-wrap:wrap;\n  height: 300px;\n  width:100%;\n`\nconst Title = styled.div`\n    width:100%;\n    padding: 0px 20px;\n    font-size: 18px;\n    font-weight: 500;\n    margin: 0px;\n    color: ${({ theme }) => theme.colors.primary};\n    text-transform: uppercase;\n    border-bottom: 1px solid #e0e0e0;\n    `\n"]},"metadata":{},"sourceType":"module"}