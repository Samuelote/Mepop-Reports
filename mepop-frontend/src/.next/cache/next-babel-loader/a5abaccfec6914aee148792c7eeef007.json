{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Input/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Input as RebassInput } from '@rebass/forms';\nimport Label from '../Form/Label';\nimport Flex from '../../layout/Flex';\n\nvar Input = function Input(_ref) {\n  _s();\n\n  var htmlfor = _ref.htmlfor,\n      label = _ref.label,\n      alwaysShowLabel = _ref.alwaysShowLabel,\n      boxProps = _ref.boxProps,\n      hideEye = _ref.hideEye,\n      rest = _objectWithoutProperties(_ref, [\"htmlfor\", \"label\", \"alwaysShowLabel\", \"boxProps\", \"hideEye\"]);\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      togglePassword = _useState[1];\n\n  var _useState2 = useState(!!rest.value || !!rest.defaultValue || alwaysShowLabel),\n      labelIsShown = _useState2[0],\n      showLabel = _useState2[1];\n\n  var handleFocus = function handleFocus(e) {\n    if (!alwaysShowLabel) {\n      if (e.target.value && !labelIsShown) showLabel(true);else if (!e.target.value && labelIsShown) showLabel(false);\n    }\n\n    if (rest.onChange) rest.onChange(e);\n  };\n\n  var hoverIcon = function hoverIcon(type) {\n    togglePassword(type === 'enter');\n  };\n\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    m: \"2px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, label ? __jsx(Label, {\n    htmlfor: htmlfor,\n    label: label,\n    fontWeight: 500,\n    color: !labelIsShown ? 'transparent' : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }) : null, __jsx(Flex, {\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(StyleInput, _extends({\n    pl: rest.bg ? '5px' : !rest.disabled ? '0px' : null\n  }, rest, {\n    type: showPassword ? 'text' : rest.type,\n    onChange: handleFocus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), rest.type === 'password' && !hideEye ? __jsx(Flex, {\n    ml: \"3px\" // color='greyDisabled'\n    ,\n    height: \"100%\",\n    py: \"8px\",\n    px: \"5px\",\n    onMouseOver: function onMouseOver() {\n      return hoverIcon('enter');\n    },\n    onMouseLeave: function onMouseLeave() {\n      return hoverIcon('leave');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-eye\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })) : null));\n};\n\n_s(Input, \"ZoPwHZ9ba6fwp8Nljs3llHRDzsw=\");\n\n_c = Input;\nexport default Input;\nInput.propTypes = {\n  label: PropTypes.string,\n  htmlfor: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nvar StyleInput = styled(RebassInput).withConfig({\n  displayName: \"Input__StyleInput\",\n  componentId: \"ura2uu-0\"\n})([\"background:\", \" !important;transition:\", \";height:35px;padding-left:15px;color:\", \" !important;font-size:15px;font-weight:500;border-radius:\", \";border:1px solid \", \" !important;border-bottom:1px solid \", \" !important;outline:none;&::placeholder{font-weight:\", \";}\"], function (_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled,\n      bg = _ref2.bg;\n  return disabled ? theme.colors.greyDisabled : theme.colors[bg || 'white'];\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.transitionDurations[1];\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled;\n  return disabled ? null : theme.colors.primary;\n}, function (_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      borderRadius = _ref5.borderRadius;\n  return disabled || borderRadius ? theme.borderRadius.normal : 0;\n}, function (_ref6) {\n  var borderColor = _ref6.borderColor,\n      theme = _ref6.theme;\n  return borderColor ? theme.colors[borderColor] : 'transparent';\n}, function (_ref7) {\n  var theme = _ref7.theme,\n      disabled = _ref7.disabled,\n      bg = _ref7.bg,\n      borderColor = _ref7.borderColor;\n  return disabled ? theme.colors[bg || 'white'] : theme.colors[borderColor || 'greyDisabled'];\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.fontWeights.regular;\n});\n_c2 = StyleInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"StyleInput\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Input/index.js"],"names":["React","useState","PropTypes","styled","Input","RebassInput","Label","Flex","htmlfor","label","alwaysShowLabel","boxProps","hideEye","rest","showPassword","togglePassword","value","defaultValue","labelIsShown","showLabel","handleFocus","e","target","onChange","hoverIcon","type","bg","disabled","propTypes","string","placeholder","name","func","isRequired","StyleInput","theme","colors","greyDisabled","transitionDurations","primary","borderRadius","normal","borderColor","fontWeights","regular"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Input as RebassInput } from '@rebass/forms'\nimport Label from '../Form/Label'\nimport Flex from '../../layout/Flex'\n\nconst Input = ({ htmlfor, label, alwaysShowLabel, boxProps, hideEye, ...rest }) => {\n  const [showPassword, togglePassword] = useState(false)\n  const [labelIsShown, showLabel] = useState(!!rest.value || !!rest.defaultValue || alwaysShowLabel)\n  const handleFocus = (e) => {\n    if (!alwaysShowLabel) {\n      if (e.target.value && !labelIsShown) showLabel(true)\n      else if (!e.target.value && labelIsShown) showLabel(false)\n    }\n\n    if (rest.onChange) rest.onChange(e)\n  }\n  const hoverIcon = (type) => {\n    togglePassword(type === 'enter')\n  }\n  return (\n    <Flex flexDirection='column' width={[1]} m='2px'>\n      {\n        label\n          ? (\n            <Label\n              htmlfor={htmlfor}\n              label={label}\n              fontWeight={500}\n              color={!labelIsShown ? 'transparent' : null}\n            />) : null\n      }\n      <Flex alignItems='center'>\n\n        <StyleInput\n          pl={rest.bg ? '5px' : !rest.disabled ? '0px' : null}\n          {...rest}\n          type={showPassword ? 'text' : rest.type}\n          onChange={handleFocus}\n        />\n\n        {\n          rest.type === 'password' && !hideEye\n            ? (\n              <Flex\n                ml='3px'\n                // color='greyDisabled'\n                height='100%'\n                py='8px'\n                px='5px'\n                onMouseOver={() => hoverIcon('enter')}\n                onMouseLeave={() => hoverIcon('leave')}\n              >\n\n                <i className='fa fa-eye' />\n              </Flex>\n            )\n            : null\n        }\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Input\n\nInput.propTypes = {\n  label: PropTypes.string,\n  htmlfor: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n}\n\nconst StyleInput = styled(RebassInput)`\n    background: ${({ theme, disabled, bg }) => (\n      disabled ? theme.colors.greyDisabled : theme.colors[bg || 'white']\n    )} !important;\n\n    transition: ${({ theme }) => theme.transitionDurations[1]};\n    height: 35px;\n    padding-left: 15px;\n    color: ${({ theme, disabled }) => disabled ? null : theme.colors.primary} !important;\n    font-size: 15px;\n    font-weight: 500;\n    border-radius: ${({ theme, disabled, borderRadius }) => disabled || borderRadius ? theme.borderRadius.normal : 0};\n    /* border-width: 0px !important; */\n    border: 1px solid ${({ borderColor, theme }) => borderColor ? theme.colors[borderColor] : 'transparent'} !important;\n    border-bottom: 1px solid ${({ theme, disabled, bg, borderColor }) =>\n    disabled ? theme.colors[bg || 'white'] : theme.colors[borderColor || 'greyDisabled']\n    } !important;\n    outline: none;\n    &::placeholder {\n      font-weight: ${({ theme }) => theme.fontWeights.regular};\n      /* color: #aab7c4; */\n    }\n`\n"]},"metadata":{},"sourceType":"module"}