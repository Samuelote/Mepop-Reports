{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/DateContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport Flex from '../styles/layout/Flex';\nimport DateRangePicker from '../styles/elements/DateRangePicker';\nimport Select from '../styles/elements/Select';\nimport { getRangedData } from '../dataProcessing/utils';\nimport { UPDATE_RANGED_DATA, UPDATE_COMPARE_DATA } from '../store/generalReducer';\nimport Text from '../styles/elements/Text';\nimport Spinner from '../styles/elements/Loading/Spinner';\nimport Tooltip from '../styles/elements/Tooltip';\n\nvar DateContainer = function DateContainer(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      allData = _useSelector.allData,\n      loading = _useSelector.loading,\n      user = _useSelector.user;\n\n  var fixedFullRange = page === 'Dashboard';\n  var dispatch = useDispatch();\n  var min = useMemo(function () {\n    return allData.sales ? allData.sales[0].date_of_sale : null;\n  }, [allData]);\n  var max = useMemo(function () {\n    return allData.sales ? allData.sales[allData.sales.length - 1].date_of_sale : null;\n  }, [allData]);\n\n  var _useState = useState({\n    startDate: min,\n    endDate: max\n  }),\n      dateRange = _useState[0],\n      setDates = _useState[1]; // stored in MM-DD-YYYY format\n\n\n  var _useState2 = useState({\n    startDate: min,\n    endDate: max\n  }),\n      compareDateRange = _useState2[0],\n      setCompareDates = _useState2[1]; // stored in MM-DD-YYYY format\n\n\n  var _useState3 = useState({\n    label: 'Full Range',\n    value: 'full'\n  }),\n      preset = _useState3[0],\n      setPreset = _useState3[1];\n\n  var _useState4 = useState({\n    label: 'Full Range',\n    value: 'full'\n  }),\n      comparePreset = _useState4[0],\n      setComparePreset = _useState4[1];\n\n  var _useState5 = useState(false),\n      showCompareDate = _useState5[0],\n      toggleCompare = _useState5[1];\n\n  var _useState6 = useState(false),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var isBasic = !user.membership ? 'basic' : user.membership.type === 'basic';\n  useEffect(function () {\n    if (dateRange.startDate === null || dateRange.endDate === null) {\n      setPreset({\n        label: 'Full Range',\n        value: 'full'\n      });\n      setDates({\n        startDate: min,\n        endDate: max\n      });\n    } else if (dateRange.startDate && dateRange.endDate) {\n      if (!moment(dateRange.startDate).isSame(min) && !moment(dateRange.endDate).isSame(max)) {\n        setPreset({\n          label: 'Full Range',\n          value: 'full'\n        });\n        setDates({\n          startDate: min,\n          endDate: max\n        });\n      }\n    }\n  }, [min, max]);\n  useEffect(function () {\n    setTimeout(function () {\n      if (allData.sales && dateRange.startDate && dateRange.endDate) {\n        var rangedData = getRangedData(allData, {\n          startDate: dateRange.startDate,\n          endDate: dateRange.endDate\n        });\n        dispatch({\n          type: UPDATE_RANGED_DATA,\n          payload: rangedData\n        });\n      }\n    });\n  }, [allData, dateRange]);\n  useEffect(function () {\n    setLoading(true);\n    setTimeout(function () {\n      if (allData.sales && compareDateRange.startDate && compareDateRange.endDate) {\n        var rangedData = getRangedData(allData, {\n          startDate: compareDateRange.startDate,\n          endDate: compareDateRange.endDate\n        }); // console.log(rangedData)\n\n        dispatch({\n          type: UPDATE_COMPARE_DATA,\n          payload: rangedData\n        });\n      }\n\n      if (!showCompareDate) {\n        dispatch({\n          type: UPDATE_COMPARE_DATA,\n          payload: {}\n        });\n      }\n\n      setLoading(false);\n    });\n  }, [allData, compareDateRange, showCompareDate]);\n  useEffect(function () {\n    var _getDatePreset = getDatePreset(preset, min, max),\n        startDate = _getDatePreset.startDate,\n        endDate = _getDatePreset.endDate;\n\n    if (startDate && endDate) {\n      setDates({\n        startDate: startDate,\n        endDate: endDate\n      });\n    }\n  }, [preset]);\n  useEffect(function () {\n    var _getDatePreset2 = getDatePreset(comparePreset, min, max),\n        startDate = _getDatePreset2.startDate,\n        endDate = _getDatePreset2.endDate;\n\n    if (startDate && endDate) {\n      setCompareDates({\n        startDate: startDate,\n        endDate: endDate\n      });\n    }\n  }, [comparePreset]);\n  if (!allData.sales) return null;\n  var btnDisabled = loading || fixedFullRange || isLoading || isBasic;\n  return __jsx(Flex, {\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: showCompareDate && !fixedFullRange ? 96 : 'auto',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    opacity: fixedFullRange ? 0 : 1,\n    options: options,\n    onChange: function onChange(arr) {\n      return setPreset(arr[0]);\n    },\n    selectProps: {\n      values: preset ? [preset] : [],\n      disabled: fixedFullRange,\n      searchable: false,\n      style: {\n        width: '140px',\n        fontSize: '15px'\n      },\n      separator: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), showCompareDate ? __jsx(Select, {\n    opacity: fixedFullRange ? 0 : 1,\n    options: options,\n    onChange: function onChange(arr) {\n      return setComparePreset(arr[0]);\n    },\n    selectProps: {\n      values: comparePreset ? [comparePreset] : [],\n      disabled: fixedFullRange,\n      searchable: false,\n      style: {\n        width: '140px',\n        fontSize: '15px'\n      },\n      separator: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }) : null), __jsx(Flex, {\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(DateRangePicker, {\n    startDate: dateRange.startDate ? moment(fixedFullRange ? min : dateRange.startDate) : null,\n    endDate: dateRange.endDate ? moment(fixedFullRange ? max : dateRange.endDate) : null,\n    disabled: fixedFullRange // isOutsideRange={(day) => {\n    //   return (day.isBefore(moment(min)) || day.isAfter(moment(max)))\n    // }}\n    // enableOutsideDays={false}\n    // onDatesChange={({ startDate, endDate }) => {\n    //   setPreset({ label: 'Custom', value: null })\n    //   setDates({\n    //     startDate: startDate ? startDate.format('MM-DD-YYYY') : null,\n    //     endDate: endDate ? endDate.format('MM-DD-YYYY') : null\n    //   })\n    // }}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), showCompareDate && !fixedFullRange ? __jsx(React.Fragment, null, __jsx(Text, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"primary\",\n    fontWeight: \"100\",\n    fontSize: \"15px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"vs.\"), __jsx(DateRangePicker, {\n    startDate: compareDateRange.startDate ? moment(fixedFullRange ? min : compareDateRange.startDate) : null,\n    endDate: compareDateRange.endDate ? moment(fixedFullRange ? max : compareDateRange.endDate) : null,\n    disabled: fixedFullRange,\n    isOutsideRange: function isOutsideRange(day) {\n      return day.isBefore(min) || day.isAfter(max);\n    },\n    onDatesChange: function onDatesChange(_ref2) {\n      var startDate = _ref2.startDate,\n          endDate = _ref2.endDate;\n      setComparePreset({\n        label: 'Custom',\n        value: null\n      });\n      setCompareDates({\n        startDate: startDate ? startDate.format('MM-DD-YYYY') : null,\n        endDate: endDate ? endDate.format('MM-DD-YYYY') : null\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  })) : null), __jsx(Tooltip, {\n    disabled: !isBasic,\n    html: __jsx(TooltipContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }),\n    interactive: true,\n    interactiveBorder: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(AddBtn, {\n    isFixedFullRange: fixedFullRange,\n    onClick: function onClick() {\n      if (btnDisabled) return;\n      toggleCompare(!showCompareDate);\n    },\n    disabled: btnDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, fixedFullRange ? null : loading || isLoading ? __jsx(Spinner, {\n    width: \"2em\",\n    size: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }) : __jsx(\"i\", {\n    className: showCompareDate ? 'fa fa-minus-circle' : 'fa fa-plus-circle',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }))));\n};\n\n_s(DateContainer, \"8qpvTL1f54KL848iQLIN+mOckrw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DateContainer;\nexport default DateContainer;\n\nvar TooltipContent = function TooltipContent() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, \"You must \", __jsx(Link, {\n    href: \"/settings/membership\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 16\n    }\n  }, __jsx(Span, {\n    title: \"/membership\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 50\n    }\n  }, \"upgrade\")), \" to compare date ranges\");\n};\n\n_c2 = TooltipContent;\nvar Span = styled.span.withConfig({\n  displayName: \"DateContainer__Span\",\n  componentId: \"sc-3ofmch-0\"\n})([\"color:white;cursor:pointer;border-bottom:1px solid white;&:hover{opacity:.7;}\"]);\n_c3 = Span;\nvar AddBtn = styled.span.withConfig({\n  displayName: \"DateContainer__AddBtn\",\n  componentId: \"sc-3ofmch-1\"\n})([\"color:\", \";background:none;border:none;cursor:\", \";font-size:20px;margin-top:3px;transition:\", \";height:50px;width:60px;display:flex;align-items:center;border-left:1px solid \", \";justify-content:center;&:hover{color:\", \";}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.greyLight;\n}, function (_ref4) {\n  var disabled = _ref4.disabled;\n  return disabled ? 'not-allowed' : 'pointer';\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.transitionDurations[1];\n}, function (_ref6) {\n  var theme = _ref6.theme,\n      isFixedFullRange = _ref6.isFixedFullRange;\n  return isFixedFullRange ? 'transparent' : theme.colors.mainBg;\n}, function (_ref7) {\n  var theme = _ref7.theme,\n      disabled = _ref7.disabled;\n  return !disabled ? theme.colors.primary : null;\n});\n_c4 = AddBtn;\nvar options = [{\n  label: 'Full Range',\n  value: 'full'\n}, {\n  label: 'This Month',\n  value: 'this_month'\n}, {\n  label: 'Last Month',\n  value: 'last_month'\n}, {\n  label: 'Past 3 Months',\n  value: 'past_three_months'\n}];\n\nvar getDatePreset = function getDatePreset(preset, min, max) {\n  switch (preset.value) {\n    case 'full':\n      {\n        return {\n          startDate: min,\n          endDate: max\n        };\n      }\n\n    case 'this_month':\n      {\n        var newStart = moment(moment().startOf('month')).format('MM-DD-YYYY');\n        var newEnd = moment(moment().endOf('month')).format('MM-DD-YYYY');\n        return {\n          startDate: newStart,\n          endDate: new Date(newEnd) <= new Date(max) ? newEnd : max\n        };\n      }\n\n    case 'last_month':\n      {\n        var _newStart = moment(moment().subtract(1, 'months').startOf('month')).format('MM-DD-YYYY');\n\n        var _newEnd = moment(moment().subtract(1, 'months').endOf('month')).format('MM-DD-YYYY');\n\n        return {\n          startDate: _newStart,\n          endDate: new Date(_newEnd) <= new Date(max) ? _newEnd : max\n        };\n      }\n\n    case 'past_three_months':\n      {\n        var _newStart2 = moment(moment().subtract(3, 'months')).format('MM-DD-YYYY');\n\n        return {\n          startDate: _newStart2,\n          endDate: max\n        };\n      }\n\n    default:\n      {\n        return {};\n      }\n  }\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DateContainer\");\n$RefreshReg$(_c2, \"TooltipContent\");\n$RefreshReg$(_c3, \"Span\");\n$RefreshReg$(_c4, \"AddBtn\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/DateContainer.js"],"names":["useState","useEffect","useMemo","useSelector","useDispatch","styled","moment","Link","Flex","DateRangePicker","Select","getRangedData","UPDATE_RANGED_DATA","UPDATE_COMPARE_DATA","Text","Spinner","Tooltip","DateContainer","page","state","generalReducer","allData","loading","user","fixedFullRange","dispatch","min","sales","date_of_sale","max","length","startDate","endDate","dateRange","setDates","compareDateRange","setCompareDates","label","value","preset","setPreset","comparePreset","setComparePreset","showCompareDate","toggleCompare","isLoading","setLoading","isBasic","membership","type","isSame","setTimeout","rangedData","payload","getDatePreset","btnDisabled","options","arr","values","disabled","searchable","style","width","fontSize","separator","day","isBefore","isAfter","format","TooltipContent","Span","span","AddBtn","theme","colors","greyLight","transitionDurations","isFixedFullRange","mainBg","primary","newStart","startOf","newEnd","endOf","Date","subtract"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,yBAAxD;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,qBACCf,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACC,cAAV;AAAA,GAAN,CADZ;AAAA,MAC1BC,OAD0B,gBAC1BA,OAD0B;AAAA,MACjBC,OADiB,gBACjBA,OADiB;AAAA,MACRC,IADQ,gBACRA,IADQ;;AAElC,MAAMC,cAAc,GAAGN,IAAI,KAAK,WAAhC;AACA,MAAMO,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,MAAMsB,GAAG,GAAGxB,OAAO,CAAC;AAAA,WAAMmB,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiBC,YAAjC,GAAgD,IAAtD;AAAA,GAAD,EAA6D,CAACP,OAAD,CAA7D,CAAnB;AACA,MAAMQ,GAAG,GAAG3B,OAAO,CAAC;AAAA,WAAMmB,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACM,KAAR,CAAcN,OAAO,CAACM,KAAR,CAAcG,MAAd,GAAuB,CAArC,EAAwCF,YAAxD,GAAuE,IAA7E;AAAA,GAAD,EAAoF,CAACP,OAAD,CAApF,CAAnB;;AANkC,kBAOJrB,QAAQ,CAAC;AAAE+B,IAAAA,SAAS,EAAEL,GAAb;AAAkBM,IAAAA,OAAO,EAAEH;AAA3B,GAAD,CAPJ;AAAA,MAO3BI,SAP2B;AAAA,MAOhBC,QAPgB,iBAOuC;;;AAPvC,mBAQUlC,QAAQ,CAAC;AAAE+B,IAAAA,SAAS,EAAEL,GAAb;AAAkBM,IAAAA,OAAO,EAAEH;AAA3B,GAAD,CARlB;AAAA,MAQ3BM,gBAR2B;AAAA,MAQTC,eARS,kBAQqD;;;AARrD,mBASNpC,QAAQ,CAAC;AAAEqC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAAD,CATF;AAAA,MAS3BC,MAT2B;AAAA,MASnBC,SATmB;;AAAA,mBAUQxC,QAAQ,CAAC;AAAEqC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAAD,CAVhB;AAAA,MAU3BG,aAV2B;AAAA,MAUZC,gBAVY;;AAAA,mBAWO1C,QAAQ,CAAC,KAAD,CAXf;AAAA,MAW3B2C,eAX2B;AAAA,MAWVC,aAXU;;AAAA,mBAYF5C,QAAQ,CAAC,KAAD,CAZN;AAAA,MAY3B6C,SAZ2B;AAAA,MAYhBC,UAZgB;;AAalC,MAAMC,OAAO,GAAG,CAACxB,IAAI,CAACyB,UAAN,GAAmB,OAAnB,GAA6BzB,IAAI,CAACyB,UAAL,CAAgBC,IAAhB,KAAyB,OAAtE;AAEAhD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgC,SAAS,CAACF,SAAV,KAAwB,IAAxB,IAAgCE,SAAS,CAACD,OAAV,KAAsB,IAA1D,EAAgE;AAC9DQ,MAAAA,SAAS,CAAC;AAAEH,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAAD,CAAT;AACAJ,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,SAAS,EAAEL,GAAb;AAAkBM,QAAAA,OAAO,EAAEH;AAA3B,OAAD,CAAR;AACD,KAHD,MAGO,IAAII,SAAS,CAACF,SAAV,IAAuBE,SAAS,CAACD,OAArC,EAA8C;AACnD,UAAI,CAAC1B,MAAM,CAAC2B,SAAS,CAACF,SAAX,CAAN,CAA4BmB,MAA5B,CAAmCxB,GAAnC,CAAD,IAA4C,CAACpB,MAAM,CAAC2B,SAAS,CAACD,OAAX,CAAN,CAA0BkB,MAA1B,CAAiCrB,GAAjC,CAAjD,EAAwF;AACtFW,QAAAA,SAAS,CAAC;AAAEH,UAAAA,KAAK,EAAE,YAAT;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAD,CAAT;AACAJ,QAAAA,QAAQ,CAAC;AAAEH,UAAAA,SAAS,EAAEL,GAAb;AAAkBM,UAAAA,OAAO,EAAEH;AAA3B,SAAD,CAAR;AACD;AACF;AACF,GAVQ,EAUN,CAACH,GAAD,EAAMG,GAAN,CAVM,CAAT;AAWA5B,EAAAA,SAAS,CAAC,YAAM;AACdkD,IAAAA,UAAU,CAAC,YAAM;AACf,UAAI9B,OAAO,CAACM,KAAR,IAAiBM,SAAS,CAACF,SAA3B,IAAwCE,SAAS,CAACD,OAAtD,EAA+D;AAC7D,YAAMoB,UAAU,GAAGzC,aAAa,CAACU,OAAD,EAAU;AACxCU,UAAAA,SAAS,EAAEE,SAAS,CAACF,SADmB;AAExCC,UAAAA,OAAO,EAAEC,SAAS,CAACD;AAFqB,SAAV,CAAhC;AAIAP,QAAAA,QAAQ,CAAC;AACPwB,UAAAA,IAAI,EAAErC,kBADC;AAEPyC,UAAAA,OAAO,EAAED;AAFF,SAAD,CAAR;AAID;AACF,KAXS,CAAV;AAYD,GAbQ,EAaN,CAAC/B,OAAD,EAAUY,SAAV,CAbM,CAAT;AAeAhC,EAAAA,SAAS,CAAC,YAAM;AACd6C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,UAAU,CAAC,YAAM;AACf,UAAI9B,OAAO,CAACM,KAAR,IAAiBQ,gBAAgB,CAACJ,SAAlC,IAA+CI,gBAAgB,CAACH,OAApE,EAA6E;AAC3E,YAAMoB,UAAU,GAAGzC,aAAa,CAACU,OAAD,EAAU;AACxCU,UAAAA,SAAS,EAAEI,gBAAgB,CAACJ,SADY;AAExCC,UAAAA,OAAO,EAAEG,gBAAgB,CAACH;AAFc,SAAV,CAAhC,CAD2E,CAK3E;;AACAP,QAAAA,QAAQ,CAAC;AACPwB,UAAAA,IAAI,EAAEpC,mBADC;AAEPwC,UAAAA,OAAO,EAAED;AAFF,SAAD,CAAR;AAID;;AACD,UAAI,CAACT,eAAL,EAAsB;AACpBlB,QAAAA,QAAQ,CAAC;AACPwB,UAAAA,IAAI,EAAEpC,mBADC;AAEPwC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;;AACDP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAnBS,CAAV;AAoBD,GAtBQ,EAsBN,CAACzB,OAAD,EAAUc,gBAAV,EAA4BQ,eAA5B,CAtBM,CAAT;AAwBA1C,EAAAA,SAAS,CAAC,YAAM;AAAA,yBACiBqD,aAAa,CAACf,MAAD,EAASb,GAAT,EAAcG,GAAd,CAD9B;AAAA,QACNE,SADM,kBACNA,SADM;AAAA,QACKC,OADL,kBACKA,OADL;;AAEd,QAAID,SAAS,IAAIC,OAAjB,EAA0B;AACxBE,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,OAAO,EAAPA;AAAb,OAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACO,MAAD,CALM,CAAT;AAOAtC,EAAAA,SAAS,CAAC,YAAM;AAAA,0BACiBqD,aAAa,CAACb,aAAD,EAAgBf,GAAhB,EAAqBG,GAArB,CAD9B;AAAA,QACNE,SADM,mBACNA,SADM;AAAA,QACKC,OADL,mBACKA,OADL;;AAEd,QAAID,SAAS,IAAIC,OAAjB,EAA0B;AACxBI,MAAAA,eAAe,CAAC;AAAEL,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,OAAO,EAAPA;AAAb,OAAD,CAAf;AACD;AACF,GALQ,EAKN,CAACS,aAAD,CALM,CAAT;AAOA,MAAI,CAACpB,OAAO,CAACM,KAAb,EAAoB,OAAO,IAAP;AACpB,MAAM4B,WAAW,GAAGjC,OAAO,IAAIE,cAAX,IAA6BqB,SAA7B,IAA0CE,OAA9D;AACA,SACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,cAAc,EAAC,eAA5C;AAA4D,IAAA,MAAM,EAAEJ,eAAe,IAAI,CAACnB,cAApB,GAAqC,EAArC,GAA0C,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEA,cAAc,GAAG,CAAH,GAAO,CADhC;AAEE,IAAA,OAAO,EAAEgC,OAFX;AAGE,IAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,aAASjB,SAAS,CAACiB,GAAG,CAAC,CAAD,CAAJ,CAAlB;AAAA,KAHZ;AAIE,IAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEnB,MAAM,GAAG,CAACA,MAAD,CAAH,GAAc,EADjB;AAEXoB,MAAAA,QAAQ,EAAEnC,cAFC;AAGXoC,MAAAA,UAAU,EAAE,KAHD;AAIXC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAJI;AAKXC,MAAAA,SAAS,EAAE;AALA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAeIrB,eAAe,GACb,MAAC,MAAD;AACE,IAAA,OAAO,EAAEnB,cAAc,GAAG,CAAH,GAAO,CADhC;AAEE,IAAA,OAAO,EAAEgC,OAFX;AAGE,IAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,aAASf,gBAAgB,CAACe,GAAG,CAAC,CAAD,CAAJ,CAAzB;AAAA,KAHZ;AAIE,IAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEjB,aAAa,GAAG,CAACA,aAAD,CAAH,GAAqB,EAD/B;AAEXkB,MAAAA,QAAQ,EAAEnC,cAFC;AAGXoC,MAAAA,UAAU,EAAE,KAHD;AAIXC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAJI;AAKXC,MAAAA,SAAS,EAAE;AALA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAaX,IA5BR,CADF,EAgCE,MAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,eAAD;AACE,IAAA,SAAS,EAAE/B,SAAS,CAACF,SAAV,GAAsBzB,MAAM,CAACkB,cAAc,GAAGE,GAAH,GAASO,SAAS,CAACF,SAAlC,CAA5B,GAA2E,IADxF;AAEE,IAAA,OAAO,EAAEE,SAAS,CAACD,OAAV,GAAoB1B,MAAM,CAACkB,cAAc,GAAGK,GAAH,GAASI,SAAS,CAACD,OAAlC,CAA1B,GAAuE,IAFlF;AAGE,IAAA,QAAQ,EAAER,cAHZ,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAmBImB,eAAe,IAAI,CAACnB,cAApB,GACE,4BACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,UAAU,EAAC,KALb;AAME,IAAA,QAAQ,EAAC,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAWE,MAAC,eAAD;AACE,IAAA,SAAS,EAAEW,gBAAgB,CAACJ,SAAjB,GAA6BzB,MAAM,CAACkB,cAAc,GAAGE,GAAH,GAASS,gBAAgB,CAACJ,SAAzC,CAAnC,GAAyF,IADtG;AAEE,IAAA,OAAO,EAAEI,gBAAgB,CAACH,OAAjB,GAA2B1B,MAAM,CAACkB,cAAc,GAAGK,GAAH,GAASM,gBAAgB,CAACH,OAAzC,CAAjC,GAAqF,IAFhG;AAGE,IAAA,QAAQ,EAAER,cAHZ;AAIE,IAAA,cAAc,EAAE,wBAACyC,GAAD,EAAS;AACvB,aAAQA,GAAG,CAACC,QAAJ,CAAaxC,GAAb,KAAqBuC,GAAG,CAACE,OAAJ,CAAYtC,GAAZ,CAA7B;AACD,KANH;AAOE,IAAA,aAAa,EAAE,8BAA4B;AAAA,UAAzBE,SAAyB,SAAzBA,SAAyB;AAAA,UAAdC,OAAc,SAAdA,OAAc;AACzCU,MAAAA,gBAAgB,CAAC;AAAEL,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAD,CAAhB;AACAF,MAAAA,eAAe,CAAC;AACdL,QAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAACqC,MAAV,CAAiB,YAAjB,CAAH,GAAoC,IAD1C;AAEdpC,QAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAACoC,MAAR,CAAe,YAAf,CAAH,GAAkC;AAFpC,OAAD,CAAf;AAID,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,GA4BI,IA/CR,CAhCF,EAkFE,MAAC,OAAD;AACE,IAAA,QAAQ,EAAE,CAACrB,OADb;AAEE,IAAA,IAAI,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,iBAAiB,EAAE,GAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AACE,IAAA,gBAAgB,EAAEvB,cADpB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI+B,WAAJ,EAAiB;AACjBX,MAAAA,aAAa,CAAC,CAACD,eAAF,CAAb;AACD,KALH;AAME,IAAA,QAAQ,EAAEY,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI/B,cAAc,GAAG,IAAH,GACVF,OAAO,IAAIuB,SAAX,GACA,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,IAAI,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA;AAAG,IAAA,SAAS,EAAEF,eAAe,GAAG,oBAAH,GAA0B,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CAPF,CAlFF,CADF;AA+GD,CAhMD;;GAAM1B,a;UAC+Bd,W,EAElBC,W;;;KAHba,a;AAkMN,eAAeA,aAAf;;AAEA,IAAMoD,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlC,CADX,4BADF;AAKD,CAND;;MAAMA,c;AAQN,IAAMC,IAAI,GAAGjE,MAAM,CAACkE,IAAV;AAAA;AAAA;AAAA,qFAAV;MAAMD,I;AAQN,IAAME,MAAM,GAAGnE,MAAM,CAACkE,IAAV;AAAA;AAAA;AAAA,uOACD;AAAA,MAAGE,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,SAA5B;AAAA,CADC,EAIA;AAAA,MAAGhB,QAAH,SAAGA,QAAH;AAAA,SAAkBA,QAAQ,GAAG,aAAH,GAAmB,SAA7C;AAAA,CAJA,EAOI;AAAA,MAAGc,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,mBAAN,CAA0B,CAA1B,CAAf;AAAA,CAPJ,EAYe;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,MAAUI,gBAAV,SAAUA,gBAAV;AAAA,SAAiCA,gBAAgB,GAAG,aAAH,GAAmBJ,KAAK,CAACC,MAAN,CAAaI,MAAjF;AAAA,CAZf,EAeC;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,MAAUd,QAAV,SAAUA,QAAV;AAAA,SAAyB,CAACA,QAAD,GAAYc,KAAK,CAACC,MAAN,CAAaK,OAAzB,GAAmC,IAA5D;AAAA,CAfD,CAAZ;MAAMP,M;AAmBN,IAAMhB,OAAO,GAAG,CACd;AAAEnB,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CAJc,CAAhB;;AAOA,IAAMgB,aAAa,GAAG,SAAhBA,aAAgB,CAACf,MAAD,EAASb,GAAT,EAAcG,GAAd,EAAsB;AAC1C,UAAQU,MAAM,CAACD,KAAf;AACE,SAAK,MAAL;AAAa;AACX,eAAO;AAAEP,UAAAA,SAAS,EAAEL,GAAb;AAAkBM,UAAAA,OAAO,EAAEH;AAA3B,SAAP;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,YAAMmD,QAAQ,GAAG1E,MAAM,CAACA,MAAM,GAAG2E,OAAT,CAAiB,OAAjB,CAAD,CAAN,CAAkCb,MAAlC,CAAyC,YAAzC,CAAjB;AACA,YAAMc,MAAM,GAAG5E,MAAM,CAACA,MAAM,GAAG6E,KAAT,CAAe,OAAf,CAAD,CAAN,CAAgCf,MAAhC,CAAuC,YAAvC,CAAf;AACA,eAAO;AACLrC,UAAAA,SAAS,EAAEiD,QADN;AAELhD,UAAAA,OAAO,EAAE,IAAIoD,IAAJ,CAASF,MAAT,KAAoB,IAAIE,IAAJ,CAASvD,GAAT,CAApB,GAAoCqD,MAApC,GAA6CrD;AAFjD,SAAP;AAID;;AACD,SAAK,YAAL;AAAmB;AACjB,YAAMmD,SAAQ,GAAG1E,MAAM,CAACA,MAAM,GAAG+E,QAAT,CAAkB,CAAlB,EAAqB,QAArB,EAA+BJ,OAA/B,CAAuC,OAAvC,CAAD,CAAN,CAAwDb,MAAxD,CAA+D,YAA/D,CAAjB;;AACA,YAAMc,OAAM,GAAG5E,MAAM,CAACA,MAAM,GAAG+E,QAAT,CAAkB,CAAlB,EAAqB,QAArB,EAA+BF,KAA/B,CAAqC,OAArC,CAAD,CAAN,CAAsDf,MAAtD,CAA6D,YAA7D,CAAf;;AAEA,eAAO;AACLrC,UAAAA,SAAS,EAAEiD,SADN;AAELhD,UAAAA,OAAO,EAAE,IAAIoD,IAAJ,CAASF,OAAT,KAAoB,IAAIE,IAAJ,CAASvD,GAAT,CAApB,GAAoCqD,OAApC,GAA6CrD;AAFjD,SAAP;AAID;;AACD,SAAK,mBAAL;AAA0B;AACxB,YAAMmD,UAAQ,GAAG1E,MAAM,CAACA,MAAM,GAAG+E,QAAT,CAAkB,CAAlB,EAAqB,QAArB,CAAD,CAAN,CAAuCjB,MAAvC,CAA8C,YAA9C,CAAjB;;AACA,eAAO;AAAErC,UAAAA,SAAS,EAAEiD,UAAb;AAAuBhD,UAAAA,OAAO,EAAEH;AAAhC,SAAP;AACD;;AACD;AAAS;AACP,eAAO,EAAP;AACD;AA3BH;AA6BD,CA9BD","sourcesContent":["import { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport Link from 'next/link'\n\nimport Flex from '../styles/layout/Flex'\nimport DateRangePicker from '../styles/elements/DateRangePicker'\nimport Select from '../styles/elements/Select'\n\nimport { getRangedData } from '../dataProcessing/utils'\nimport { UPDATE_RANGED_DATA, UPDATE_COMPARE_DATA } from '../store/generalReducer'\nimport Text from '../styles/elements/Text'\nimport Spinner from '../styles/elements/Loading/Spinner'\nimport Tooltip from '../styles/elements/Tooltip'\n\nconst DateContainer = ({ page }) => {\n  const { allData, loading, user } = useSelector(state => state.generalReducer)\n  const fixedFullRange = page === 'Dashboard'\n  const dispatch = useDispatch()\n\n  const min = useMemo(() => allData.sales ? allData.sales[0].date_of_sale : null, [allData])\n  const max = useMemo(() => allData.sales ? allData.sales[allData.sales.length - 1].date_of_sale : null, [allData])\n  const [dateRange, setDates] = useState({ startDate: min, endDate: max }) // stored in MM-DD-YYYY format\n  const [compareDateRange, setCompareDates] = useState({ startDate: min, endDate: max }) // stored in MM-DD-YYYY format\n  const [preset, setPreset] = useState({ label: 'Full Range', value: 'full' })\n  const [comparePreset, setComparePreset] = useState({ label: 'Full Range', value: 'full' })\n  const [showCompareDate, toggleCompare] = useState(false)\n  const [isLoading, setLoading] = useState(false)\n  const isBasic = !user.membership ? 'basic' : user.membership.type === 'basic'\n\n  useEffect(() => {\n    if (dateRange.startDate === null || dateRange.endDate === null) {\n      setPreset({ label: 'Full Range', value: 'full' })\n      setDates({ startDate: min, endDate: max })\n    } else if (dateRange.startDate && dateRange.endDate) {\n      if (!moment(dateRange.startDate).isSame(min) && !moment(dateRange.endDate).isSame(max)) {\n        setPreset({ label: 'Full Range', value: 'full' })\n        setDates({ startDate: min, endDate: max })\n      }\n    }\n  }, [min, max])\n  useEffect(() => {\n    setTimeout(() => {\n      if (allData.sales && dateRange.startDate && dateRange.endDate) {\n        const rangedData = getRangedData(allData, {\n          startDate: dateRange.startDate,\n          endDate: dateRange.endDate\n        })\n        dispatch({\n          type: UPDATE_RANGED_DATA,\n          payload: rangedData\n        })\n      }\n    })\n  }, [allData, dateRange])\n\n  useEffect(() => {\n    setLoading(true)\n    setTimeout(() => {\n      if (allData.sales && compareDateRange.startDate && compareDateRange.endDate) {\n        const rangedData = getRangedData(allData, {\n          startDate: compareDateRange.startDate,\n          endDate: compareDateRange.endDate\n        })\n        // console.log(rangedData)\n        dispatch({\n          type: UPDATE_COMPARE_DATA,\n          payload: rangedData\n        })\n      }\n      if (!showCompareDate) {\n        dispatch({\n          type: UPDATE_COMPARE_DATA,\n          payload: {}\n        })\n      }\n      setLoading(false)\n    })\n  }, [allData, compareDateRange, showCompareDate])\n\n  useEffect(() => {\n    const { startDate, endDate } = getDatePreset(preset, min, max)\n    if (startDate && endDate) {\n      setDates({ startDate, endDate })\n    }\n  }, [preset])\n\n  useEffect(() => {\n    const { startDate, endDate } = getDatePreset(comparePreset, min, max)\n    if (startDate && endDate) {\n      setCompareDates({ startDate, endDate })\n    }\n  }, [comparePreset])\n\n  if (!allData.sales) return null\n  const btnDisabled = loading || fixedFullRange || isLoading || isBasic\n  return (\n    <Flex alignItems='center'>\n      <Flex flexDirection='column' justifyContent='space-between' height={showCompareDate && !fixedFullRange ? 96 : 'auto'}>\n\n        <Select\n          opacity={fixedFullRange ? 0 : 1}\n          options={options}\n          onChange={(arr) => setPreset(arr[0])}\n          selectProps={{\n            values: preset ? [preset] : [],\n            disabled: fixedFullRange,\n            searchable: false,\n            style: { width: '140px', fontSize: '15px' },\n            separator: true\n          }}\n        />\n        {\n          showCompareDate ? (\n            <Select\n              opacity={fixedFullRange ? 0 : 1}\n              options={options}\n              onChange={(arr) => setComparePreset(arr[0])}\n              selectProps={{\n                values: comparePreset ? [comparePreset] : [],\n                disabled: fixedFullRange,\n                searchable: false,\n                style: { width: '140px', fontSize: '15px' },\n                separator: true\n              }}\n            />\n          ) : null\n        }\n      </Flex>\n      <Flex flexDirection='column'>\n\n        <DateRangePicker\n          startDate={dateRange.startDate ? moment(fixedFullRange ? min : dateRange.startDate) : null}\n          endDate={dateRange.endDate ? moment(fixedFullRange ? max : dateRange.endDate) : null}\n          disabled={fixedFullRange}\n          // isOutsideRange={(day) => {\n          //   return (day.isBefore(moment(min)) || day.isAfter(moment(max)))\n          // }}\n          // enableOutsideDays={false}\n          // onDatesChange={({ startDate, endDate }) => {\n          //   setPreset({ label: 'Custom', value: null })\n          //   setDates({\n          //     startDate: startDate ? startDate.format('MM-DD-YYYY') : null,\n          //     endDate: endDate ? endDate.format('MM-DD-YYYY') : null\n          //   })\n          // }}\n        />\n        {\n          showCompareDate && !fixedFullRange ? (\n            <>\n              <Text\n                display='flex'\n                alignItems='center'\n                justifyContent='center'\n                color='primary'\n                fontWeight='100'\n                fontSize='15px'\n              >\n              vs.\n              </Text>\n              <DateRangePicker\n                startDate={compareDateRange.startDate ? moment(fixedFullRange ? min : compareDateRange.startDate) : null}\n                endDate={compareDateRange.endDate ? moment(fixedFullRange ? max : compareDateRange.endDate) : null}\n                disabled={fixedFullRange}\n                isOutsideRange={(day) => {\n                  return (day.isBefore(min) || day.isAfter(max))\n                }}\n                onDatesChange={({ startDate, endDate }) => {\n                  setComparePreset({ label: 'Custom', value: null })\n                  setCompareDates({\n                    startDate: startDate ? startDate.format('MM-DD-YYYY') : null,\n                    endDate: endDate ? endDate.format('MM-DD-YYYY') : null\n                  })\n                }}\n              />\n            </>\n          ) : null\n        }\n      </Flex>\n      <Tooltip\n        disabled={!isBasic}\n        html={<TooltipContent />}\n        interactive\n        interactiveBorder={100}\n      >\n\n        <AddBtn\n          isFixedFullRange={fixedFullRange}\n          onClick={() => {\n            if (btnDisabled) return\n            toggleCompare(!showCompareDate)\n          }}\n          disabled={btnDisabled}\n        >\n          {\n            fixedFullRange ? null\n              : loading || isLoading ? (\n                <Spinner width='2em' size={3} />\n              ) : (\n                <i className={showCompareDate ? 'fa fa-minus-circle' : 'fa fa-plus-circle'} />\n              )\n          }\n        </AddBtn>\n      </Tooltip>\n    </Flex>\n\n  )\n}\n\nexport default DateContainer\n\nconst TooltipContent = () => {\n  return (\n    <div>\n      You must <Link href='/settings/membership'><Span title='/membership'>upgrade</Span></Link> to compare date ranges\n    </div>\n  )\n}\n\nconst Span = styled.span`\n  color: white;\n  cursor: pointer;\n  border-bottom: 1px solid white;\n  &:hover {\n    opacity: .7;\n  }\n`\nconst AddBtn = styled.span`\n  color: ${({ theme }) => theme.colors.greyLight};\n  background: none;\n  border: none;\n  cursor: ${({ disabled }) => disabled ? 'not-allowed' : 'pointer'};\n  font-size: 20px;\n  margin-top: 3px;\n  transition: ${({ theme }) => theme.transitionDurations[1]};\n  height: 50px;\n  width: 60px;\n  display: flex;\n  align-items: center;\n  border-left: 1px solid ${({ theme, isFixedFullRange }) => isFixedFullRange ? 'transparent' : theme.colors.mainBg};\n  justify-content: center;\n  &:hover {\n    color: ${({ theme, disabled }) => !disabled ? theme.colors.primary : null};\n  }\n  `\n\nconst options = [\n  { label: 'Full Range', value: 'full' },\n  { label: 'This Month', value: 'this_month' },\n  { label: 'Last Month', value: 'last_month' },\n  { label: 'Past 3 Months', value: 'past_three_months' }\n]\n\nconst getDatePreset = (preset, min, max) => {\n  switch (preset.value) {\n    case 'full': {\n      return { startDate: min, endDate: max }\n    }\n    case 'this_month': {\n      const newStart = moment(moment().startOf('month')).format('MM-DD-YYYY')\n      const newEnd = moment(moment().endOf('month')).format('MM-DD-YYYY')\n      return {\n        startDate: newStart,\n        endDate: new Date(newEnd) <= new Date(max) ? newEnd : max\n      }\n    }\n    case 'last_month': {\n      const newStart = moment(moment().subtract(1, 'months').startOf('month')).format('MM-DD-YYYY')\n      const newEnd = moment(moment().subtract(1, 'months').endOf('month')).format('MM-DD-YYYY')\n\n      return {\n        startDate: newStart,\n        endDate: new Date(newEnd) <= new Date(max) ? newEnd : max\n      }\n    }\n    case 'past_three_months': {\n      const newStart = moment(moment().subtract(3, 'months')).format('MM-DD-YYYY')\n      return { startDate: newStart, endDate: max }\n    }\n    default: {\n      return {}\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}