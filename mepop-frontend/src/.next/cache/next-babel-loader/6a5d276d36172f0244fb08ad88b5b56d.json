{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/reporting/BubbleChart/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport HeatMap from 'react-heatmap-grid';\nimport Tooltip from '../../elements/Tooltip';\nimport Card from '../../elements/Card';\nimport theme from '../../../theme';\nimport styled from 'styled-components';\nimport { transparentize } from 'polished';\n\nconst BubbleChart = (_ref) => {\n  let {\n    height,\n    color,\n    data,\n    xLabels,\n    yLabels,\n    tooltipContent,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"height\", \"color\", \"data\", \"xLabels\", \"yLabels\", \"tooltipContent\", \"onClick\"]);\n\n  return __jsx(Card, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), __jsx(ChartWrap, {\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(HeatMap, {\n    cellStyle: getStyle,\n    background: color || theme.colors.teal,\n    xLabels: xLabels,\n    yLabels: yLabels,\n    xLabelsLocation: \"bottom\",\n    data: data,\n    onClick: onClick,\n    cellRender: (value, x, y) => __jsx(Tooltip, {\n      title: tooltipContent(value, x, y),\n      delay: 0,\n      hideOnClick: false,\n      stickyDuration: 50,\n      arrow: false,\n      offset: -25,\n      positio: \"top-start\",\n      animation: \"shift\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(Value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    })),\n    unit: \"Items Sold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BubbleChart;\n\nconst getStyle = (bg, value, min, max) => {\n  const opacity = (max - value) / (max - min);\n  return {\n    background: transparentize(opacity < 1 ? opacity : 0.94, theme.colors.teal)\n  };\n};\n\nconst ChartWrap = styled.div.withConfig({\n  displayName: \"BubbleChart__ChartWrap\",\n  componentId: \"sc-1586wnj-0\"\n})([\"display:flex;flex-wrap:wrap;height:\", \"px;width:100%;padding:20px 10px 0px 10px;justify-content:center;>div{overflow:auto;}\"], ({\n  height\n}) => height || 300);\nconst Value = styled.div.withConfig({\n  displayName: \"BubbleChart__Value\",\n  componentId: \"sc-1586wnj-1\"\n})([\"height:30px;margin-top:-8px;\"]);","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/reporting/BubbleChart/index.js"],"names":["HeatMap","Tooltip","Card","theme","styled","transparentize","BubbleChart","height","color","data","xLabels","yLabels","tooltipContent","onClick","props","getStyle","colors","teal","value","x","y","bg","min","max","opacity","background","ChartWrap","div","Value"],"mappings":";;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,WAAW,GAAG,UAAkF;AAAA,MAAjF;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA,cAAzC;AAAyDC,IAAAA;AAAzD,GAAiF;AAAA,MAAZC,KAAY;;AACpG,SACE,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAEP,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEQ,QADb;AAEE,IAAA,UAAU,EAAEP,KAAK,IAAIL,KAAK,CAACa,MAAN,CAAaC,IAFpC;AAGE,IAAA,OAAO,EAAEP,OAHX;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,eAAe,EAAC,QALlB;AAME,IAAA,IAAI,EAAEF,IANR;AAOE,IAAA,OAAO,EAAEI,OAPX;AAQE,IAAA,UAAU,EAAE,CAACK,KAAD,EAAQC,CAAR,EAAWC,CAAX,KACV,MAAC,OAAD;AACE,MAAA,KAAK,EAAER,cAAc,CAACM,KAAD,EAAQC,CAAR,EAAWC,CAAX,CADvB;AAEE,MAAA,KAAK,EAAE,CAFT;AAGE,MAAA,WAAW,EAAE,KAHf;AAIE,MAAA,cAAc,EAAE,EAJlB;AAKE,MAAA,KAAK,EAAE,KALT;AAME,MAAA,MAAM,EAAE,CAAC,EANX;AAOE,MAAA,OAAO,EAAC,WAPV;AAQE,MAAA,SAAS,EAAC,OARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CATJ;AAsBE,IAAA,IAAI,EAAC,YAtBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AAiCD,CAlCD;;AAmCA,eAAed,WAAf;;AAEA,MAAMS,QAAQ,GAAG,CAACM,EAAD,EAAKH,KAAL,EAAYI,GAAZ,EAAiBC,GAAjB,KAAyB;AACxC,QAAMC,OAAO,GAAG,CAACD,GAAG,GAAGL,KAAP,KAAiBK,GAAG,GAAGD,GAAvB,CAAhB;AACA,SAAO;AACLG,IAAAA,UAAU,EAAEpB,cAAc,CAACmB,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,IAAzB,EAA+BrB,KAAK,CAACa,MAAN,CAAaC,IAA5C;AADrB,GAAP;AAID,CAND;;AAOA,MAAMS,SAAS,GAAGtB,MAAM,CAACuB,GAAV;AAAA;AAAA;AAAA,oIAIH,CAAC;AAAEpB,EAAAA;AAAF,CAAD,KAAgBA,MAAM,IAAI,GAJvB,CAAf;AAaA,MAAMqB,KAAK,GAAGxB,MAAM,CAACuB,GAAV;AAAA;AAAA;AAAA,oCAAX","sourcesContent":["import HeatMap from 'react-heatmap-grid'\nimport Tooltip from '../../elements/Tooltip'\nimport Card from '../../elements/Card'\nimport theme from '../../../theme'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\n\nconst BubbleChart = ({ height, color, data, xLabels, yLabels, tooltipContent, onClick, ...props }) => {\n  return (\n    <Card {...props}>\n\n      <ChartWrap height={height}>\n\n        <HeatMap\n          cellStyle={getStyle}\n          background={color || theme.colors.teal}\n          xLabels={xLabels}\n          yLabels={yLabels}\n          xLabelsLocation='bottom'\n          data={data}\n          onClick={onClick}\n          cellRender={(value, x, y) => (\n            <Tooltip\n              title={tooltipContent(value, x, y)}\n              delay={0}\n              hideOnClick={false}\n              stickyDuration={50}\n              arrow={false}\n              offset={-25}\n              positio='top-start'\n              animation='shift'\n            >\n              <Value />\n            </Tooltip>\n          )}\n          unit='Items Sold'\n        />\n\n      </ChartWrap>\n    </Card>\n  )\n}\nexport default BubbleChart\n\nconst getStyle = (bg, value, min, max) => {\n  const opacity = (max - value) / (max - min)\n  return {\n    background: transparentize(opacity < 1 ? opacity : 0.94, theme.colors.teal)\n\n  }\n}\nconst ChartWrap = styled.div`\n  display:flex;\n  flex-wrap:wrap;\n\n  height: ${({ height }) => height || 300}px;\n  width:100%;\n  padding: 20px 10px 0px 10px;\n  justify-content:center;\n\n  >div {\n    overflow: auto;\n  }\n`\nconst Value = styled.div`\n  height: 30px;\n  margin-top: -8px;\n`\n"]},"metadata":{},"sourceType":"module"}