{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var UPDATE_USER = 'UPDATE_USER';\nexport var UPDATE_FILES = 'UPDATE_FILES';\nexport var UPDATE_GEOCODES = 'UPDATE_GEOCODES';\nexport var UPDATE_DATA = 'UPDATE_DATA';\nexport var SET_LOCATION_KEYS = 'SET_LOCATION_KEYS';\nexport var SET_GEO_DATA = 'SET_GEO_DATA';\nexport var UPDATE_RANGED_DATA = 'UPDATE_RANGED_DATA';\nexport var UPDATE_COMPARE_DATA = 'UPDATE_COMPARE_DATA';\nexport var TOGGLE_LOADING = 'TOGGLE_LOADING';\nvar initialState = {\n  user: {},\n  files: [],\n  allData: {},\n  rangedData: {},\n  compareData: {},\n  geocodes: {},\n  googleMapsKey: null,\n  loading: true\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_LOADING:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: typeof action.payload === 'boolean' ? action.payload : !state.loading\n        });\n      }\n\n    case UPDATE_USER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.payload\n        });\n      }\n\n    case UPDATE_RANGED_DATA:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          rangedData: action.payload\n        });\n      }\n\n    case UPDATE_COMPARE_DATA:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          compareData: action.payload\n        });\n      }\n\n    case UPDATE_GEOCODES:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          geocodes: action.payload\n        });\n      }\n\n    case UPDATE_FILES:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          files: action.payload\n        });\n      }\n\n    case UPDATE_DATA:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          allData: action.payload || {},\n          rangedData: action.payload || {}\n        });\n      }\n\n    case SET_GEO_DATA:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          geocodes: action.payload\n        });\n      }\n\n    case SET_LOCATION_KEYS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          googleMapsKey: action.payload.googleKey\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}