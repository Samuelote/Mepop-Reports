{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withFirebase } from '../../../firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../../../styles/elements/Card';\nimport Button from '../../../styles/elements/Button';\nimport Text from '../../../styles/elements/Text';\nimport Flex from '../../../styles/layout/Flex';\nimport styled from 'styled-components';\nimport Tooltip from '../../../styles/elements/Tooltip';\nimport Box from '../../../styles/layout/Box';\nimport { UPDATE_USER } from '../../../store/generalReducer';\nimport { useToasts } from 'react-toast-notifications';\nimport { useRouter } from 'next/router';\nvar ChooseMembership = withFirebase(function (_ref) {\n  var firebase = _ref.firebase;\n  var router = useRouter();\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      user = _useSelector.user;\n\n  var hasSignedIn = user.profile.hasSignedIn;\n\n  var onChoose = function onChoose(type) {\n    var newProfile = _objectSpread(_objectSpread({}, user.profile), {}, {\n      hasSignedIn: true\n    });\n\n    var newMembership = _objectSpread(_objectSpread({}, user.membership), {}, {\n      type: type\n    });\n\n    firebase.setMembership(newMembership);\n    firebase.setProfile(newProfile).then(function () {\n      dispatch({\n        type: UPDATE_USER,\n        payload: _objectSpread(_objectSpread({}, user), {}, {\n          profile: newProfile,\n          membership: newMembership\n        })\n      });\n\n      if (!hasSignedIn) {\n        addToast(__jsx(\"div\", null, \"Everything is good to go! Now let's upload some files.\"), {\n          appearance: 'success'\n        });\n        router.push('/files');\n      } else {\n        router.push('/dashboard');\n      }\n    })[\"catch\"](function (err) {\n      addToast(__jsx(\"div\", null, err.message, \". Please email samote.wood@gmail.com\"), {\n        appearance: 'error'\n      });\n    });\n  };\n\n  return __jsx(Card, {\n    minHeight: \"650px\"\n  }, __jsx(Text, {\n    as: \"h1\",\n    color: \"greyDarker\"\n  }, \"Continue with a Plan\"), __jsx(\"div\", null, __jsx(Table, {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    mb: \"20px\"\n  }, __jsx(Flex, null, __jsx(Cell, null), tiers.map(function (_ref2) {\n    var title = _ref2.title,\n        icon = _ref2.icon,\n        price = _ref2.price;\n    return __jsx(Cell, {\n      key: title,\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    }, __jsx(Flex, {\n      alignItems: \"center\",\n      fontSize: \"18px\",\n      mb: \"15px\",\n      mt: \"2px\"\n    }, __jsx(Text, {\n      mr: \"5px\"\n    }, title), __jsx(\"i\", {\n      className: \"fa fa-\".concat(icon)\n    })), __jsx(Flex, {\n      mb: \"2px\"\n    }, __jsx(Text, {\n      fontSize: \"15px\",\n      fontWeight: 500\n    }, price)));\n  })), options.map(function (_ref3, i) {\n    var title = _ref3.title,\n        ref = _ref3.ref,\n        tooltip = _ref3.tooltip;\n    return __jsx(Flex, {\n      key: i\n    }, __jsx(Cell, {\n      px: \"10px\"\n    }, __jsx(Tooltip, {\n      title: tooltip,\n      position: \"right\",\n      height: \"100%\",\n      arrow: false,\n      style: {\n        width: '100%'\n      }\n    }, __jsx(Flex, {\n      justifyContent: \"space-between\",\n      width: [1]\n    }, title, __jsx(Box, {\n      ml: \"5px\",\n      fontSize: \"20px\",\n      alignItems: \"center\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-question-circle\"\n    }))))), tiers.map(function (tier, j) {\n      return __jsx(Cell, {\n        key: j,\n        justifyContent: \"center\"\n      }, __jsx(I, {\n        good: tier[ref],\n        className: \"fa fa-\".concat(!tier[ref] ? 'times-circle' : 'check-circle')\n      }));\n    }));\n  }), __jsx(Flex, null, __jsx(Cell, null), tiers.map(function (_ref4) {\n    var title = _ref4.title,\n        type = _ref4.type;\n    return __jsx(Cell, {\n      key: title,\n      justifyContent: \"center\"\n    }, __jsx(Button, {\n      bg: \"success\",\n      minWidth: \"150px\",\n      onClick: function onClick() {\n        return onChoose(type);\n      }\n    }, \"Go \", title, \"!\"));\n  }))), __jsx(Text, {\n    mb: \"10px\",\n    width: [1],\n    justifyContent: \"flex-start\"\n  }, \"* By choosing a plan, you automatically agree to our 'terms of service'\")));\n});\nexport default ChooseMembership;\nvar I = styled.i.withConfig({\n  displayName: \"membership__I\",\n  componentId: \"sc-1utfzfc-0\"\n})([\"color:\", \";font-size:25px;\"], function (_ref5) {\n  var good = _ref5.good,\n      theme = _ref5.theme;\n  return good ? theme.colors.good : theme.colors.bad;\n});\nvar Cell = styled(Flex).withConfig({\n  displayName: \"membership__Cell\",\n  componentId: \"sc-1utfzfc-1\"\n})([\"min-height:50px;min-width:300px;overflow:auto;border-right:1px solid \", \";border-bottom:1px solid \", \";align-items:center;font-weight:\", \";\"], function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.colors.whiteDark;\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.colors.whiteDark;\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.fontWeights.bold;\n});\nvar Table = styled(Flex).withConfig({\n  displayName: \"membership__Table\",\n  componentId: \"sc-1utfzfc-2\"\n})([\"border:1px solid \", \";border-radius:\", \";\"], function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.colors.greyLightest;\n}, function (_ref10) {\n  var theme = _ref10.theme;\n  return theme.borderRadius.normal;\n});\nvar options = [{\n  ref: 'reports',\n  title: 'In Depth Reports',\n  tooltip: 'The best available reporting for Depop Sellers.'\n}, {\n  ref: 'saveCSV',\n  title: \"Saving of CSV's\",\n  tooltip: 'The ability to upload and save your sales.'\n}, {\n  ref: 'feeCalculator',\n  title: 'Depop Fee Calculator',\n  tooltip: 'Automatically calculate at what price to list your items.'\n}, {\n  ref: 'salesDashboard',\n  title: 'Sales Dashboard',\n  tooltip: 'A quick overview of all sales and revenue.'\n}, {\n  ref: 'featureRich',\n  title: 'Way more features!',\n  tooltip: 'Additional charts, maps, and graphs to better analyze your sale trends.'\n}, {\n  ref: 'dateComparison',\n  title: 'Date Comparison',\n  tooltip: 'Ever wonder how last month compared to this month? Wonder no more.'\n}, {\n  ref: 'exclusiveAccess',\n  title: 'Exclusive Access',\n  tooltip: 'Lots of features are in the works and will be released sporadically.'\n}, {\n  ref: 'monthlyFeatures',\n  title: 'Monthly Feature Releases',\n  tooltip: 'Every month at least one new feature will be released.'\n}];\nvar tiers = [{\n  title: 'Basic',\n  type: 'basic',\n  icon: 'home',\n  price: 'Totally Free',\n  saveCSV: true,\n  feeCalculator: true,\n  salesDashboard: true,\n  reports: true,\n  featureRich: false,\n  dateComparison: false,\n  exclusiveAccess: false,\n  monthlyFeatures: false\n}, {\n  title: 'Premium',\n  type: 'premium',\n  icon: 'diamond',\n  price: '$14.99 / month',\n  saveCSV: true,\n  feeCalculator: true,\n  salesDashboard: true,\n  reports: true,\n  featureRich: true,\n  dateComparison: true,\n  exclusiveAccess: true,\n  monthlyFeatures: true\n}];","map":null,"metadata":{},"sourceType":"module"}