{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-firebase/packages/mepop-next/src/styles/elements/Tooltip/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as Tippy } from 'react-tippy'; // @component\n\nexport const Tooltip = (_ref) => {\n  let {\n    title,\n    size\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"size\"]);\n\n  const html = title ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 24\n    }\n  }, title) : rest.html;\n  return __jsx(Tippy, _extends({\n    html: html,\n    size: size\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\nTooltip.propTypes = {\n  position: PropTypes.oneOf(['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'])\n};\nTooltip.defaultProps = {\n  arrow: true,\n  arrowSize: 'small'\n};\nexport default Tooltip;","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-firebase/packages/mepop-next/src/styles/elements/Tooltip/index.js"],"names":["React","PropTypes","Tooltip","Tippy","title","size","rest","html","propTypes","position","oneOf","defaultProps","arrow","arrowSize"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAO,IAAIC,KAApB,QAAiC,aAAjC,C,CAEA;;AACA,OAAO,MAAMD,OAAO,GAAG,UAA8B;AAAA,MAA7B;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA6B;AAAA,MAAXC,IAAW;;AACnD,QAAMC,IAAI,GAAGH,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAN,CAAH,GAAwBE,IAAI,CAACC,IAA/C;AACA,SACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,IAAI,EAAEF;AAFR,KAGMC,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CATM;AAWPJ,OAAO,CAACM,SAAR,GAAoB;AAClBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,KAAV,CAAgB,CACxB,YADwB,EAExB,MAFwB,EAGxB,UAHwB,EAIxB,WAJwB,EAKxB,KALwB,EAMxB,SANwB,EAOxB,aAPwB,EAQxB,OARwB,EASxB,WATwB,EAUxB,YAVwB,EAWxB,QAXwB,EAYxB,cAZwB,EAaxB,UAbwB,EAcxB,MAdwB,EAexB,YAfwB,CAAhB;AADQ,CAApB;AAmBAR,OAAO,CAACS,YAAR,GAAuB;AACrBC,EAAAA,KAAK,EAAE,IADc;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAvB;AAKA,eAAeX,OAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Tooltip as Tippy } from 'react-tippy'\n\n// @component\nexport const Tooltip = ({ title, size, ...rest }) => {\n  const html = title ? <div>{title}</div> : rest.html\n  return (\n    <Tippy\n      html={html}\n      size={size}\n      {...rest}\n    />\n  )\n}\n\nTooltip.propTypes = {\n  position: PropTypes.oneOf([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start'\n  ])\n}\nTooltip.defaultProps = {\n  arrow: true,\n  arrowSize: 'small'\n}\n\nexport default Tooltip\n"]},"metadata":{},"sourceType":"module"}