{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Flex } from 'rebass';\nimport SelectInput from 'react-dropdown-select';\nimport { Select as RebassSelect } from '@rebass/forms';\nimport Box from '../../layout/Box';\nimport Label from '../Form/Label';\nimport styled from 'styled-components';\n\nvar Select = function Select(_ref) {\n  var options = _ref.options,\n      _ref$labelField = _ref.labelField,\n      labelField = _ref$labelField === void 0 ? 'label' : _ref$labelField,\n      _ref$valueField = _ref.valueField,\n      valueField = _ref$valueField === void 0 ? 'value' : _ref$valueField,\n      onChange = _ref.onChange,\n      rebass = _ref.rebass,\n      label = _ref.label,\n      _ref$selectProps = _ref.selectProps,\n      selectProps = _ref$selectProps === void 0 ? {\n    style: {}\n  } : _ref$selectProps,\n      props = _objectWithoutProperties(_ref, [\"options\", \"labelField\", \"valueField\", \"onChange\", \"rebass\", \"label\", \"selectProps\"]);\n\n  return __jsx(React.Fragment, null, rebass ? __jsx(Box, null, label ? __jsx(Label, {\n    label: label,\n    fontWeight: 500 // color={!labelIsShown ? 'transparent' : null}\n\n  }) : null, __jsx(StyledSelect, _extends({}, props, {\n    onChange: onChange\n  }), options.map(function (opt, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: JSON.stringify({\n        value: opt[valueField],\n        label: opt[labelField]\n      })\n    }, opt[labelField]);\n  }))) : __jsx(Flex, props, __jsx(SelectInput, _extends({\n    options: options,\n    onChange: onChange\n  }, selectProps, {\n    style: _objectSpread(_objectSpread({}, selectProps.style), {}, {\n      fontWeight: 500,\n      fontSize: '15px',\n      minWidth: '50px'\n    })\n  }))));\n};\n\nexport default Select;\nvar StyledSelect = styled(RebassSelect).withConfig({\n  displayName: \"Select__StyledSelect\",\n  componentId: \"at60a0-0\"\n})([\"border-radius:\", \";border-color:\", \" !important;color:\", \" !important;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.borderRadius.normal;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.greyDisabled;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.primary;\n});","map":null,"metadata":{},"sourceType":"module"}