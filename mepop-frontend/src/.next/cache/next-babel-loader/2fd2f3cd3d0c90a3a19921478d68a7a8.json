{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\nimport Flex from '../../layout/Flex';\n\nconst ValueBox = (_ref) => {\n  let {\n    title,\n    value = 0,\n    value2,\n    currencyType,\n    noAnimate,\n    float,\n    label1,\n    label2,\n    lessIsGood,\n    hideCompare,\n    string,\n    smallText\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"value\", \"value2\", \"currencyType\", \"noAnimate\", \"float\", \"label1\", \"label2\", \"lessIsGood\", \"hideCompare\", \"string\", \"smallText\"]);\n\n  const biggerValue = value > value2 ? value : value2;\n  const smallerValue = value < value2 ? value : value2;\n  const plusOrMinus = biggerValue === value && !lessIsGood ? 'fa-plus' : 'fa-minus';\n  const caret = biggerValue === value && !lessIsGood ? 'fa-caret-up' : 'fa-caret-down';\n  const diff = biggerValue - smallerValue;\n  const percentChange = Math.round(smallerValue / biggerValue * 100);\n  let color;\n\n  if (value > value2) {\n    color = lessIsGood ? 'bad' : 'good';\n  } else {\n    color = lessIsGood ? 'good' : 'bad';\n  }\n\n  return __jsx(Container, _extends({\n    m: \"10px\"\n  }, rest), __jsx(Title, null, title, !isNaN(percentChange) && !hideCompare ? __jsx(ChangeValue, {\n    good: color === 'good'\n  }, __jsx(\"i\", {\n    className: `fa ${plusOrMinus}`,\n    style: {\n      marginRight: 3,\n      fontSize: 10,\n      marginTop: -1\n    }\n  }), percentChange, \"%\") : null), __jsx(Content, null, __jsx(Value, {\n    smallText: !value2 && !smallText\n  }, currencyType, string ? value : __jsx(CountUp, {\n    decimals: float ? 2 : 0,\n    start: noAnimate ? value : 0,\n    end: float ? parseFloat(value) : typeof value === 'number' ? value : 0\n  })), !isNaN(percentChange) && !hideCompare ? __jsx(ChangeValue, {\n    good: color === 'good'\n  }, __jsx(\"i\", {\n    className: `fa ${caret}`,\n    style: {\n      marginRight: 3,\n      fontSize: 10,\n      marginTop: -1\n    }\n  }), currencyType, diff) : null, __jsx(Labels, null, label1 || null)), label2 ? __jsx(Content, {\n    borderTop: true\n  }, __jsx(Value, null, currencyType, string ? value2 : __jsx(CountUp, {\n    decimals: float ? 2 : 0,\n    start: noAnimate ? value2 : 0,\n    end: float ? parseFloat(value2) : typeof value2 === 'number' ? 100 : 0\n  })), __jsx(Labels, null, label2 || null)) : null);\n};\n\nexport default ValueBox;\nconst Container = styled(Flex).withConfig({\n  displayName: \"ValueBox__Container\",\n  componentId: \"sc-164zygr-0\"\n})([\"background-color:\", \";overflow:auto;border-radius:$border-radius;flex:1 1;box-shadow:\", \";border-radius:\", \";min-height:92px;flex-direction:column;\"], props => props.theme.colors.white, props => props.theme.shadows.normal, props => props.theme.borderRadius.normal);\nconst Content = styled.div.withConfig({\n  displayName: \"ValueBox__Content\",\n  componentId: \"sc-164zygr-1\"\n})([\"padding:5px 10px;text-align:left;font-size:20px;font-weight:\", \";color:\", \";display:flex;justify-content:space-between;border-top:\", \"px solid \", \";}\"], props => props.theme.fontWeights.bold, props => props.theme.colors.primary, props => props.borderTop ? 1 : 0, props => props.theme.colors.greyLightest);\nconst Title = styled.div.withConfig({\n  displayName: \"ValueBox__Title\",\n  componentId: \"sc-164zygr-2\"\n})([\"padding:10px;text-align:left;color:\", \";position:relative;font-weight:\", \";font-size:18px;display:flex;background:\", \";\"], props => props.theme.colors.primary, props => props.theme.fontWeights.medium, props => props.theme.colors.greyLightest);\nconst Labels = styled.div.withConfig({\n  displayName: \"ValueBox__Labels\",\n  componentId: \"sc-164zygr-3\"\n})([\"font-size:15px;display:flex;align-items:center;font-weight:\", \";color:\", \";\"], props => props.theme.fontWeights.medium, props => props.theme.colors.textSubtle);\nconst Value = styled.div.withConfig({\n  displayName: \"ValueBox__Value\",\n  componentId: \"sc-164zygr-4\"\n})([\"font-size:\", \"px;\"], props => props.smallText ? 25 : 20);\nconst ChangeValue = styled.span.withConfig({\n  displayName: \"ValueBox__ChangeValue\",\n  componentId: \"sc-164zygr-5\"\n})([\"margin-left:10px;font-size:15px;display:flex;align-items:center;color:\", \";font-weight:\", \";\"], props => props.good ? props.theme.colors.good : props.theme.colors.bad, props => props.theme.fontWeights.medium);","map":null,"metadata":{},"sourceType":"module"}