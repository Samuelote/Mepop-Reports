{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Table/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Column, Table as TableComp } from 'react-virtualized'; // https://github.com/bvaughn/react-virtualized\n\nimport Card from '../Card';\nimport theme from '../../../theme';\n\nvar Table = function Table(props) {\n  var data = props.data,\n      columnLabels = props.columnLabels,\n      tableHeight = props.tableHeight,\n      tableWidth = props.tableWidth,\n      handleRowClick = props.handleRowClick,\n      background = props.background,\n      activeRow = props.activeRow;\n  return __jsx(Card, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), __jsx(TableComp, {\n    width: tableWidth || 250,\n    height: tableHeight || 280,\n    headerHeight: 20,\n    rowWidth: \"100%\",\n    rowHeight: 30,\n    onRowClick: handleRowClick,\n    rowStyle: function rowStyle(_ref) {\n      var index = _ref.index;\n      return _rowStyle({\n        handleRowClick: handleRowClick,\n        index: index\n      }, activeRow);\n    },\n    rowCount: data.length,\n    rowGetter: function rowGetter(_ref2) {\n      var index = _ref2.index;\n      return data[index];\n    },\n    style: {\n      willChange: 'auto',\n      width: '100%',\n      height: props.height,\n      background: background || theme.colors.mainBg,\n      borderRadius: theme.borderRadius.normal,\n      transition: '.2s'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, columnLabels.map(function (label, i) {\n    return __jsx(Column, {\n      key: label + i,\n      label: label,\n      dataKey: [label],\n      cellDataGetter: function cellDataGetter(_ref3) {\n        var rowData = _ref3.rowData;\n        return rowData[label];\n      },\n      width: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\n_c = Table;\nexport default Table;\nTable.propTypes = {\n  tableHeight: PropTypes.number,\n  // specificies table height\n  tableWidth: PropTypes.number,\n  height: PropTypes.string,\n  // specificies card height\n  width: PropTypes.string,\n  data: PropTypes.array,\n  columnLabels: PropTypes.array // There's a lot more potentially because of rebass's styling system that we pass to\n  // the card wrapper, but that'll do for now.\n\n};\n\nvar _rowStyle = function _rowStyle(props, activeRow) {\n  return {\n    cursor: props.handleRowClick ? 'pointer' : 'default',\n    color: activeRow === props.index && props.index !== -1 ? theme.colors.mainBg : theme.colors.textGrey,\n    background: activeRow === props.index && props.index !== -1 ? theme.colors.teal : props.index % 2 === 0 ? theme.colors.greyLight2 : theme.colors.mainBg\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/styles/elements/Table/index.js"],"names":["React","PropTypes","Column","Table","TableComp","Card","theme","props","data","columnLabels","tableHeight","tableWidth","handleRowClick","background","activeRow","index","rowStyle","length","willChange","width","height","colors","mainBg","borderRadius","normal","transition","map","label","i","rowData","propTypes","number","string","array","cursor","color","textGrey","teal","greyLight2"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Column, Table as TableComp } from 'react-virtualized' // https://github.com/bvaughn/react-virtualized\nimport Card from '../Card'\nimport theme from '../../../theme'\n\nconst Table = (props) => {\n  const { data, columnLabels, tableHeight, tableWidth, handleRowClick, background, activeRow } = props\n  return (\n    <Card {...props}>\n\n      <TableComp\n        width={tableWidth || 250}\n        height={tableHeight || 280}\n        headerHeight={20}\n        rowWidth='100%'\n        rowHeight={30}\n        onRowClick={handleRowClick}\n        rowStyle={({ index }) => rowStyle({ handleRowClick, index }, activeRow)}\n        rowCount={data.length}\n        rowGetter={({ index }) => {\n          return data[index]\n        }}\n        style={{\n          willChange: 'auto',\n          width: '100%',\n          height: props.height,\n          background: background || theme.colors.mainBg,\n          borderRadius: theme.borderRadius.normal,\n          transition: '.2s'\n        }}\n      >\n        {columnLabels.map((label, i) => {\n          return (\n            <Column\n              key={label + i}\n              label={label}\n              dataKey={[label]}\n              cellDataGetter={({ rowData }) => rowData[label]}\n              width={100}\n            />\n          )\n        })}\n      </TableComp>\n    </Card>\n\n  )\n}\nexport default Table\n\nTable.propTypes = {\n  tableHeight: PropTypes.number, // specificies table height\n  tableWidth: PropTypes.number,\n  height: PropTypes.string, // specificies card height\n  width: PropTypes.string,\n  data: PropTypes.array,\n  columnLabels: PropTypes.array\n  // There's a lot more potentially because of rebass's styling system that we pass to\n  // the card wrapper, but that'll do for now.\n}\n\nconst rowStyle = (props, activeRow) => {\n  return (\n    {\n      cursor: props.handleRowClick ? 'pointer' : 'default',\n      color: activeRow === props.index && props.index !== -1 ? theme.colors.mainBg\n        : theme.colors.textGrey,\n      background:\n        activeRow === props.index && props.index !== -1 ? theme.colors.teal\n          : props.index % 2 === 0\n            ? theme.colors.greyLight2\n            : theme.colors.mainBg\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}