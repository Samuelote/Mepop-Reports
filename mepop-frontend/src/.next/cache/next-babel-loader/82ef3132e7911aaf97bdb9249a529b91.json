{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { Field } from 'formik';\nimport Label from './Label';\nimport Box from '../../layout/Box';\nimport styled from 'styled-components';\n\nconst Input = (_ref) => {\n  let {\n    htmlfor,\n    label,\n    showLabelAtStart\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"htmlfor\", \"label\", \"showLabelAtStart\"]);\n\n  const {\n    0: labelIsShown,\n    1: showLabel\n  } = useState(showLabelAtStart);\n\n  const handleLabel = e => {\n    if (e.target.value && !labelIsShown) showLabel(true);else if (!e.target.value && labelIsShown) showLabel(false);\n    if (rest.onChange) rest.onChange(e);\n  };\n\n  return __jsx(Box, null, __jsx(Label, {\n    htmlfor: htmlfor,\n    label: label,\n    color: !labelIsShown ? 'transparent' : null\n  }), __jsx(StyleInput, _extends({}, rest, {\n    onChange: handleLabel\n  })));\n};\n\nexport default Input;\nconst StyleInput = styled(Field).withConfig({\n  displayName: \"Field__StyleInput\",\n  componentId: \"sc-1s27wra-0\"\n})([\"background:\", \";border:none;height:35px;padding-left:15px;color:\", \";font-size:15px;font-weight:600;\"], ({\n  theme\n}) => theme.colors.greyDisabled, ({\n  theme\n}) => theme.colors.primary);","map":null,"metadata":{},"sourceType":"module"}