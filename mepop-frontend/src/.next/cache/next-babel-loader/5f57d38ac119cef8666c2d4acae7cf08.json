{"ast":null,"code":"import { readString } from 'react-papaparse';\nimport axios from 'axios';\nimport { headers } from '../../assets/exampleBuyers';\nimport firebase from 'firebase';\nexport var getFileMethod = function getFileMethod(auth, storage, resolve) {\n  var UID = auth.currentUser.uid;\n  var storageRef = storage.ref(\"\".concat(UID));\n  storageRef.listAll().then(function (_ref) {\n    var items = _ref.items;\n    var getDownloadPromises = [];\n    items.forEach(function (fileRef, i) {\n      // pushes promises to resolve synchronously\n      getDownloadPromises.push(fileRef.getDownloadURL());\n    });\n    var calls = []; // resolves getting the download URL's then pushes axios call to calls array\n\n    Promise.all(getDownloadPromises).then(function (responses) {\n      responses.forEach(function (url) {\n        calls.push(axios.get(url));\n      }); // resolves all calls in calls array and then sets up new state array for component\n\n      axios.all(calls).then(axios.spread(function () {\n        var newData = [];\n\n        for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n          responses[_key] = arguments[_key];\n        }\n\n        responses.forEach(function (res, j) {\n          newData.push({\n            content: res.data,\n            filename: items[j].name\n          });\n        });\n        resolve(newData);\n      }))[\"catch\"](function (err) {\n        resolve([]);\n        console.log(err);\n        window.alert('Error occurred while retreiving files. Try again');\n      });\n    })[\"catch\"](function () {\n      resolve();\n      console.error('Error Occurred');\n      window.alert('Error Occurred');\n    });\n  })[\"catch\"](function () {\n    resolve();\n    console.error('Error Occurred');\n    window.alert('Error Occurred');\n  });\n};\nexport var deleteFileMethod = function deleteFileMethod(auth, storage, filename, fetchFiles) {\n  var UID = auth.currentUser.uid;\n  var storageRef = storage.ref(\"\".concat(UID, \"/\").concat(filename));\n  storageRef[\"delete\"]().then(function () {\n    fetchFiles();\n  })[\"catch\"](function (err) {\n    console.log(err);\n    window.alert(err.message);\n  });\n};\nexport var uploadFilesMethod = function uploadFilesMethod(auth, storage, files, fetchFiles, err) {\n  var rejectedFiles = []; // upload accepted files to firebase\n\n  var UID = auth.currentUser.uid;\n  var counter = 0;\n  files.forEach(function (file, i) {\n    var fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    fileReader.onloadend = function () {\n      // converts CSV's data to string\n      if (readString(fileReader.result).errors.length) {\n        rejectedFiles.push(file.name);\n        counter++;\n      } else {\n        var rows = readString(fileReader.result).data;\n        counter++;\n\n        if (rows[0].length !== 22) {\n          // checks row length for length of 22\n          rejectedFiles.push(file.name);\n        } else if (JSON.stringify(rows[0]) !== JSON.stringify(headers)) {\n          // Compares Depop headers to first row of file\n          rejectedFiles.push(file.name);\n        } else {\n          // File passed all tests so it's upload time now...\n          var storageRef = storage.ref(\"\".concat(UID, \"/\").concat(file.name));\n          var uploadTask = storageRef.put(file);\n          uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n            switch (snapshot.state) {\n              case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n\n              case firebase.storage.TaskState.RUNNING:\n                // console.log('Upload is running')\n                break;\n            }\n          }, function (error) {\n            switch (error.code) {\n              case 'storage/unauthorized':\n                window.alert(\"You don't have permission to execute this action.\");\n                break;\n\n              case 'storage/canceled':\n                window.alert('Unknown Error. Operation canceled');\n                break;\n\n              case 'storage/unknown':\n                window.alert('Unknown Error');\n                break;\n            }\n          }, function () {\n            if (counter === files.length) {\n              fetchFiles();\n            }\n          });\n        }\n\n        if (i === files.length - 1) {\n          if (rejectedFiles.length) {\n            err(\"The following files were not processed because they are not Depop files: \".concat(rejectedFiles.join(', '), \". If this seems to be an error, please contact samote.wood@gmail.com for support.\"));\n          }\n        }\n      }\n    };\n  });\n};","map":{"version":3,"sources":["/Users/samuelwood/development/test/mepop-next/src/firebase/methods/files.js"],"names":["readString","axios","headers","firebase","getFileMethod","auth","storage","resolve","UID","currentUser","uid","storageRef","ref","listAll","then","items","getDownloadPromises","forEach","fileRef","i","push","getDownloadURL","calls","Promise","all","responses","url","get","spread","newData","res","j","content","data","filename","name","err","console","log","window","alert","error","deleteFileMethod","fetchFiles","message","uploadFilesMethod","files","rejectedFiles","counter","file","fileReader","FileReader","readAsText","onloadend","result","errors","length","rows","JSON","stringify","uploadTask","put","on","TaskEvent","STATE_CHANGED","snapshot","state","TaskState","PAUSED","RUNNING","code","join"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,EAA4B;AACvD,MAAMC,GAAG,GAAGH,IAAI,CAACI,WAAL,CAAiBC,GAA7B;AACA,MAAMC,UAAU,GAAGL,OAAO,CAACM,GAAR,WAAeJ,GAAf,EAAnB;AAEAG,EAAAA,UAAU,CAACE,OAAX,GAAqBC,IAArB,CAA0B,gBAAe;AAAA,QAAZC,KAAY,QAAZA,KAAY;AACvC,QAAMC,mBAAmB,GAAG,EAA5B;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAC5B;AACAH,MAAAA,mBAAmB,CAACI,IAApB,CAAyBF,OAAO,CAACG,cAAR,EAAzB;AACD,KAHD;AAKA,QAAMC,KAAK,GAAG,EAAd,CAPuC,CAQvC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,mBAAZ,EAAiCF,IAAjC,CAAsC,UAACW,SAAD,EAAe;AACnDA,MAAAA,SAAS,CAACR,OAAV,CAAkB,UAACS,GAAD,EAAS;AACzBJ,QAAAA,KAAK,CAACF,IAAN,CAAWnB,KAAK,CAAC0B,GAAN,CAAUD,GAAV,CAAX;AACD,OAFD,EADmD,CAInD;;AACAzB,MAAAA,KAAK,CAACuB,GAAN,CAAUF,KAAV,EAAiBR,IAAjB,CAAsBb,KAAK,CAAC2B,MAAN,CAAa,YAAkB;AACnD,YAAMC,OAAO,GAAG,EAAhB;;AADmD,0CAAdJ,SAAc;AAAdA,UAAAA,SAAc;AAAA;;AAEnDA,QAAAA,SAAS,CAACR,OAAV,CAAkB,UAACa,GAAD,EAAMC,CAAN,EAAY;AAC5BF,UAAAA,OAAO,CAACT,IAAR,CAAa;AAAEY,YAAAA,OAAO,EAAEF,GAAG,CAACG,IAAf;AAAqBC,YAAAA,QAAQ,EAAEnB,KAAK,CAACgB,CAAD,CAAL,CAASI;AAAxC,WAAb;AACD,SAFD;AAGA5B,QAAAA,OAAO,CAACsB,OAAD,CAAP;AACD,OANqB,CAAtB,WAOS,UAACO,GAAD,EAAS;AACd7B,QAAAA,OAAO,CAAC,EAAD,CAAP;AACA8B,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,QAAAA,MAAM,CAACC,KAAP,CAAa,kDAAb;AACD,OAXH;AAYD,KAjBD,WAkBS,YAAM;AACXjC,MAAAA,OAAO;AACP8B,MAAAA,OAAO,CAACI,KAAR,CAAc,gBAAd;AACAF,MAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACD,KAtBH;AAuBD,GAhCD,WAiCS,YAAM;AACXjC,IAAAA,OAAO;AACP8B,IAAAA,OAAO,CAACI,KAAR,CAAc,gBAAd;AACAF,IAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACD,GArCH;AAsCD,CA1CM;AA4CP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACrC,IAAD,EAAOC,OAAP,EAAgB4B,QAAhB,EAA0BS,UAA1B,EAAyC;AACvE,MAAMnC,GAAG,GAAGH,IAAI,CAACI,WAAL,CAAiBC,GAA7B;AACA,MAAMC,UAAU,GAAGL,OAAO,CAACM,GAAR,WAAeJ,GAAf,cAAsB0B,QAAtB,EAAnB;AAEAvB,EAAAA,UAAU,UAAV,GAAoBG,IAApB,CAAyB,YAAM;AAC7B6B,IAAAA,UAAU;AACX,GAFD,WAES,UAACP,GAAD,EAAS;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,IAAAA,MAAM,CAACC,KAAP,CAAaJ,GAAG,CAACQ,OAAjB;AACD,GALD;AAMD,CAVM;AAYP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxC,IAAD,EAAOC,OAAP,EAAgBwC,KAAhB,EAAuBH,UAAvB,EAAmCP,GAAnC,EAA2C;AAC1E,MAAMW,aAAa,GAAG,EAAtB,CAD0E,CAG1E;;AACA,MAAMvC,GAAG,GAAGH,IAAI,CAACI,WAAL,CAAiBC,GAA7B;AACA,MAAIsC,OAAO,GAAG,CAAd;AACAF,EAAAA,KAAK,CAAC7B,OAAN,CAAc,UAACgC,IAAD,EAAO9B,CAAP,EAAa;AACzB,QAAM+B,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,UAAX,CAAsBH,IAAtB;;AAEAC,IAAAA,UAAU,CAACG,SAAX,GAAuB,YAAM;AAC3B;AACA,UAAIrD,UAAU,CAACkD,UAAU,CAACI,MAAZ,CAAV,CAA8BC,MAA9B,CAAqCC,MAAzC,EAAiD;AAC/CT,QAAAA,aAAa,CAAC3B,IAAd,CAAmB6B,IAAI,CAACd,IAAxB;AACAa,QAAAA,OAAO;AACR,OAHD,MAGO;AACL,YAAMS,IAAI,GAAGzD,UAAU,CAACkD,UAAU,CAACI,MAAZ,CAAV,CAA8BrB,IAA3C;AACAe,QAAAA,OAAO;;AAEP,YAAIS,IAAI,CAAC,CAAD,CAAJ,CAAQD,MAAR,KAAmB,EAAvB,EAA2B;AACzB;AACAT,UAAAA,aAAa,CAAC3B,IAAd,CAAmB6B,IAAI,CAACd,IAAxB;AACD,SAHD,MAGO,IAAIuB,IAAI,CAACC,SAAL,CAAeF,IAAI,CAAC,CAAD,CAAnB,MAA4BC,IAAI,CAACC,SAAL,CAAezD,OAAf,CAAhC,EAAyD;AAC9D;AACA6C,UAAAA,aAAa,CAAC3B,IAAd,CAAmB6B,IAAI,CAACd,IAAxB;AACD,SAHM,MAGA;AACL;AACA,cAAMxB,UAAU,GAAGL,OAAO,CAACM,GAAR,WAAeJ,GAAf,cAAsByC,IAAI,CAACd,IAA3B,EAAnB;AACA,cAAMyB,UAAU,GAAGjD,UAAU,CAACkD,GAAX,CAAeZ,IAAf,CAAnB;AAEAW,UAAAA,UAAU,CAACE,EAAX,CAAc3D,QAAQ,CAACG,OAAT,CAAiByD,SAAjB,CAA2BC,aAAzC,EACE,UAACC,QAAD,EAAc;AACZ,oBAAQA,QAAQ,CAACC,KAAjB;AACE,mBAAK/D,QAAQ,CAACG,OAAT,CAAiB6D,SAAjB,CAA2BC,MAAhC;AACE/B,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACF,mBAAKnC,QAAQ,CAACG,OAAT,CAAiB6D,SAAjB,CAA2BE,OAAhC;AACE;AACA;AANJ;AAQD,WAVH,EAUK,UAAC5B,KAAD,EAAW;AACZ,oBAAQA,KAAK,CAAC6B,IAAd;AACE,mBAAK,sBAAL;AACE/B,gBAAAA,MAAM,CAACC,KAAP,CAAa,mDAAb;AACA;;AACF,mBAAK,kBAAL;AACED,gBAAAA,MAAM,CAACC,KAAP,CAAa,mCAAb;AACA;;AACF,mBAAK,iBAAL;AACED,gBAAAA,MAAM,CAACC,KAAP,CAAa,eAAb;AACA;AATJ;AAWD,WAtBH,EAsBK,YAAM;AACP,gBAAIQ,OAAO,KAAKF,KAAK,CAACU,MAAtB,EAA8B;AAC5Bb,cAAAA,UAAU;AACX;AACF,WA1BH;AA2BD;;AACD,YAAIxB,CAAC,KAAK2B,KAAK,CAACU,MAAN,GAAe,CAAzB,EAA4B;AAC1B,cAAIT,aAAa,CAACS,MAAlB,EAA0B;AACxBpB,YAAAA,GAAG,oFAA6EW,aAAa,CAACwB,IAAd,CAAmB,IAAnB,CAA7E,uFAAH;AACD;AACF;AACF;AACF,KAtDD;AAuDD,GA3DD;AA4DD,CAlEM","sourcesContent":["import { readString } from 'react-papaparse'\nimport axios from 'axios'\nimport { headers } from '../../assets/exampleBuyers'\nimport firebase from 'firebase'\n\nexport const getFileMethod = (auth, storage, resolve) => {\n  const UID = auth.currentUser.uid\n  const storageRef = storage.ref(`${UID}`)\n\n  storageRef.listAll().then(({ items }) => {\n    const getDownloadPromises = []\n    items.forEach((fileRef, i) => {\n      // pushes promises to resolve synchronously\n      getDownloadPromises.push(fileRef.getDownloadURL())\n    })\n\n    const calls = []\n    // resolves getting the download URL's then pushes axios call to calls array\n    Promise.all(getDownloadPromises).then((responses) => {\n      responses.forEach((url) => {\n        calls.push(axios.get(url))\n      })\n      // resolves all calls in calls array and then sets up new state array for component\n      axios.all(calls).then(axios.spread((...responses) => {\n        const newData = []\n        responses.forEach((res, j) => {\n          newData.push({ content: res.data, filename: items[j].name })\n        })\n        resolve(newData)\n      }))\n        .catch((err) => {\n          resolve([])\n          console.log(err)\n          window.alert('Error occurred while retreiving files. Try again')\n        })\n    })\n      .catch(() => {\n        resolve()\n        console.error('Error Occurred')\n        window.alert('Error Occurred')\n      })\n  })\n    .catch(() => {\n      resolve()\n      console.error('Error Occurred')\n      window.alert('Error Occurred')\n    })\n}\n\nexport const deleteFileMethod = (auth, storage, filename, fetchFiles) => {\n  const UID = auth.currentUser.uid\n  const storageRef = storage.ref(`${UID}/${filename}`)\n\n  storageRef.delete().then(() => {\n    fetchFiles()\n  }).catch((err) => {\n    console.log(err)\n    window.alert(err.message)\n  })\n}\n\nexport const uploadFilesMethod = (auth, storage, files, fetchFiles, err) => {\n  const rejectedFiles = []\n\n  // upload accepted files to firebase\n  const UID = auth.currentUser.uid\n  let counter = 0\n  files.forEach((file, i) => {\n    const fileReader = new FileReader()\n    fileReader.readAsText(file)\n\n    fileReader.onloadend = () => {\n      // converts CSV's data to string\n      if (readString(fileReader.result).errors.length) {\n        rejectedFiles.push(file.name)\n        counter++\n      } else {\n        const rows = readString(fileReader.result).data\n        counter++\n\n        if (rows[0].length !== 22) {\n          // checks row length for length of 22\n          rejectedFiles.push(file.name)\n        } else if (JSON.stringify(rows[0]) !== JSON.stringify(headers)) {\n          // Compares Depop headers to first row of file\n          rejectedFiles.push(file.name)\n        } else {\n          // File passed all tests so it's upload time now...\n          const storageRef = storage.ref(`${UID}/${file.name}`)\n          const uploadTask = storageRef.put(file)\n\n          uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\n            (snapshot) => {\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused')\n                  break\n                case firebase.storage.TaskState.RUNNING:\n                  // console.log('Upload is running')\n                  break\n              }\n            }, (error) => {\n              switch (error.code) {\n                case 'storage/unauthorized':\n                  window.alert(\"You don't have permission to execute this action.\")\n                  break\n                case 'storage/canceled':\n                  window.alert('Unknown Error. Operation canceled')\n                  break\n                case 'storage/unknown':\n                  window.alert('Unknown Error')\n                  break\n              }\n            }, () => {\n              if (counter === files.length) {\n                fetchFiles()\n              }\n            })\n        }\n        if (i === files.length - 1) {\n          if (rejectedFiles.length) {\n            err(`The following files were not processed because they are not Depop files: ${rejectedFiles.join(', ')}. If this seems to be an error, please contact samote.wood@gmail.com for support.`)\n          }\n        }\n      }\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}