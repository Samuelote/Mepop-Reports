{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { withFirebase } from '../../firebase';\nimport Flex from '../../styles/layout/Flex';\nimport Card from '../../styles/elements/Card';\nimport Input from '../../styles/elements/Input';\nimport Form from '../../styles/elements/Form';\nimport Button from '../../styles/elements/Button';\nimport Text from '../../styles/elements/Text';\nimport VertDivider from '../../styles/elements/VertDivider';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_USER, TOGGLE_LOADING } from '../../store/generalReducer';\nimport { fetchFiles } from '../../store/actions/files';\nimport { useRouter } from 'next/router';\nimport LearnMore from './LearnMore';\nimport ForgotPass from './ForgotPass';\nvar Login = withFirebase(function (_ref) {\n  var firebase = _ref.firebase;\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      user = _useSelector.user;\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    email: 'samote.wood@gmail.com',\n    password: '83815Mso'\n  }),\n      form = _useState[0],\n      updateForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      modalIsOpen = _useState3[0],\n      openModal = _useState3[1];\n\n  var _useState4 = useState(''),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var noUser = JSON.stringify(user) === '{}';\n  useEffect(function () {\n    if (!noUser) {\n      router.push('/dashboard');\n    }\n  }, []);\n\n  var login = function login() {\n    setLoading(true);\n    setError('');\n    firebase.doSignIn(form.email, form.password).then(function (_ref2) {\n      var user = _ref2.user;\n      router.push({\n        pathname: '/dashboard'\n      });\n      dispatch({\n        type: UPDATE_USER,\n        payload: user\n      });\n      dispatch({\n        type: TOGGLE_LOADING,\n        payload: true\n      });\n      fetchFiles({\n        firebase: firebase,\n        dispatch: dispatch\n      }, function () {\n        // after fetching files do this\n        dispatch({\n          type: TOGGLE_LOADING,\n          payload: false\n        });\n      });\n    })[\"catch\"](function (err) {\n      setError(translateError(err));\n      setLoading(false);\n    });\n  };\n\n  if (!noUser) return null;\n  return __jsx(Flex, {\n    alignItems: \"center\",\n    width: [1],\n    maxWidth: \"1200px\"\n  }, __jsx(ForgotPass, {\n    modalIsOpen: modalIsOpen,\n    onRequestClose: function onRequestClose() {\n      return openModal(false);\n    },\n    email: form.email\n  }), __jsx(Card, {\n    p: 30,\n    pr: \"0px\",\n    justifyContent: \"flex-start\",\n    width: [1]\n  }, __jsx(Text, {\n    fontSize: 30,\n    fontWeight: 600,\n    color: \"primary\",\n    width: [1],\n    mb: 2\n  }, __jsx(\"i\", null, \"Mepop Reports\")), __jsx(Text, {\n    fontSize: 18,\n    fontWeight: 500,\n    color: \"greyDark\",\n    width: [1],\n    mb: 20\n  }, \"A tool for Depop sellers.\"), __jsx(Flex, {\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        flexDirection: 'column'\n      }\n    }\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        paddingRight: '20px !important',\n        zIndex: 2\n      }\n    }\n  }, __jsx(Form, null, __jsx(Text, {\n    fontSize: \"14px\",\n    color: \"depopRed\"\n  }, error), __jsx(Flex, {\n    mb: \"15px\"\n  }, __jsx(Input, {\n    placeholder: \"Email\",\n    label: \"Email\",\n    bg: \"greyDisabled\",\n    type: \"email\",\n    borderRadius: \"4px\",\n    color: \"white\",\n    value: form.email,\n    onKeyPress: function onKeyPress(e) {\n      return e.key === 'Enter' ? login() : null;\n    },\n    onChange: function onChange(e) {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        email: e.target.value\n      }));\n    }\n  })), __jsx(Input, {\n    placeholder: \"Password\",\n    label: \"Password\",\n    bg: \"greyDisabled\",\n    type: \"password\",\n    borderRadius: \"4px\",\n    color: \"white\",\n    value: form.password,\n    onKeyPress: function onKeyPress(e) {\n      return e.key === 'Enter' ? login() : null;\n    },\n    onChange: function onChange(e) {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        password: e.target.value\n      }));\n    }\n  }), __jsx(Button, {\n    m: \"2px\",\n    isLoading: isLoading,\n    type: \"button\",\n    width: [1],\n    mt: \"30px\",\n    height: \"40px\",\n    onClick: login\n  }, \"Sign In\")), __jsx(Button, {\n    mt: \"10px\",\n    fontSize: \"13px\",\n    bg: \"transparent\",\n    color: \"greyDarkest\",\n    width: \"135px\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\",\n    p: \"0px\",\n    pl: \"1px\",\n    height: \"15px\",\n    type: \"button\",\n    onClick: function onClick() {\n      return openModal(!modalIsOpen);\n    }\n  }, \"Forgot Password\")), __jsx(Flex, {\n    m: \"0px 0px 0px 30px\",\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        display: 'none'\n      }\n    }\n  }, __jsx(VertDivider, null)), __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        marginTop: '20px'\n      }\n    }\n  }, __jsx(LearnMore, null)))));\n});\nexport default Login;\n\nvar translateError = function translateError(err) {\n  switch (err.code) {\n    case 'auth/invalid-email':\n      return 'Invalid email';\n\n    case 'auth/user-disabled':\n      return 'Account temporarily disabled. Please email samote.wood@gmail.com for support.';\n\n    case 'auth/user-not-found':\n      return 'No account found with this email.';\n\n    case 'auth/wrong-password':\n      return 'Please verify password and try again.';\n\n    case 'auth/email-already-in-use':\n      return 'An account associated with this email already exists. Try logging in.';\n\n    case 'auth/operation-not-allowed':\n      return 'Error Occurred. Please email samote.wood@gmail.com for support';\n\n    case 'auth/weak-password':\n      return err.message;\n\n    default:\n      return err.message;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}