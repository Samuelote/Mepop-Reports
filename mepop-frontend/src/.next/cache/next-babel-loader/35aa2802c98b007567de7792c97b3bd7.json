{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/SalesByDate/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useState, useMemo } from 'react';\nimport moment from 'moment';\nimport Barchart from '../../../styles/reporting/BarChart';\nimport { groupByDate } from '../util/grouping';\nvar SalesByDate = memo(_c = _s(function (_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(false),\n      allDates = _useState[0],\n      showAllDates = _useState[1];\n\n  var soldDatesData = useMemo(function () {\n    return groupByDate(data);\n  }, [data]);\n  var allDatesData = useMemo(function () {\n    return groupByDate(data, true);\n  }, [data]);\n  var switchDisable = soldDatesData.length === allDatesData.length;\n  return __jsx(Barchart, {\n    hideLegend: true,\n    minHeight: \"450px\",\n    headerContent: \"Sales by date\",\n    data: allDates ? allDatesData : soldDatesData,\n    xdataKey: \"Date Sold\",\n    bars: [{\n      dataKey: 'Items Sold',\n      size: 70,\n      color: 'pastelGreen'\n    }],\n    tickFormatter: formatXAxis,\n    labelFormatter: formatTooltip,\n    switchLabel: switchDisable ? null : 'Show dates with no sales',\n    switchCheck: allDates,\n    switchEvent: function switchEvent() {\n      return showAllDates(!allDates);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n}, \"VyuUgNx9eFbTQeN579uh9h0A+0c=\"));\n_c2 = SalesByDate;\nexport default SalesByDate;\n\nvar formatXAxis = function formatXAxis(tickItem) {\n  return moment(tickItem, 'MM/DD/YYYY').format('M/D');\n};\n\nvar formatTooltip = function formatTooltip(tickItem) {\n  return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY');\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SalesByDate$memo\");\n$RefreshReg$(_c2, \"SalesByDate\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/SalesByDate/index.js"],"names":["memo","useState","useMemo","moment","Barchart","groupByDate","SalesByDate","data","allDates","showAllDates","soldDatesData","allDatesData","switchDisable","length","dataKey","size","color","formatXAxis","formatTooltip","tickItem","format"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,WAAW,GAAGN,IAAI,SAAC,gBAAc;AAAA;;AAAA,MAAXO,IAAW,QAAXA,IAAW;;AAAA,kBACJN,QAAQ,CAAC,KAAD,CADJ;AAAA,MAC9BO,QAD8B;AAAA,MACpBC,YADoB;;AAErC,MAAMC,aAAa,GAAGR,OAAO,CAAC;AAAA,WAAMG,WAAW,CAACE,IAAD,CAAjB;AAAA,GAAD,EAA0B,CAACA,IAAD,CAA1B,CAA7B;AACA,MAAMI,YAAY,GAAGT,OAAO,CAAC;AAAA,WAAMG,WAAW,CAACE,IAAD,EAAO,IAAP,CAAjB;AAAA,GAAD,EAAgC,CAACA,IAAD,CAAhC,CAA5B;AACA,MAAMK,aAAa,GAAGF,aAAa,CAACG,MAAd,KAAyBF,YAAY,CAACE,MAA5D;AACA,SACE,MAAC,QAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,aAAa,EAAC,eAHhB;AAIE,IAAA,IAAI,EAAEL,QAAQ,GAAGG,YAAH,GAAkBD,aAJlC;AAKE,IAAA,QAAQ,EAAC,WALX;AAME,IAAA,IAAI,EAAE,CACJ;AAAEI,MAAAA,OAAO,EAAE,YAAX;AAAyBC,MAAAA,IAAI,EAAE,EAA/B;AAAmCC,MAAAA,KAAK,EAAE;AAA1C,KADI,CANR;AASE,IAAA,aAAa,EAAEC,WATjB;AAUE,IAAA,cAAc,EAAEC,aAVlB;AAWE,IAAA,WAAW,EAAEN,aAAa,GAAG,IAAH,GAAU,0BAXtC;AAYE,IAAA,WAAW,EAAEJ,QAZf;AAaE,IAAA,WAAW,EAAE;AAAA,aAAMC,YAAY,CAAC,CAACD,QAAF,CAAlB;AAAA,KAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiBD,CAtBuB,kCAAxB;MAAMF,W;AAwBN,eAAgBA,WAAhB;;AAEA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACE,QAAD,EAAc;AAAE,SAAOhB,MAAM,CAACgB,QAAD,EAAW,YAAX,CAAN,CAA+BC,MAA/B,CAAsC,KAAtC,CAAP;AAAqD,CAAzF;;AACA,IAAMF,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAAE,SAAOhB,MAAM,CAACgB,QAAD,EAAW,YAAX,CAAN,CAA+BC,MAA/B,CAAsC,aAAtC,CAAP;AAA6D,CAAnG","sourcesContent":["import { memo, useState, useMemo } from 'react'\nimport moment from 'moment'\n\nimport Barchart from '../../../styles/reporting/BarChart'\n\nimport { groupByDate } from '../util/grouping'\n\nconst SalesByDate = memo(({ data }) => {\n  const [allDates, showAllDates] = useState(false)\n  const soldDatesData = useMemo(() => groupByDate(data), [data])\n  const allDatesData = useMemo(() => groupByDate(data, true), [data])\n  const switchDisable = soldDatesData.length === allDatesData.length\n  return (\n    <Barchart\n      hideLegend\n      minHeight='450px'\n      headerContent='Sales by date'\n      data={allDates ? allDatesData : soldDatesData}\n      xdataKey='Date Sold'\n      bars={[\n        { dataKey: 'Items Sold', size: 70, color: 'pastelGreen' }\n      ]}\n      tickFormatter={formatXAxis}\n      labelFormatter={formatTooltip}\n      switchLabel={switchDisable ? null : 'Show dates with no sales'}\n      switchCheck={allDates}\n      switchEvent={() => showAllDates(!allDates)}\n    />\n  )\n})\n\nexport default (SalesByDate)\n\nconst formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\nconst formatTooltip = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }\n"]},"metadata":{},"sourceType":"module"}