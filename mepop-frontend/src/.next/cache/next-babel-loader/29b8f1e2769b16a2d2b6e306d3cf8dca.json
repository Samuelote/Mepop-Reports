{"ast":null,"code":"import geocodes from '../../../assets/geocodes.json';\nexport const getGeopoints = (allSales, resolve) => {\n  if (!allSales) return;\n  const geocodeRequests = []; // holds addresses that need to be updated\n\n  const newDocObjs = {}; // holds all updated data which will be sent to state\n\n  allSales.sales.forEach((doc, i) => {\n    const sale = allSales.sales[i];\n    const zip = sale.post_code.trim();\n    geocodeRequests.push(zip);\n    newDocObjs[zip] = {\n      sales: newDocObjs[zip] ? [...newDocObjs[zip].sales, allSales.sales[i]] : [allSales.sales[i]],\n      geopoint: {\n        lat: 0,\n        lng: 0\n      },\n      location: {}\n    };\n  });\n\n  if (geocodeRequests.length) {\n    // finds geocode in JSON obj\n    for (let i = 0; i < geocodeRequests.length; i++) {\n      const zip = geocodeRequests[i];\n\n      for (let j = 0; j < geocodes.length; j++) {\n        if (zip === geocodes[j].fields.zip) {\n          newDocObjs[zip].geopoint = {\n            lat: geocodes[j].fields.latitude,\n            lng: geocodes[j].fields.longitude\n          };\n          newDocObjs[zip].location = {\n            city: geocodes[j].fields.city,\n            state: geocodes[j].fields.state,\n            zip: geocodes[j].fields.zip,\n            timezone: geocodes[j].fields.timezone\n          };\n          continue;\n        }\n      }\n    }\n  }\n\n  resolve(newDocObjs);\n};","map":null,"metadata":{},"sourceType":"module"}