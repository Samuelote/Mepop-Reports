{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport theme from '../../../theme';\nimport { ChartWrap } from '../styleUtil';\nimport { transparentize } from 'polished';\n\nconst Areachart = (_ref) => {\n  let {\n    areas,\n    xdataKey,\n    data,\n    onHover,\n    disableAnimation,\n    noToolTip\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"areas\", \"xdataKey\", \"data\", \"onHover\", \"disableAnimation\", \"noToolTip\"]);\n\n  return (// <Card {...props} minWidth='100%'>\n    __jsx(ChartWrap, {\n      noPadding: true,\n      style: {\n        position: 'absolute',\n        bottom: '0px',\n        width: '102%'\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\"\n    }, __jsx(AreaChart, {\n      data: data\n    }, __jsx(\"defs\", null, areas.map(({\n      key,\n      color\n    }, i) => {\n      return __jsx(\"linearGradient\", {\n        key: i,\n        id: key,\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\"\n      }, __jsx(\"stop\", {\n        offset: \"5%\",\n        stopColor: theme.colors[color],\n        stopOpacity: 1\n      }), __jsx(\"stop\", {\n        offset: \"100%\",\n        stopColor: theme.colors[color],\n        stopOpacity: 0\n      }));\n    })), __jsx(XAxis, {\n      dataKey: \"week\",\n      hide: true\n    }), noToolTip ? null : __jsx(Tooltip, {\n      wrapperStyle: onHover ? {\n        visibility: 'hidden'\n      } : null,\n      formatter: onHover,\n      labelFormatter: onHover\n    }), areas.map(({\n      key,\n      color\n    }, i) => {\n      return __jsx(Area, {\n        key: i,\n        type: \"monotone\",\n        isAnimationActive: typeof disableAnimation !== 'boolean',\n        dataKey: key,\n        stroke: transparentize(0.7, theme.colors[color] || theme.colors.primary),\n        fillOpacity: 1,\n        fill: `url(#${key})`\n      });\n    })))) // </Card>\n\n  );\n};\n\nexport default Areachart;","map":null,"metadata":{},"sourceType":"module"}