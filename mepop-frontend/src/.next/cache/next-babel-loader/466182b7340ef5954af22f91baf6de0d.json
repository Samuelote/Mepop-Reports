{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled from 'styled-components';\nimport Flex from '../../layout/Flex';\nimport Switch from '../Switch';\nimport Tooltip from '../Tooltip';\nimport Spinner from '../Loading/Spinner';\nimport BlurShield from '../BlurShield';\n\nconst Card = (_ref) => {\n  let {\n    onClose,\n    headerBorder,\n    switchLabel,\n    switchCheck,\n    switchEvent,\n    switchDisabled,\n    switchDisabledMsg,\n    proOnly\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onClose\", \"headerBorder\", \"switchLabel\", \"switchCheck\", \"switchEvent\", \"switchDisabled\", \"switchDisabledMsg\", \"proOnly\"]);\n\n  return __jsx(Container, _extends({\n    m: \"10px\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }, props), proOnly ? __jsx(BlurShield, proOnly) : __jsx(React.Fragment, null, props.headerContent ? __jsx(Header, {\n    boxShadow: props.boxShadow,\n    border: headerBorder\n  }, props.headerContent, switchLabel || onClose ? __jsx(Tooltip, {\n    disabled: !switchDisabled,\n    title: switchDisabledMsg,\n    hideOnClick: false\n  }, __jsx(Flex, {\n    alignItems: \"center\"\n  }, switchLabel ? __jsx(Switch, {\n    label: switchLabel,\n    checked: switchCheck,\n    onChange: switchEvent,\n    disabled: switchDisabled\n  }) : null, onClose ? __jsx(Button, {\n    onClick: onClose\n  }, __jsx(\"i\", {\n    className: \"fa fa-close\"\n  })) : null)) : null) : null, props.isLoading ? __jsx(LoadingContainer, null, __jsx(Spinner, null)) : __jsx(React.Fragment, null, props.children)));\n};\n\nexport default Card;\nconst Container = styled(Flex).withConfig({\n  displayName: \"Card__Container\",\n  componentId: \"sc-1jyi1qf-0\"\n})([\"  flex:1;border-radius:\", \";background-color:\", \";min-height:\", \"px;position:relative;z-index:1;height:\", \";border-radius:\", \";\", \" &:before{content:\\\"\\\";position:absolute;top:0;bottom:0;left:0;right:0;width:100%;height:100%;box-shadow:\", \";z-index:-1;}\"], props => props.borderRadius ? props.borderRadius : props.theme.borderRadius.normal, props => props.theme.colors[props.background] || props.theme.colors.white, ({\n  minHeight\n}) => minHeight || 150, ({\n  height\n}) => height, props => props.theme.borderRadius.normal, ({\n  isLoading\n}) => isLoading ? `\n    display: flex;\n    flex-direction: column;\n    justify-content:space-between;\n    padding-bottom: 3%;\n  ` : null, props => props.boxShadow !== 'none' ? props.theme.shadows.normal : 'none');\nconst LoadingContainer = styled.div.withConfig({\n  displayName: \"Card__LoadingContainer\",\n  componentId: \"sc-1jyi1qf-1\"\n})([\"position:absolute;top:50%;\"]);\nconst Header = styled.div.withConfig({\n  displayName: \"Card__Header\",\n  componentId: \"sc-1jyi1qf-2\"\n})([\"padding:15px;text-align:left;font-size:14px;text-transform:uppercase;position:relative;display:flex;min-height:40px;display:flex;align-items:center;justify-content:space-between;width:100%;border:\", \" 1px solid;border-bottom:\", \";background-color:\", \";border-top-right-radius:\", \";border-top-left-radius:\", \";\"], ({\n  boxShadow,\n  theme,\n  border\n}) => border || (boxShadow === 'none' ? theme.colors.greyLightest : 'transparent'), ({\n  border,\n  theme\n}) => border || `1px solid ${theme.colors.greyLightest}`, props => props.theme.colors.white, props => props.theme.borderRadius.normal, props => props.theme.borderRadius.normal);\nconst Button = styled.button.withConfig({\n  displayName: \"Card__Button\",\n  componentId: \"sc-1jyi1qf-3\"\n})([\"border:none;background:transparent;cursor:pointer;font-size:20px;color:\", \";transition:.1s;&:hover{color:\", \";}\"], ({\n  theme\n}) => theme.colors.greyDark, ({\n  theme\n}) => theme.colors.black);","map":null,"metadata":{},"sourceType":"module"}