{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, memo } from 'react';\nimport _ from 'lodash';\nimport { useSelector } from 'react-redux';\nimport GoogleMapReact from 'google-map-react';\nimport styled from 'styled-components';\nimport Card from '../../../styles/elements/Card';\nimport Tooltip from '../../../styles/elements/Tooltip';\nimport SalesTable from '../../general/SalesTable';\nimport SaleDetails from '../../general/SaleDetails';\nimport Flex from '../../../styles/layout/Flex';\nimport { getGeopoints } from '../util/geopoints';\nvar SalesMap = memo(function (_ref) {\n  var data = _ref.data,\n      styles = _ref.styles,\n      isBasic = _ref.isBasic;\n\n  var _useState = useState([]),\n      salesToMap = _useState[0],\n      setSalesToMap = _useState[1];\n\n  var _useState2 = useState({}),\n      salesToShow = _useState2[0],\n      setSalesToShow = _useState2[1];\n\n  var _useState3 = useState(null),\n      activeSale = _useState3[0],\n      activateSale = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      googleMapsKey = _useSelector.googleMapsKey;\n\n  var _useState4 = useState([]),\n      geocodes = _useState4[0],\n      setGeocodes = _useState4[1];\n\n  useEffect(function () {\n    getGeopoints(data, function (res) {\n      setGeocodes(res);\n    });\n  }, [data]);\n  useEffect(function () {\n    return setSalesToMap(_.values(geocodes));\n  }, [geocodes]);\n  if (!googleMapsKey) return null;\n  return __jsx(Card, {\n    headerContent: \"Map of Sales (US only)\",\n    proOnly: isBasic ? {\n      component: 'Map of Sales (US only)',\n      img: 'sales-map.png'\n    } : null,\n    height: \"350px\"\n  }, __jsx(Flex, {\n    width: [1, 1, 1, 1]\n  }, __jsx(MapContainer, {\n    mini: salesToShow.sales\n  }, __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: googleMapsKey.key\n    },\n    defaultCenter: {\n      lat: 39,\n      lng: -98\n    },\n    defaultZoom: 0,\n    yesIWantToUseGoogleMapApiInternals: true,\n    gestureHandling: \"cooperative\",\n    options: {\n      gestureHandling: 'cooperative'\n    },\n    minWidth: \"500px\"\n  }, salesToMap.length ? salesToMap.map(function (zip, i) {\n    var _zip$geopoint = zip.geopoint,\n        lat = _zip$geopoint.lat,\n        lng = _zip$geopoint.lng;\n    if (getTitle(zip).includes('undefined')) return null; // this weeds out other countries\n\n    return __jsx(Marker, {\n      setSalesToShow: setSalesToShow,\n      activateSale: activateSale,\n      zip: zip,\n      key: i,\n      lat: lat,\n      lng: lng\n    });\n  }) : null)), salesToShow.sales && !activeSale ? __jsx(SalesTable, {\n    boxShadow: \"none\",\n    m: \"0\",\n    minWidth: \"50%\",\n    data: salesToShow,\n    currencyType: data.currency_type,\n    headerContent: getTitle(salesToShow),\n    handleRowClick: function handleRowClick(row, i) {\n      activateSale(row.rowData);\n    },\n    onClose: function onClose() {\n      return setSalesToShow({});\n    }\n  }) : activeSale ? __jsx(SaleDetails, {\n    chartHeight: 200,\n    currencyType: data.currency_type,\n    boxShadow: \"none\",\n    m: \"0\",\n    minWidth: \"50%\",\n    onClose: function onClose() {\n      return activateSale(null);\n    },\n    row: activeSale,\n    getUrl: data.getUrl\n  }) : null));\n});\nexport default SalesMap;\nvar Marker = memo(function (_ref2) {\n  var zip = _ref2.zip,\n      setSalesToShow = _ref2.setSalesToShow,\n      activateSale = _ref2.activateSale;\n  return __jsx(Tooltip, {\n    offset: 40,\n    title: getTitle(zip),\n    hideOnClick: false\n  }, __jsx(I, {\n    className: \"fa fa-map-marker\",\n    onClick: function onClick() {\n      activateSale(null);\n      setSalesToShow(zip);\n    }\n  }));\n}); // utils\n\nfunction getTitle(_ref3) {\n  var location = _ref3.location,\n      sales = _ref3.sales;\n  var title = \"\".concat(location.city, \", \").concat(location.state, \" \").concat(location.zip, \" - \").concat(sales.length);\n  return title;\n}\n\nvar MapContainer = styled.div.withConfig({\n  displayName: \"SalesMap__MapContainer\",\n  componentId: \"g1nti4-0\"\n})([\"visibility:visible;height:320px;width:100%;background:'black';transition:.2s;display:flex;\"]);\nvar I = styled.i.withConfig({\n  displayName: \"SalesMap__I\",\n  componentId: \"g1nti4-1\"\n})([\"font-size:25px;cursor:pointer;color:\", \";&:hover{color:\", \"}\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.pastelRose;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.red;\n});","map":null,"metadata":{},"sourceType":"module"}