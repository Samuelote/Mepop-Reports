{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Card from '../../styles/elements/Card';\nimport Input from '../../styles/elements/Input';\nimport Select from '../../styles/elements/Select';\nimport Text from '../../styles/elements/Text';\nimport Flex from '../../styles/layout/Flex';\nimport styled from 'styled-components';\nimport { currencies, countries } from './utils';\nvar initVals = {\n  pricePaid: '',\n  listingPrice: '',\n  shipping: '0',\n  depopFee: '10',\n  paypalFee: '2.9',\n  paypalCurrencyFee: '0.30',\n  sellerCountry: {\n    label: 'United States',\n    value: '2.9'\n  },\n  buyerCountry: {\n    label: 'United States',\n    value: '2.9'\n  }\n};\n\nfunction FeeCalculator(props) {\n  // (listing price+shipping-pricepaid) - all fees\n  var _useState = useState(initVals),\n      form = _useState[0],\n      updateForm = _useState[1];\n\n  var updateVal = function updateVal(field) {\n    updateForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, field.target.name, field.target.value)));\n  };\n\n  var handleSelect = function handleSelect(field) {\n    if (field.target.name === 'currency') {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        paypalCurrencyFee: JSON.parse(field.target.value).value\n      }));\n    }\n\n    if (field.target.name === 'sellerCountry' || field.target.name === 'buyerCountry') {\n      var fieldObj = JSON.parse(field.target.value);\n      updateForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, field.target.name, {\n        label: fieldObj.label,\n        value: fieldObj.value\n      })));\n    }\n  };\n\n  useEffect(function () {\n    if (form.sellerCountry.label === form.buyerCountry.label) {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        paypalFee: form.sellerCountry.value\n      }));\n    } else {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        paypalFee: add(form.sellerCountry.value, form.buyerCountry.value)\n      }));\n    }\n  }, [form.sellerCountry, form.buyerCountry]);\n  var totalRevenue = add(form.listingPrice || 0, form.shipping || 0);\n  var paypalFee = getPercent(totalRevenue || 0, form.paypalFee || 0);\n  var depopFee = getPercent(totalRevenue || 0, form.depopFee || 0);\n  var shipping = add(0, form.shipping || 0);\n  var costOfItem = add(0, form.pricePaid || 0);\n  var profit = (parseFloat(totalRevenue) - parseFloat(paypalFee) - parseFloat(depopFee) - parseFloat(shipping) - parseFloat(costOfItem)).toFixed(2);\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: [1]\n  }, __jsx(Card, {\n    p: \"40px\",\n    width: [0.5],\n    minWidth: \"800px\"\n  }, __jsx(Text, {\n    fontWeight: 600,\n    fontSize: \"40px\",\n    mb: \"25px\",\n    color: \"depopRed\"\n  }, \"Depop Fees Calculator\"), __jsx(Flex, {\n    justifyContent: \"space-between\",\n    width: [1]\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    mr: \"10px\"\n  }, __jsx(Input, {\n    label: \"Cost of Item (optional)\",\n    placeholder: \"Cost of Item (optional)\",\n    name: \"pricePaid\",\n    onChange: updateVal,\n    type: \"number\",\n    min: \"0\",\n    max: \"1000\",\n    mb: \"4px\",\n    borderColor: \"greyDisabled\",\n    pl: \"10px\",\n    borderRadius: true\n  }), __jsx(Input, {\n    label: \"Listing Price\",\n    placeholder: \"Item Listing Price\",\n    name: \"listingPrice\",\n    onChange: updateVal,\n    type: \"number\",\n    min: \"0\",\n    max: \"1000\",\n    mb: \"4px\",\n    borderColor: \"greyDisabled\",\n    pl: \"10px\",\n    borderRadius: true\n  }), __jsx(Input, {\n    label: \"Postage/Shipping\",\n    placeholder: \"Postage/Shipping\",\n    name: \"shipping\",\n    onChange: updateVal,\n    type: \"number\",\n    min: \"0\",\n    max: \"1000\",\n    mb: \"4px\",\n    borderColor: \"greyDisabled\",\n    pl: \"10px\",\n    borderRadius: true\n  }), __jsx(Input, {\n    label: \"Depop Fee (%)\",\n    placeholder: \"Depop Fee (%)\",\n    type: \"number\",\n    value: \"10\",\n    disabled: true,\n    mb: \"4px\"\n  }), __jsx(Select, {\n    rebass: true,\n    label: \"Currency\",\n    name: \"currency\",\n    options: currencies,\n    onChange: handleSelect,\n    mb: \"4px\"\n  }), __jsx(Select, {\n    rebass: true,\n    label: \"Seller's Country\",\n    name: \"sellerCountry\",\n    options: countries,\n    onChange: handleSelect,\n    mb: \"4px\"\n  }), __jsx(Select, {\n    rebass: true,\n    label: \"Buyer's Country\",\n    name: \"buyerCountry\",\n    options: countries,\n    onChange: handleSelect,\n    mb: \"4px\"\n  })), __jsx(Flex, {\n    width: [1],\n    ml: \"10px\"\n  }, __jsx(Breakdown, null, __jsx(Text, {\n    textAlign: \"center\",\n    fontWeight: 600,\n    fontSize: 18\n  }, \"Breakdown\"), __jsx(Flex, {\n    mt: \"30px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Total Revenue:\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(Span, null, form.listingPrice ? \"$\".concat(form.listingPrice) : null, form.listingPrice && form.shipping ? ' + ' : null, form.shipping !== '0' ? \" $\".concat(form.shipping, \" \") : null, form.listingPrice || form.shipping !== '0' ? ' = ' : null), __jsx(SpanValue, null, \"$\", totalRevenue))), __jsx(Flex, {\n    mt: \"20px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Depop Fee (\", parseFloat(form.depopFee), \"%):\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", depopFee))), __jsx(Flex, {\n    mt: \"20px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Paypal Fee (\", parseFloat(form.paypalFee), \"%):\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", paypalFee))), __jsx(Flex, {\n    mt: \"20px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Paypal Currency Fee:\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", form.paypalCurrencyFee))), __jsx(Flex, {\n    mt: \"20px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Shipping:\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", shipping))), costOfItem !== '0.00' ? __jsx(Flex, {\n    mt: \"20px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontWeight: 500,\n    fontSize: 17\n  }, \"Cost of Item:\"), __jsx(Text, {\n    fontWeight: 500,\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", costOfItem))) : null, __jsx(Divider, null), __jsx(Flex, {\n    mt: \"30px\",\n    justifyContent: \"space-between\"\n  }, __jsx(Text, {\n    fontSize: 20,\n    fontWeight: 600\n  }, \"Profit:\"), __jsx(Text, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(SpanValue, null, \"$\", profit))))))));\n}\n\nexport default FeeCalculator;\n\nvar add = function add(str1, str2) {\n  return (parseFloat(str1) + parseFloat(str2)).toFixed(2);\n};\n\nvar getPercent = function getPercent(str1, percent) {\n  return (parseFloat(str1) * (parseFloat(percent) / 100)).toFixed(2);\n};\n\nvar Breakdown = styled.div.withConfig({\n  displayName: \"feesCalculator__Breakdown\",\n  componentId: \"sc-1hax10u-0\"\n})([\"width:100%;height:100%;background:\", \";margin-left:20px;border-radius:\", \";padding:15px;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.colors.whiteDark;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.borderRadius.more;\n});\nvar Span = styled.span.withConfig({\n  displayName: \"feesCalculator__Span\",\n  componentId: \"sc-1hax10u-1\"\n})([\"color:\", \";font-size:14px;\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.grey;\n});\nvar SpanValue = styled.span.withConfig({\n  displayName: \"feesCalculator__SpanValue\",\n  componentId: \"sc-1hax10u-2\"\n})([\"margin-left:10px;font-weight:600;font-size:20px;font-weight:\", \";\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.fontWeights.bold;\n});\nvar Divider = styled.div.withConfig({\n  displayName: \"feesCalculator__Divider\",\n  componentId: \"sc-1hax10u-3\"\n})([\"width:100%;height:2px;margin:30px 0px;background:\", \";\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.depopRed;\n});","map":null,"metadata":{},"sourceType":"module"}