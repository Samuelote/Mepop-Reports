{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Label as RebassLabel } from '@rebass/forms';\n\nfunction Label(_ref) {\n  let {\n    label,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"children\"]);\n\n  return __jsx(LabelComponent, rest, label, children);\n}\n\nexport default Label;\nconst LabelComponent = styled(RebassLabel).withConfig({\n  displayName: \"Label__LabelComponent\",\n  componentId: \"sc-12zcarr-0\"\n})([\"display:flex;justify-content:center;flex-direction:column;font-weight:600;font-size:13px;line-height:18px;text-transform:uppercase;transition:color .5s;text-transform:capitalize;user-select:none;color:\", \";\"], props => props.color || props.theme.colors.greyDark);","map":null,"metadata":{},"sourceType":"module"}