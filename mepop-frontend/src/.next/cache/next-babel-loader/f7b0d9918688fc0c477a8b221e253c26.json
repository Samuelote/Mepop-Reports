{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport currency from 'currency.js';\nimport ValueBox from '../../styles/reporting/ValueBox';\nimport Card from '../../styles/elements/Card';\nimport Tooltip from '../../styles/elements/Tooltip';\nimport Text from '../../styles/elements/Text';\nimport RadialChart from '../../styles/reporting/RadialChart';\nimport Flex from '../../styles/layout/Flex';\nimport styled from 'styled-components';\nimport BlurBackground from './BlurBackground';\nimport { useSelector } from 'react-redux';\n\nconst SaleDetails = (_ref) => {\n  let {\n    row,\n    getUrl,\n    onClose,\n    chartHeight,\n    currencyType\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"row\", \"getUrl\", \"onClose\", \"chartHeight\", \"currencyType\"]);\n\n  const {\n    user\n  } = useSelector(state => state.generalReducer);\n  const isBasic = user.membership.type === 'basic';\n  const chartData = [{\n    name: 'Sale Price',\n    value: currency(row['item price']).value,\n    fill: 'green'\n  }, {\n    name: 'Buyer Shipping',\n    value: currency(row['buyer-paid shipping']).value,\n    fill: 'blueLight'\n  }, {\n    name: 'Seller Shipping',\n    value: currency(row['seller-paid shipping']).value,\n    fill: 'bluePastel'\n  }, {\n    name: 'Depop Fees',\n    value: currency(row['depop fees']).value,\n    fill: 'red'\n  }];\n  return __jsx(Card, _extends({\n    minWidth: \"500px\",\n    defaultTooltip: `Sale card - @${row.username}`,\n    headerContent: __jsx(CardTitle, {\n      getUrl: getUrl,\n      row: row,\n      onClose: onClose\n    }),\n    headerBorder: \"none\"\n  }, props), isBasic ? __jsx(BlurBackground, {\n    component: \"Sale Details\"\n  }) : null, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    width: [1],\n    flexWrap: \"wrap\"\n  }, __jsx(ValueBox, {\n    smallText: true,\n    title: \"Date Listed\",\n    string: true,\n    value: row['date listed']\n  }), __jsx(ValueBox, {\n    smallText: true,\n    title: \"Date Sold\",\n    string: true,\n    value: row['date sold']\n  }), __jsx(ValueBox, {\n    smallText: true,\n    title: \"Days In Shop\",\n    value: row['days listed']\n  })), __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1]\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    width: [1],\n    justifyContent: \"center\"\n  }, __jsx(RadialChart, {\n    radius: 60,\n    data: chartData,\n    height: chartHeight\n  }), __jsx(ValueBox, {\n    m: \"0px\",\n    mr: \"4px\",\n    title: \"Item Description\",\n    string: true,\n    value: __jsx(Description, null, row['item description'], __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"strong\", null, \"Buyer:\"), \" \", row.name, __jsx(\"br\", null), __jsx(\"strong\", null, \"Sale Price:\"), \" \", currencyType, currency(row['item price']).value, __jsx(\"br\", null), __jsx(\"strong\", null, \"Buyer-Paid Shipping:\"), \" \", currencyType, currency(row['buyer-paid shipping']).value, __jsx(\"br\", null), __jsx(\"strong\", null, \"Seller-Paid Shipping:\"), \" \", currencyType, currency(row['seller-paid shipping']).value, __jsx(\"br\", null), __jsx(\"strong\", null, \"Depop Fees:\"), \" \", currencyType, currency(row['depop fees']).value, __jsx(\"br\", null), __jsx(\"strong\", null, \"Address:\"), \" \", row.address, __jsx(\"br\", null)),\n    value2: \"-\"\n  }))));\n};\n\nexport default SaleDetails;\n\nconst CardTitle = ({\n  row,\n  getUrl,\n  onClose\n}) => {\n  return __jsx(Flex, {\n    justifyContent: \"space-between\",\n    width: [1],\n    alignItems: \"center\"\n  }, __jsx(Text, null, \"Buyer -\", ' ', __jsx(Tooltip, {\n    title: `Visit ${row.username}'s Shop`\n  }, __jsx(A, {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: getUrl(row.username)\n  }, \"@\", row.username))), onClose ? __jsx(Button, {\n    onClick: onClose\n  }, __jsx(\"i\", {\n    className: \"fa fa-close\"\n  })) : null);\n};\n\nconst A = styled.a.withConfig({\n  displayName: \"SaleDetails__A\",\n  componentId: \"avw6s7-0\"\n})([\"color:\", \";\"], ({\n  theme\n}) => theme.colors.greyDarker);\nconst Description = styled.div.withConfig({\n  displayName: \"SaleDetails__Description\",\n  componentId: \"avw6s7-1\"\n})([\"height:180px;overflow:auto;font-size:15px;font-weight:\", \";\"], ({\n  theme\n}) => theme.fontWeights.regular);\nconst Button = styled.button.withConfig({\n  displayName: \"SaleDetails__Button\",\n  componentId: \"avw6s7-2\"\n})([\"border:none;background:transparent;cursor:pointer;font-size:20px;color:\", \";transition:.1s;&:hover{color:\", \";}\"], ({\n  theme\n}) => theme.colors.greyDark, ({\n  theme\n}) => theme.colors.black);","map":null,"metadata":{},"sourceType":"module"}