{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/signin/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { withFirebase } from '../../firebase';\nimport Flex from '../../styles/layout/Flex';\nimport Card from '../../styles/elements/Card';\nimport Input from '../../styles/elements/Input';\nimport Form from '../../styles/elements/Form';\nimport Button from '../../styles/elements/Button';\nimport Text from '../../styles/elements/Text';\nimport VertDivider from '../../styles/elements/VertDivider';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_USER, TOGGLE_LOADING } from '../../store/generalReducer';\nimport { fetchFiles } from '../../store/actions/files';\nimport { useRouter } from 'next/router';\nimport LearnMore from './LearnMore';\nimport ForgotPass from './ForgotPass';\nconst Login = withFirebase(({\n  firebase\n}) => {\n  const {\n    user\n  } = useSelector(state => state.generalReducer);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: form,\n    1: updateForm\n  } = useState({\n    email: 'samote.wood@gmail.com',\n    password: '83815Mso'\n  });\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalIsOpen,\n    1: openModal\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const noUser = JSON.stringify(user) === '{}';\n  useEffect(() => {\n    if (!noUser) {\n      router.push('/dashboard');\n    }\n  }, []);\n\n  const login = () => {\n    setLoading(true);\n    setError('');\n    firebase.doSignIn(form.email, form.password).then(({\n      user\n    }) => {\n      router.push({\n        pathname: '/dashboard'\n      });\n      dispatch({\n        type: UPDATE_USER,\n        payload: user\n      });\n      dispatch({\n        type: TOGGLE_LOADING,\n        payload: true\n      });\n      fetchFiles({\n        firebase,\n        dispatch\n      }, () => {\n        // after fetching files do this\n        dispatch({\n          type: TOGGLE_LOADING,\n          payload: false\n        });\n      });\n    }).catch(err => {\n      setError(translateError(err));\n      setLoading(false);\n    });\n  };\n\n  if (!noUser) return null;\n  return __jsx(Flex, {\n    alignItems: \"center\",\n    width: [1],\n    maxWidth: \"1200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(ForgotPass, {\n    modalIsOpen: modalIsOpen,\n    onRequestClose: () => openModal(false),\n    email: form.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(Card, {\n    p: 30,\n    pr: \"0px\",\n    justifyContent: \"flex-start\",\n    width: [1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    fontSize: 30,\n    fontWeight: 600,\n    color: \"primary\",\n    width: [1],\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 81\n    }\n  }, \"Mepop Reports\")), __jsx(Text, {\n    fontSize: 18,\n    fontWeight: 500,\n    color: \"greyDark\",\n    width: [1],\n    mb: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"A tool for Depop sellers.\"), __jsx(Flex, {\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        flexDirection: 'column'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        paddingRight: '20px !important',\n        zIndex: 2\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    fontSize: \"14px\",\n    color: \"depopRed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, error), __jsx(Flex, {\n    mb: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    placeholder: \"Email\",\n    label: \"Email\",\n    bg: \"greyDisabled\",\n    type: \"email\",\n    borderRadius: \"4px\",\n    color: \"white\",\n    value: form.email,\n    onKeyPress: e => e.key === 'Enter' ? login() : null,\n    onChange: e => {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        email: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), __jsx(Input, {\n    placeholder: \"Password\",\n    label: \"Password\",\n    bg: \"greyDisabled\",\n    type: \"password\",\n    borderRadius: \"4px\",\n    color: \"white\",\n    value: form.password,\n    onKeyPress: e => e.key === 'Enter' ? login() : null,\n    onChange: e => {\n      updateForm(_objectSpread(_objectSpread({}, form), {}, {\n        password: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    m: \"2px\",\n    isLoading: isLoading,\n    type: \"button\",\n    width: [1],\n    mt: \"30px\",\n    height: \"40px\",\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Sign In\")), __jsx(Button, {\n    mt: \"10px\",\n    fontSize: \"13px\",\n    bg: \"transparent\",\n    color: \"greyDarkest\",\n    width: \"135px\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\",\n    p: \"0px\",\n    pl: \"1px\",\n    height: \"15px\",\n    type: \"button\",\n    onClick: () => openModal(!modalIsOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Forgot Password\")), __jsx(Flex, {\n    m: \"0px 0px 0px 30px\",\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        display: 'none'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(VertDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), __jsx(Flex, {\n    flexDirection: \"column\",\n    width: [1],\n    sx: {\n      '@media only screen and (max-width: 650px)': {\n        marginTop: '20px'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, __jsx(LearnMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })))));\n});\nexport default Login;\n\nconst translateError = err => {\n  switch (err.code) {\n    case 'auth/invalid-email':\n      return 'Invalid email';\n\n    case 'auth/user-disabled':\n      return 'Account temporarily disabled. Please email samote.wood@gmail.com for support.';\n\n    case 'auth/user-not-found':\n      return 'No account found with this email.';\n\n    case 'auth/wrong-password':\n      return 'Please verify password and try again.';\n\n    case 'auth/email-already-in-use':\n      return 'An account associated with this email already exists. Try logging in.';\n\n    case 'auth/operation-not-allowed':\n      return 'Error Occurred. Please email samote.wood@gmail.com for support';\n\n    case 'auth/weak-password':\n      return err.message;\n\n    default:\n      return err.message;\n  }\n};","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/signin/index.js"],"names":["useState","useEffect","withFirebase","Flex","Card","Input","Form","Button","Text","VertDivider","useDispatch","useSelector","UPDATE_USER","TOGGLE_LOADING","fetchFiles","useRouter","LearnMore","ForgotPass","Login","firebase","user","state","generalReducer","router","dispatch","form","updateForm","email","password","isLoading","setLoading","modalIsOpen","openModal","error","setError","noUser","JSON","stringify","push","login","doSignIn","then","pathname","type","payload","catch","err","translateError","flexDirection","paddingRight","zIndex","e","key","target","value","display","marginTop","code","message"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { withFirebase } from '../../firebase'\n\nimport Flex from '../../styles/layout/Flex'\nimport Card from '../../styles/elements/Card'\nimport Input from '../../styles/elements/Input'\nimport Form from '../../styles/elements/Form'\nimport Button from '../../styles/elements/Button'\nimport Text from '../../styles/elements/Text'\nimport VertDivider from '../../styles/elements/VertDivider'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_USER, TOGGLE_LOADING } from '../../store/generalReducer'\nimport { fetchFiles } from '../../store/actions/files'\nimport { useRouter } from 'next/router'\nimport LearnMore from './LearnMore'\nimport ForgotPass from './ForgotPass'\n\nconst Login = withFirebase(({ firebase }) => {\n  const { user } = useSelector(state => state.generalReducer)\n  const router = useRouter()\n  const dispatch = useDispatch()\n  const [form, updateForm] = useState({ email: 'samote.wood@gmail.com', password: '83815Mso' })\n  const [isLoading, setLoading] = useState(false)\n  const [modalIsOpen, openModal] = useState(false)\n  const [error, setError] = useState('')\n  const noUser = JSON.stringify(user) === '{}'\n  useEffect(() => {\n    if (!noUser) {\n      router.push('/dashboard')\n    }\n  }, [])\n\n  const login = () => {\n    setLoading(true)\n    setError('')\n\n    firebase.doSignIn(form.email, form.password).then(({ user }) => {\n      router.push({ pathname: '/dashboard' })\n      dispatch({\n        type: UPDATE_USER,\n        payload: user\n      })\n      dispatch({\n        type: TOGGLE_LOADING,\n        payload: true\n      })\n      fetchFiles({ firebase, dispatch }, () => {\n        // after fetching files do this\n        dispatch({\n          type: TOGGLE_LOADING,\n          payload: false\n        })\n      })\n    }).catch((err) => {\n      setError(translateError(err))\n      setLoading(false)\n    })\n  }\n  if (!noUser) return null\n  return (\n    <Flex alignItems='center' width={[1]} maxWidth='1200px'>\n      <ForgotPass modalIsOpen={modalIsOpen} onRequestClose={() => openModal(false)} email={form.email} />\n      <Card p={30} pr='0px' justifyContent='flex-start' width={[1]}>\n        <Text fontSize={30} fontWeight={600} color='primary' width={[1]} mb={2}><i>Mepop Reports</i></Text>\n        <Text fontSize={18} fontWeight={500} color='greyDark' width={[1]} mb={20}>A tool for Depop sellers.</Text>\n        <Flex\n          width={[1]}\n          sx={{\n            '@media only screen and (max-width: 650px)': {\n              flexDirection: 'column'\n            }\n          }}\n        >\n\n          <Flex\n            flexDirection='column'\n            width={[1]}\n            sx={{\n              '@media only screen and (max-width: 650px)': {\n                paddingRight: '20px !important',\n                zIndex: 2\n              }\n            }}\n          >\n            <Form>\n              <Text fontSize='14px' color='depopRed'>{error}</Text>\n              <Flex mb='15px'>\n                <Input\n                  placeholder='Email'\n                  label='Email'\n                  bg='greyDisabled'\n                  type='email'\n                  borderRadius='4px'\n                  color='white'\n                  value={form.email}\n                  onKeyPress={e => e.key === 'Enter' ? login() : null}\n                  onChange={(e) => {\n                    updateForm({ ...form, email: e.target.value })\n                  }}\n                />\n              </Flex>\n              <Input\n                placeholder='Password'\n                label='Password'\n                bg='greyDisabled'\n                type='password'\n                borderRadius='4px'\n                color='white'\n                value={form.password}\n                onKeyPress={e => e.key === 'Enter' ? login() : null}\n                onChange={(e) => {\n                  updateForm({ ...form, password: e.target.value })\n                }}\n              />\n              <Button\n                m='2px'\n                isLoading={isLoading}\n                type='button'\n                width={[1]}\n                mt='30px'\n                height='40px'\n                onClick={login}\n              >\n                Sign In\n              </Button>\n            </Form>\n            <Button\n              mt='10px'\n              fontSize='13px'\n              bg='transparent'\n              color='greyDarkest'\n              width='135px'\n              justifyContent='flex-start'\n              textAlign='left'\n              p='0px'\n              pl='1px'\n              height='15px'\n              type='button'\n              onClick={() => openModal(!modalIsOpen)}\n            >\n              Forgot Password\n            </Button>\n          </Flex>\n          <Flex\n            m='0px 0px 0px 30px'\n            sx={{\n              '@media only screen and (max-width: 650px)': {\n                display: 'none'\n              }\n            }}\n          >\n            <VertDivider />\n          </Flex>\n          <Flex\n            flexDirection='column'\n            width={[1]}\n            sx={{\n              '@media only screen and (max-width: 650px)': {\n                marginTop: '20px'\n              }\n            }}\n          >\n            <LearnMore />\n          </Flex>\n        </Flex>\n      </Card>\n    </Flex>\n  )\n})\n\nexport default Login\n\nconst translateError = (err) => {\n  switch (err.code) {\n    case 'auth/invalid-email':\n      return 'Invalid email'\n    case 'auth/user-disabled':\n      return 'Account temporarily disabled. Please email samote.wood@gmail.com for support.'\n    case 'auth/user-not-found':\n      return 'No account found with this email.'\n    case 'auth/wrong-password':\n      return 'Please verify password and try again.'\n    case 'auth/email-already-in-use':\n      return 'An account associated with this email already exists. Try logging in.'\n    case 'auth/operation-not-allowed':\n      return 'Error Occurred. Please email samote.wood@gmail.com for support'\n    case 'auth/weak-password':\n      return err.message\n    default:\n      return err.message\n  }\n}\n"]},"metadata":{},"sourceType":"module"}