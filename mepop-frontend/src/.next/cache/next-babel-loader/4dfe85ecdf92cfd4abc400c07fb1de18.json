{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/RecentSales/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { getRecentSales } from '../util/tables';\nimport Table from '../../../styles/elements/Table';\nimport SaleDetails from '../../general/SaleDetails';\nimport Flex from '../../../styles/layout/Flex';\n\nconst RecentSales = ({\n  data\n}) => {\n  const tableData = getRecentSales(data);\n  const {\n    0: activeRow,\n    1: activateRow\n  } = useState(tableData[0]);\n  const {\n    0: idx,\n    1: activateIdx\n  } = useState(0);\n  useEffect(() => {\n    if (JSON.stringify(activeRow) !== JSON.stringify(tableData[0])) {\n      activateRow(tableData[0]);\n    }\n  }, [tableData]);\n  return __jsx(Flex, {\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    background: \"mainBg\",\n    minWidth: \"300px\",\n    tableHeight: 380,\n    headerContent: \"Recent Sales\",\n    data: tableData,\n    activeRow: idx,\n    handleRowClick: row => {\n      activateRow(tableData[row.index]);\n      activateIdx(row.index);\n    },\n    columnLabels: ['date sold', 'username', 'item price'],\n    p: \"0px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), activeRow ? __jsx(SaleDetails, {\n    row: activeRow,\n    getUrl: data.getUrl,\n    currencyType: data.currency_type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }) : null);\n};\n\nexport default RecentSales; // const formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\n// const formatTooltip = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/RecentSales/index.js"],"names":["useState","useEffect","getRecentSales","Table","SaleDetails","Flex","RecentSales","data","tableData","activeRow","activateRow","idx","activateIdx","JSON","stringify","row","index","getUrl","currency_type"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,SAAS,GAAGN,cAAc,CAACK,IAAD,CAAhC;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA2BV,QAAQ,CAACQ,SAAS,CAAC,CAAD,CAAV,CAAzC;AACA,QAAM;AAAA,OAACG,GAAD;AAAA,OAAMC;AAAN,MAAqBZ,QAAQ,CAAC,CAAD,CAAnC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAI,CAACC,SAAL,CAAeL,SAAf,MAA8BI,IAAI,CAACC,SAAL,CAAeN,SAAS,CAAC,CAAD,CAAxB,CAAlC,EAAgE;AAC9DE,MAAAA,WAAW,CAACF,SAAS,CAAC,CAAD,CAAV,CAAX;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,KAAD;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,WAAW,EAAE,GAHf;AAIE,IAAA,aAAa,EAAC,cAJhB;AAKE,IAAA,IAAI,EAAEA,SALR;AAME,IAAA,SAAS,EAAEG,GANb;AAOE,IAAA,cAAc,EAAGI,GAAD,IAAS;AACvBL,MAAAA,WAAW,CAACF,SAAS,CAACO,GAAG,CAACC,KAAL,CAAV,CAAX;AACAJ,MAAAA,WAAW,CAACG,GAAG,CAACC,KAAL,CAAX;AACD,KAVH;AAWE,IAAA,YAAY,EACV,CAAC,WAAD,EAAc,UAAd,EAA0B,YAA1B,CAZJ;AAcE,IAAA,CAAC,EAAC,KAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAkBGP,SAAS,GAEN,MAAC,WAAD;AACE,IAAA,GAAG,EAAEA,SADP;AACkB,IAAA,MAAM,EAAEF,IAAI,CAACU,MAD/B;AACuC,IAAA,YAAY,EAAEV,IAAI,CAACW,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFM,GAMN,IAxBN,CADF;AA4BD,CArCD;;AAuCA,eAAgBZ,WAAhB,C,CAEA;AACA","sourcesContent":["\nimport { useState, useEffect } from 'react'\n\nimport { getRecentSales } from '../util/tables'\nimport Table from '../../../styles/elements/Table'\nimport SaleDetails from '../../general/SaleDetails'\nimport Flex from '../../../styles/layout/Flex'\n\nconst RecentSales = ({ data }) => {\n  const tableData = getRecentSales(data)\n  const [activeRow, activateRow] = useState(tableData[0])\n  const [idx, activateIdx] = useState(0)\n  useEffect(() => {\n    if (JSON.stringify(activeRow) !== JSON.stringify(tableData[0])) {\n      activateRow(tableData[0])\n    }\n  }, [tableData])\n  return (\n    <Flex flexWrap='wrap'>\n\n      <Table\n        background='mainBg'\n        minWidth='300px'\n        tableHeight={380}\n        headerContent='Recent Sales'\n        data={tableData}\n        activeRow={idx}\n        handleRowClick={(row) => {\n          activateRow(tableData[row.index])\n          activateIdx(row.index)\n        }}\n        columnLabels={\n          ['date sold', 'username', 'item price']\n        }\n        p='0px'\n      />\n      {activeRow\n        ? (\n          <SaleDetails\n            row={activeRow} getUrl={data.getUrl} currencyType={data.currency_type}\n          />\n        )\n        : null}\n    </Flex>\n  )\n}\n\nexport default (RecentSales)\n\n// const formatXAxis = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('M/D') }\n// const formatTooltip = (tickItem) => { return moment(tickItem, 'MM/DD/YYYY').format('MMM Do YYYY') }\n"]},"metadata":{},"sourceType":"module"}