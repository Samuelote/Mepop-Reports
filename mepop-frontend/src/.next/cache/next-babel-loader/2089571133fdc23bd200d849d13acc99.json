{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/dashboard/SaleTable/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport Table from '../../../styles/elements/Table';\nimport Input from '../../../styles/elements/Input';\nimport Flex from '../../../styles/layout/Flex';\nimport SaleDetails from '../../general/SaleDetails';\nimport Text from '../../../styles/elements/Text';\nimport { formatSalesTable } from '../../reports/util/tables';\n\nconst SaleTable = ({\n  data,\n  getUrl\n}) => {\n  const formattedData = formatSalesTable(data);\n  const {\n    0: searchTerm,\n    1: setTerm\n  } = useState('');\n  const {\n    0: tableData,\n    1: setTableData\n  } = useState(formattedData);\n  const {\n    0: activeRow,\n    1: activateRow\n  } = useState(tableData[0]);\n  const idx = tableData.indexOf(activeRow);\n  useEffect(() => {\n    if (!searchTerm) setTableData(data);\n    const filtered = formattedData.filter(item => {\n      return item.username.includes(searchTerm) || item.name.includes(searchTerm) || item['date sold'].includes(searchTerm) || item['item price'].includes(searchTerm) || item.name.includes(searchTerm) || item['item description'].includes(searchTerm);\n    });\n    setTableData(filtered);\n  }, [searchTerm, data]);\n  return __jsx(Flex, {\n    mb: \"30px\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    minWidth: \"500px\",\n    activeRow: idx,\n    headerContent: __jsx(Header, {\n      data: tableData,\n      setTerm: setTerm,\n      term: searchTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }\n    }),\n    data: tableData,\n    columnLabels: !activeRow ? ['date sold', 'username', 'name', 'item price', 'buyer-paid shipping', 'seller-paid shipping', 'depop fees', 'item description'] : ['date sold', 'username', 'name', 'item price'],\n    handleRowClick: (row, i) => {\n      activateRow(row.rowData);\n    },\n    p: \"0px\",\n    tableHeight: 420 - 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), activeRow ? __jsx(SaleDetails, {\n    row: activeRow,\n    getUrl: getUrl,\n    onClose: () => activateRow(null),\n    currencyType: data.currency_type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }) : null);\n};\n\nexport default SaleTable;\n\nconst Header = ({\n  data,\n  setTerm,\n  term\n}) => {\n  return __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: [1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    mr: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"All Sales - \", data.length), __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(StyledInput, {\n    borderColor: \"greyLight\",\n    placeholder: \"Search...\",\n    pl: \"10px\",\n    value: term,\n    onChange: e => setTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"SaleTable__StyledInput\",\n  componentId: \"sc-1iov6uj-0\"\n})([\"border-radius:4px;border-color:\", \";font-weight:\", \";\"], ({\n  theme\n}) => theme.colors.mainBg, ({\n  theme\n}) => theme.fontWeights.bold);","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/dashboard/SaleTable/index.js"],"names":["useState","useEffect","styled","_","Table","Input","Flex","SaleDetails","Text","formatSalesTable","SaleTable","data","getUrl","formattedData","searchTerm","setTerm","tableData","setTableData","activeRow","activateRow","idx","indexOf","filtered","filter","item","username","includes","name","row","i","rowData","currency_type","Header","term","length","e","target","value","StyledInput","theme","colors","mainBg","fontWeights","bold"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport _ from 'lodash'\n\nimport Table from '../../../styles/elements/Table'\nimport Input from '../../../styles/elements/Input'\nimport Flex from '../../../styles/layout/Flex'\nimport SaleDetails from '../../general/SaleDetails'\nimport Text from '../../../styles/elements/Text'\nimport { formatSalesTable } from '../../reports/util/tables'\n\nconst SaleTable = ({ data, getUrl }) => {\n  const formattedData = formatSalesTable(data)\n  const [searchTerm, setTerm] = useState('')\n  const [tableData, setTableData] = useState(formattedData)\n  const [activeRow, activateRow] = useState(tableData[0])\n  const idx = tableData.indexOf(activeRow)\n\n  useEffect(() => {\n    if (!searchTerm) setTableData(data)\n    const filtered = formattedData.filter((item) => {\n      return (\n        item.username.includes(searchTerm) ||\n        item.name.includes(searchTerm) ||\n        item['date sold'].includes(searchTerm) ||\n        item['item price'].includes(searchTerm) ||\n        item.name.includes(searchTerm) ||\n        item['item description'].includes(searchTerm)\n      )\n    })\n    setTableData(filtered)\n  }, [searchTerm, data])\n  return (\n    <Flex mb='30px' flexWrap='wrap'>\n      <Table\n        minWidth='500px'\n        activeRow={idx}\n        headerContent={<Header data={tableData} setTerm={setTerm} term={searchTerm} />}\n        data={tableData}\n        columnLabels={\n          !activeRow\n            ? ['date sold', 'username', 'name', 'item price', 'buyer-paid shipping', 'seller-paid shipping', 'depop fees', 'item description']\n            : ['date sold', 'username', 'name', 'item price']\n        }\n        handleRowClick={(row, i) => {\n          activateRow(row.rowData)\n        }}\n        p='0px'\n        tableHeight={420 - 40}\n      />\n      {activeRow\n        ? (\n          <SaleDetails row={activeRow} getUrl={getUrl} onClose={() => activateRow(null)} currencyType={data.currency_type} />\n        )\n        : null}\n    </Flex>\n  )\n}\n\nexport default SaleTable\n\nconst Header = ({ data, setTerm, term }) => {\n  return (\n    <Flex alignItems='center' justifyContent='space-between' width={[1]}>\n      <Text mr='5px'>\n          All Sales - {data.length}\n      </Text>\n      <Flex>\n\n        <StyledInput\n          borderColor='greyLight'\n          placeholder='Search...'\n          pl='10px'\n          value={term}\n          onChange={(e) => setTerm(e.target.value)}\n        />\n      </Flex>\n    </Flex>\n  )\n}\n\nconst StyledInput = styled(Input)`\n  border-radius: 4px;\n  border-color: ${({ theme }) => theme.colors.mainBg};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`\n"]},"metadata":{},"sourceType":"module"}