{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BarChart, Bar, XAxis, Tooltip, ResponsiveContainer, Cell, Legend } from 'recharts';\nimport Card from '../../elements/Card';\nimport theme from '../../../theme';\nimport { ChartWrap } from '../styleUtil';\n\nvar Barchart = function Barchart(_ref) {\n  var data = _ref.data,\n      xdataKey = _ref.xdataKey,\n      tickFormatter = _ref.tickFormatter,\n      labelFormatter = _ref.labelFormatter,\n      formatTooltip = _ref.formatTooltip,\n      disableAnimation = _ref.disableAnimation,\n      _ref$bars = _ref.bars,\n      bars = _ref$bars === void 0 ? [] : _ref$bars,\n      hideLegend = _ref.hideLegend,\n      props = _objectWithoutProperties(_ref, [\"data\", \"xdataKey\", \"tickFormatter\", \"labelFormatter\", \"formatTooltip\", \"disableAnimation\", \"bars\", \"hideLegend\"]);\n\n  return __jsx(Card, props, __jsx(ChartWrap, {\n    height: 400\n  }, __jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\"\n  }, __jsx(BarChart, {\n    data: data\n  }, __jsx(XAxis, {\n    dataKey: xdataKey,\n    tickFormatter: tickFormatter\n  }), __jsx(Tooltip, {\n    labelFormatter: labelFormatter,\n    formatter: formatTooltip\n  }), !hideLegend ? __jsx(Legend, {\n    verticalAlign: \"top\",\n    iconType: \"circle\"\n  }) : null, bars.map(function (_ref2, i) {\n    var size = _ref2.size,\n        dataKey = _ref2.dataKey,\n        color = _ref2.color;\n    return __jsx(Bar, {\n      isAnimationActive: typeof disableAnimation !== 'boolean',\n      key: i,\n      barSize: size,\n      dataKey: dataKey,\n      type: \"monotone\",\n      fill: theme.colors[color] || theme.colors.primary\n    });\n  })))));\n};\n\nexport default Barchart;","map":null,"metadata":{},"sourceType":"module"}