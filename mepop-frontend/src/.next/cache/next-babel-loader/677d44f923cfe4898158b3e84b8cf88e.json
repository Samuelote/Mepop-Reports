{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/SalesByTime/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useMemo, useState, memo } from 'react';\nimport moment from 'moment'; // Utils\n\nimport { groupByTime } from '../util/grouping'; // Components\n\nimport BubbleChart from '../../../styles/reporting/BubbleChart';\nimport Flex from '../../../styles/layout/Flex';\nimport styled from 'styled-components';\nimport SalesTable from '../../general/SalesTable';\nvar xLabels = ['12am', '1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am', '9am', '10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm', '9pm', '10pm', '11pm'];\nvar yLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar SalesByDate = memo(_c = _s(function (_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      coords = _useState[0],\n      activateCoords = _useState[1];\n\n  var chartData = useMemo(function () {\n    return groupByTime(data);\n  }, [data]);\n  return __jsx(Flex, {\n    flexWrap: \"wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(BubbleChart, {\n    minWidth: \"850px\",\n    isLoading: !data.sales,\n    headerContent: \"Sales By time\",\n    data: chartData.arr,\n    tooltipContent: tooltipContent,\n    xLabels: xLabels,\n    yLabels: yLabels,\n    onClick: function onClick(x, y) {\n      activateCoords({\n        x: x,\n        y: y\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), coords ? __jsx(PopOut, {\n    xLabels: xLabels,\n    yLabels: yLabels,\n    data: chartData.obj,\n    coords: coords,\n    onClose: function onClose() {\n      return activateCoords(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }) : null);\n}, \"gv73i17b7NWicWpX9UU/uaVRIQY=\"));\n_c2 = SalesByDate;\nexport default SalesByDate;\n\nvar PopOut = function PopOut(_ref2) {\n  var data = _ref2.data,\n      xLabels = _ref2.xLabels,\n      yLabels = _ref2.yLabels,\n      _ref2$coords = _ref2.coords,\n      x = _ref2$coords.x,\n      y = _ref2$coords.y,\n      onClose = _ref2.onClose;\n  var time = moment(xLabels[x], 'h a').format('H');\n  var day = yLabels[y].toLowerCase();\n  var sales = data[day][parseInt(time)] || [];\n  return __jsx(SalesTable, {\n    minWidth: \"400px\",\n    data: sales,\n    onClose: onClose,\n    headerContent: \"\".concat(day, \" - \").concat(xLabels[x]),\n    columnLabels: ['date sold', 'username', 'item price'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n};\n\n_c3 = PopOut;\n\nvar tooltipContent = function tooltipContent(value, time, day) {\n  return __jsx(Flex, {\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Strong, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Day:\"), \" \", day), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Strong, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Time:\"), \" \", time), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Strong, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Sold:\"), \" \", value, \" \", value === 1 ? 'Item' : 'Items'));\n};\n\nvar Strong = styled.strong.withConfig({\n  displayName: \"SalesByTime__Strong\",\n  componentId: \"sc-1j69m1-0\"\n})([\"margin-right:5px;\"]);\n_c4 = Strong;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SalesByDate$memo\");\n$RefreshReg$(_c2, \"SalesByDate\");\n$RefreshReg$(_c3, \"PopOut\");\n$RefreshReg$(_c4, \"Strong\");","map":{"version":3,"sources":["/Users/samuelwood/development/mepop-reports/mepop-frontend/src/components/reports/SalesByTime/index.js"],"names":["useMemo","useState","memo","moment","groupByTime","BubbleChart","Flex","styled","SalesTable","xLabels","yLabels","SalesByDate","data","coords","activateCoords","chartData","sales","arr","tooltipContent","x","y","obj","PopOut","onClose","time","format","day","toLowerCase","parseInt","value","Strong","strong"],"mappings":"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","sourcesContent":["import { useMemo, useState, memo } from 'react'\nimport moment from 'moment'\n\n// Utils\nimport { groupByTime } from '../util/grouping'\n\n// Components\nimport BubbleChart from '../../../styles/reporting/BubbleChart'\nimport Flex from '../../../styles/layout/Flex'\nimport styled from 'styled-components'\n\nimport SalesTable from '../../general/SalesTable'\n\nconst xLabels = [\n  '12am', '1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am',\n  '9am', '10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm',\n  '5pm', '6pm', '7pm', '8pm', '9pm', '10pm', '11pm'\n\n]\nconst yLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nconst SalesByDate = memo(({ data }) => {\n  const [coords, activateCoords] = useState(null)\n  const chartData = useMemo(() => groupByTime(data), [data])\n  return (\n    <Flex flexWrap='wrap'>\n\n      <BubbleChart\n        minWidth='850px'\n        isLoading={!data.sales}\n        headerContent='Sales By time'\n        data={chartData.arr}\n        tooltipContent={tooltipContent}\n        xLabels={xLabels}\n        yLabels={yLabels}\n        onClick={(x, y) => {\n          activateCoords({ x, y })\n        }}\n      />\n      {\n        coords ? (\n          <PopOut\n            xLabels={xLabels}\n            yLabels={yLabels}\n            data={chartData.obj}\n            coords={coords}\n            onClose={() => activateCoords(null)}\n          />\n\n        )\n          : null\n      }\n\n    </Flex>\n  )\n})\n\nexport default (SalesByDate)\n\nconst PopOut = ({ data, xLabels, yLabels, coords: { x, y }, onClose }) => {\n  const time = moment(xLabels[x], 'h a').format('H')\n  const day = yLabels[y].toLowerCase()\n  const sales = data[day][parseInt(time)] || []\n  return (\n    <SalesTable\n      minWidth='400px'\n      data={sales}\n      onClose={onClose}\n      headerContent={`${day} - ${xLabels[x]}`}\n      columnLabels={\n        ['date sold', 'username', 'item price']\n      }\n    />\n  )\n}\n\nconst tooltipContent = (value, time, day) => {\n  return (\n    <Flex flexDirection='column'>\n      <Flex>\n        <Strong>Day:</Strong> {day}\n      </Flex>\n      <Flex>\n        <Strong>Time:</Strong> {time}\n      </Flex>\n      <Flex>\n        <Strong>Sold:</Strong> {value} {value === 1 ? 'Item' : 'Items'}\n      </Flex>\n    </Flex>)\n}\n\nconst Strong = styled.strong`\n  margin-right: 5px;\n`\n"]},"metadata":{},"sourceType":"module"}