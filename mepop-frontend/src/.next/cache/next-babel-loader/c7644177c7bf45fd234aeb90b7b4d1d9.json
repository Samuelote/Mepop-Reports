{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from 'recharts';\nimport Switch from '../../elements/Switch';\nimport theme from '../../../theme';\nimport { Container, ChartContainer, TitleContainer, BoxTitle, SwitchContainer, BoxValue } from './styles';\nvar COLORS = [theme.colors.pastelOrange, theme.colors.pastelRose, theme.colors.greenSoft, theme.colors.pastelBlueLight];\n\nvar RadialGraph = function RadialGraph(_ref) {\n  var title = _ref.title,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      currencyType = _ref.currencyType,\n      _float = _ref[\"float\"],\n      data = _ref.data,\n      disableAnimation = _ref.disableAnimation,\n      netValue = _ref.netValue,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"value\", \"currencyType\", \"float\", \"data\", \"disableAnimation\", \"netValue\"]);\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = useState(false),\n      net = _useState2[0],\n      setNet = _useState2[1];\n\n  var _useState3 = useState(value),\n      activeVal = _useState3[0],\n      setActiveVal = _useState3[1];\n\n  useEffect(function () {\n    setActiveVal(value);\n  }, [value]);\n  return __jsx(Container, _extends({\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  }, rest), title ? __jsx(TitleContainer, null, __jsx(BoxTitle, null, title.toUpperCase()), __jsx(SwitchContainer, null, __jsx(Switch, {\n    label: \"Show Net Profit\",\n    checked: net,\n    onChange: function onChange() {\n      setNet(!net);\n      setActiveVal(value === activeVal ? netValue : value);\n    }\n  })), __jsx(BoxValue, null, currencyType, __jsx(CountUp, {\n    formattingFn: function formattingFn(num) {\n      return num.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n    },\n    decimals: _float ? 2 : 0,\n    start: activeVal === value ? parseFloat(netValue) : parseFloat(value),\n    end: _float ? parseFloat(activeVal) : typeof activeVal === 'number' ? activeVal : 0\n  }))) : null, __jsx(ChartContainer, null, __jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\"\n  }, __jsx(PieChart, null, __jsx(Pie, {\n    activeIndex: index,\n    activeShape: function activeShape(props) {\n      return __jsx(ActiveShape, _extends({}, props, {\n        currency: currencyType\n      }));\n    },\n    data: data,\n    innerRadius: 60,\n    outerRadius: 80,\n    paddingAngle: 5,\n    dataKey: \"value\",\n    isAnimationActive: typeof disableAnimation !== 'boolean',\n    onMouseEnter: function onMouseEnter(_, i) {\n      return setIndex(i);\n    }\n  }, data.map(function (_, index) {\n    return __jsx(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length]\n    });\n  }))))));\n};\n\nexport default RadialGraph;\n\nvar ActiveShape = function ActiveShape(props) {\n  var cx = props.cx,\n      cy = props.cy,\n      innerRadius = props.innerRadius,\n      outerRadius = props.outerRadius,\n      startAngle = props.startAngle,\n      endAngle = props.endAngle,\n      fill = props.fill,\n      payload = props.payload,\n      currency = props.currency;\n  var value = payload.value.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  return __jsx(\"g\", null, __jsx(\"text\", {\n    x: cx,\n    y: cy - 10,\n    dy: 8,\n    textAnchor: \"middle\",\n    fill: fill\n  }, payload.name), __jsx(\"text\", {\n    x: cx,\n    y: cy + 10,\n    dy: 8,\n    textAnchor: \"middle\",\n    fill: fill\n  }, currency, value), __jsx(Sector, {\n    cx: cx,\n    cy: cy,\n    innerRadius: innerRadius + 5,\n    outerRadius: outerRadius + 5,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    fill: fill\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}