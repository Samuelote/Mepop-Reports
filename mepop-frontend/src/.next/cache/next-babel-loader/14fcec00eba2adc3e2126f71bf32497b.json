{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport Text from '../../../styles/elements/Text';\nimport { withFirebase } from '../../../firebase';\nimport { UPDATE_USER } from '../../../store/generalReducer';\nimport { useToasts } from 'react-toast-notifications';\nimport { InputField, PasswordFields } from './inputs';\nimport { useState } from 'react';\nvar UserSettings = withFirebase(function (_ref) {\n  var firebase = _ref.firebase;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  var _useSelector = useSelector(function (state) {\n    return state.generalReducer;\n  }),\n      user = _useSelector.user;\n\n  var dispatch = useDispatch();\n\n  var _useState2 = useState(false),\n      passwordSuccess = _useState2[0],\n      setPasswordSuccess = _useState2[1];\n\n  var updateProfile = function updateProfile(key, value) {\n    var newProfile = _objectSpread({}, user.profile);\n\n    newProfile[key] = value;\n    setLoading(true);\n    firebase.setProfile(newProfile).then(function () {\n      addToast(__jsx(\"div\", null, \"Successfully Updated\"), {\n        appearance: 'success',\n        autoDismiss: true\n      });\n      dispatch({\n        type: UPDATE_USER,\n        payload: _objectSpread(_objectSpread({}, user), {}, {\n          profile: newProfile\n        })\n      });\n      setLoading(false);\n    })[\"catch\"](function (err) {\n      console.log('error', err);\n      addToast(__jsx(\"div\", null, \"Oops! Something went wrong!\"), {\n        appearance: 'error',\n        autoDismiss: true\n      });\n      setLoading(false);\n    });\n  };\n\n  var updatePass = function updatePass(passwords) {\n    setLoading(true);\n    firebase.doPasswordUpdate(passwords).then(function () {\n      setPasswordSuccess(true);\n      setLoading(false);\n      addToast(__jsx(\"div\", null, \"Successfully Updated Password\"), {\n        appearance: 'success',\n        autoDismiss: true\n      });\n    })[\"catch\"](function (err) {\n      console.log('error', err);\n      setPasswordSuccess(false);\n      setLoading(false);\n      addToast(__jsx(\"div\", null, err.message), {\n        appearance: 'error',\n        autoDismiss: true\n      });\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    fontWeight: 600,\n    fontSize: \"20px\",\n    mb: \"15px\",\n    alignSelf: \"flex-start\"\n  }, \"Personal\"), __jsx(InputField, {\n    onClick: function onClick(val) {\n      return updateProfile('firstName', val);\n    },\n    objKey: \"name\",\n    label: \"First Name\",\n    btnText: \"Save\",\n    defaultValue: user.profile.firstName,\n    placeholder: \"i.e. Harry\",\n    alwaysShowLabel: true\n  }), __jsx(InputField, {\n    onClick: function onClick(val) {\n      return updateProfile('lastName', val);\n    },\n    objKey: \"name\",\n    label: \"Last Name\",\n    btnText: \"Save\",\n    defaultValue: user.profile.lastName,\n    placeholder: \"i.e. Styles\",\n    alwaysShowLabel: true\n  }), __jsx(InputField, {\n    onClick: function onClick(val) {\n      return updateProfile('depopShopName', val);\n    },\n    objKey: \"depopShopName\",\n    label: \"Depop Shop Name\",\n    btnText: \"Save\",\n    placeholder: \"i.e. @marguillen\",\n    defaultValue: user.profile.depopShopName,\n    alwaysShowLabel: true\n  }), __jsx(PasswordFields, {\n    onClick: updatePass,\n    btnText: \"Update Password\",\n    passwordSuccess: passwordSuccess,\n    alwaysShowLabel: true,\n    isLoading: loading\n  }));\n});\nexport default UserSettings;","map":null,"metadata":{},"sourceType":"module"}