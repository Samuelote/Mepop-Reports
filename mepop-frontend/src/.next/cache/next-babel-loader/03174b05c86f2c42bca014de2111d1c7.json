{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport HeatMap from 'react-heatmap-grid';\nimport Tooltip from '../../elements/Tooltip';\nimport Card from '../../elements/Card';\nimport theme from '../../../theme';\nimport styled from 'styled-components';\nimport { transparentize } from 'polished';\n\nconst BubbleChart = (_ref) => {\n  let {\n    height,\n    color,\n    data,\n    xLabels,\n    yLabels,\n    tooltipContent,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"height\", \"color\", \"data\", \"xLabels\", \"yLabels\", \"tooltipContent\", \"onClick\"]);\n\n  return __jsx(Card, props, __jsx(ChartWrap, {\n    height: height\n  }, __jsx(HeatMap, {\n    cellStyle: getStyle,\n    background: color || theme.colors.teal,\n    xLabels: xLabels,\n    yLabels: yLabels,\n    xLabelsLocation: \"bottom\",\n    data: data,\n    onClick: onClick,\n    cellRender: (value, x, y) => __jsx(Tooltip, {\n      title: tooltipContent(value, x, y),\n      delay: 0,\n      hideOnClick: false,\n      stickyDuration: 50,\n      arrow: false,\n      offset: -25,\n      positio: \"top-start\",\n      animation: \"shift\"\n    }, __jsx(Value, null)),\n    unit: \"Items Sold\"\n  })));\n};\n\nexport default BubbleChart;\n\nconst getStyle = (bg, value, min, max) => {\n  const opacity = (max - value) / (max - min);\n  return {\n    background: transparentize(opacity < 1 ? opacity : 0.94, theme.colors.teal)\n  };\n};\n\nconst ChartWrap = styled.div.withConfig({\n  displayName: \"BubbleChart__ChartWrap\",\n  componentId: \"sc-1586wnj-0\"\n})([\"display:flex;flex-wrap:wrap;height:\", \"px;width:100%;padding:20px 10px 0px 10px;justify-content:center;>div{overflow:auto;}\"], ({\n  height\n}) => height || 300);\nconst Value = styled.div.withConfig({\n  displayName: \"BubbleChart__Value\",\n  componentId: \"sc-1586wnj-1\"\n})([\"height:30px;margin-top:-8px;\"]);","map":null,"metadata":{},"sourceType":"module"}