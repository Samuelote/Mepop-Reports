{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Button } from 'rebass';\nimport theme from '../../../theme';\nimport styled from 'styled-components';\nimport ThreeDotLoader from '../Loading/ThreeDotLoader';\nimport Flex from '../../layout/Flex';\n\nconst Btn = (_ref) => {\n  let {\n    children,\n    bg,\n    height,\n    color,\n    isLoading\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"bg\", \"height\", \"color\", \"isLoading\"]);\n\n  return __jsx(StyledButton, _extends({\n    fontSize: 15\n  }, props, {\n    bg: theme.colors[bg || 'primary'],\n    color: theme.colors[color || 'white'],\n    height: height || '35px'\n  }), isLoading ? __jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(ThreeDotLoader, {\n    color: color || 'white',\n    bg: bg || 'primary'\n  })) : children);\n};\n\nexport default Btn;\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-4wssox-0\"\n})([\"display:flex;justify-content:center;align-items:center;transition:\", \";cursor:\", \";user-select:none;overflow:hidden;letter-spacing:.5px;&:hover{opacity:.7;}\"], ({\n  theme\n}) => theme.transitionDurations[1], ({\n  disabled\n}) => disabled ? 'not-allowed' : 'pointer');","map":null,"metadata":{},"sourceType":"module"}