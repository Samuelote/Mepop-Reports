{"version":3,"file":"static/webpack/static/development/pages/files.js.e48bc7f2c105f9e05532.hot-update.js","sources":["webpack:///./components/files/FileDrop.js"],"sourcesContent":["import { withFirebase } from '../../firebase'\nimport { useState, useCallback, useEffect } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport styled from 'styled-components'\n\nimport Card from '../../styles/elements/Card'\nimport Flex from '../../styles/layout/Flex'\nimport Button from '../../styles/elements/Button'\nimport Tooltip from '../../styles/elements/Tooltip'\nimport Text from '../../styles/elements/Text'\nimport { fetchFiles } from '../../store/actions/files'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Spinner from '../../styles/elements/Loading/Spinner'\nimport InfoModal from './InfoModal'\nimport { useToasts } from 'react-toast-notifications'\n\nconst Dropzone = withFirebase(({ firebase }) => {\n  const dispatch = useDispatch()\n  const { addToast } = useToasts()\n  const { files } = useSelector(state => state.generalReducer)\n  const [loading, setLoading] = useState(files.length)\n  const [buttonDisable, disableBtns] = useState(false)\n  const [activeBtn, activateBtn] = useState(null)\n  const [modalIsOpen, toggleModal] = useState(false)\n  const startFetch = useCallback((load = true) => {\n    if (load) setLoading(true)\n    disableBtns(true)\n    fetchFiles({ firebase, dispatch }, () => {\n      setLoading(false)\n      disableBtns(false)\n      activateBtn(null)\n    })\n  }, [])\n  useEffect(() => {\n    setLoading(true)\n    startFetch()\n  }, [startFetch])\n\n  const onError = (msg) => {\n    addToast(<div>{msg || 'Error Occurred'}</div>, {\n      appearance: 'error'\n    })\n    setLoading(false)\n    disableBtns(false)\n  }\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      firebase.uploadFiles(acceptedFiles, startFetch, onError)\n    } else {\n      addToast(<div>File appears to be of wrong format.</div>, {\n        appearance: 'error',\n        autoDismiss: true\n      })\n    }\n  }, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.csv'\n  })\n\n  const deleteFile = (filename) => {\n    firebase.deleteFile(filename, (file) => {\n      // success! Now remove that file from local state or refresh files in some way.\n      startFetch(false)\n    })\n  }\n\n  return (\n\n    <Container>\n      <InfoModal modalIsOpen={modalIsOpen} toggleModal={toggleModal} />\n      <Flex justifyContent='flex-end' px='10px'>\n        <Tooltip title=\"What's this?\">\n          <Button\n            bg='transparent'\n            color='greyDarkest'\n            fontSize='20px'\n            onClick={() => toggleModal(!modalIsOpen)}\n          >\n            <i className='fa fa-question-circle' />\n          </Button>\n        </Tooltip>\n      </Flex>\n\n      <DropZone isDragActive={isDragActive} {...getRootProps()}>\n        <input {...getInputProps()} />\n        <H2>\n            Drop files here\n        </H2>\n        <p>or</p>\n        <Button color='blue' bg='white' size='lg'>Select Files</Button>\n        <p>Files must be from Depop to be valid</p>\n      </DropZone>\n      {\n        <Card headerContent='Uploaded Files' isLoading={loading} minHeight='200px' mb='100px'>\n          {\n            files.length\n              ? (\n                <Table>{files.map(({ filename }, i) => (\n                  <Row key={i} index={i}>\n                    <Tooltip\n                      title='Delete file'\n                      arrow={false}\n                      position='right'\n                    >\n                      <DeleteBtn\n                        disabled={buttonDisable}\n                        aria-label={`Click to delete ${filename}`}\n                        onClick={() => {\n                          deleteFile(filename)\n                          activateBtn(i)\n                        }}\n                      >\n                        {\n                          buttonDisable && activeBtn === i ? (\n                            <Spinner width='9px' color='red' size='2' />\n                          ) : (\n                            <i\n                              className='fa fa-close'\n                            />\n                          )\n                        }\n                      </DeleteBtn>\n                    </Tooltip>\n                    {filename}\n                  </Row>\n                )\n                )}\n                </Table>\n              )\n              : <Text fontSize='20px' pt='1em' color='greyDark'>Upload Files Above</Text>\n          }\n\n        </Card>\n      }\n\n    </Container>\n  )\n})\n\nexport default Dropzone\n\nconst Container = styled.div`\n  width:100%;\n`\n\nconst DropZone = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 15px;\n  min-height: 250px;\n  margin-top: 10px;\n  transition: .2s;\n  position:relative;\n  border: 5px dashed ${({ theme, isDragActive }) => isDragActive ? theme.colors.greyDark : theme.colors.greyLight};\n  border-radius: ${({ theme, isDragActive }) => isDragActive ? theme.borderRadius.more : theme.borderRadius.normal};\n`\n\nconst H2 = styled.h2`\n    margin: 0;\n    margin-top: 10px;\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n`\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 3px 0px 3px 5px;\n  border-bottom: ${({ theme, key }) => theme.colors.mainBg} 1px solid;\n  /* background: ${({ theme, index }) => index % 2 === 0 ? theme.colors.mainBg : theme.colors.greyLighter}; */\n`\nconst DeleteBtn = styled.button`\n  margin-right: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.red};\n  height: 25px;\n  width: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction\n  &:hover {\n    color: ${({ theme }) => theme.colors.redDark};\n  }\n`\nconst Table = styled.div`\n  max-height: 250px;\n  overflow: auto;\n  width: 100%;\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAvCA;AAyCA;AACA;AAFA;AAxnBA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AA3HA;AAAA;AAAA;AA6HA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAbA;AAgBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAQA;AAAA;AAAA;AAXA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}